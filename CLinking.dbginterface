fm ((((def(OPENSSL_NO_ENGINE)|def(_CRAY)|def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_GMP))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|!def(OPENSSL_NO_GMP))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_NURON))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_CSWIFT)))|((def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_ATALLA))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_AEP))))&def(OPENSSL_NO_ERR)&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|((def(__i386__)|((def(__i386)|def(OPENSSL_NO_INLINE_ASM)|def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|!def(OPENSSL_NO_INLINE_ASM)|def(OPENSSL_NO_ENGINE)))|def(OPENSSL_NO_HW_PADLOCK))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_HW_PADLOCK)|!def(OPENSSL_NO_INLINE_ASM)|def(OPENSSL_NO_ENGINE)|!def(__i386__))&(def(OPENSSL_NO_INLINE_ASM)|def(OPENSSL_NO_HW_PADLOCK)|def(OPENSSL_NO_ENGINE)|!def(__i386__)|(def(OPENSSL_NO_DYNAMIC_ENGINE)&!def(DYNAMIC_ENGINE)))&(def(OPENSSL_NO_INLINE_ASM)|def(OPENSSL_NO_HW_PADLOCK)|def(__i386__)|!def(__i386)|def(OPENSSL_NO_ENGINE)|(def(OPENSSL_NO_DYNAMIC_ENGINE)&!def(DYNAMIC_ENGINE)))))&def(OPENSSL_NO_HMAC)&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_CHIL)|((def(OPENSSL_NO_INLINE_ASM)|def(OPENSSL_NO_HW_PADLOCK)|def(__i386__)|!def(__i386)|def(OPENSSL_NO_ENGINE)|(def(OPENSSL_NO_DYNAMIC_ENGINE)&!def(DYNAMIC_ENGINE)))&(def(OPENSSL_NO_INLINE_ASM)|def(OPENSSL_NO_HW_PADLOCK)|def(OPENSSL_NO_ENGINE)|!def(__i386__)|(def(OPENSSL_NO_DYNAMIC_ENGINE)&!def(DYNAMIC_ENGINE)))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE))))&(def(OPENSSL_NO_HMAC)|!def(DO_TEST)|!def(TEST))&(def(OPENSSL_NO_ENGINE)|((def(OPENSSL_NO_ERR)|def(OPENSSL_NO_HW_4758_CCA))&(!def(CCA4758_LIB_NAME)|!def(OPENSSL_NO_ERR)|def(OPENSSL_NO_HW_4758_CCA))))&((!def(AES_WRAP_TEST)&!def(TEST)&(def(OPENSSL_NO_HMAC)|!def(DO_TEST)))|(!def(TEST)&!def(STRING_TABLE_TEST)))&(((def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_CSWIFT))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_NURON)))|((def(OPENSSL_NO_ENGINE)|def(_CRAY)|def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_GMP))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|!def(OPENSSL_NO_GMP))))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_NURON)|def(OPENSSL_NO_HW_CSWIFT))&(((def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_CSWIFT))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_NURON)))|((def(OPENSSL_NO_ENGINE)|def(_CRAY)|def(OPENSSL_NO_DYNAMIC_ENGINE))&(def(OPENSSL_NO_ENGINE)|!def(_CRAY)|def(OPENSSL_NO_DYNAMIC_ENGINE)|!def(OPENSSL_NO_GMP))))&!def(GOST_LIB_NAME)&(((def(OPENSSL_NO_INLINE_ASM)|def(OPENSSL_NO_HW_PADLOCK)|def(__i386__)|!def(__i386)|def(OPENSSL_NO_ENGINE)|(def(OPENSSL_NO_DYNAMIC_ENGINE)&!def(DYNAMIC_ENGINE)))&(def(OPENSSL_NO_INLINE_ASM)|def(OPENSSL_NO_HW_PADLOCK)|def(OPENSSL_NO_ENGINE)|!def(__i386__)|(def(OPENSSL_NO_DYNAMIC_ENGINE)&!def(DYNAMIC_ENGINE)))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)))|((def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_SUREWARE))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(__COMPILE_CAPIENG)|def(OPENSSL_NO_ENGINE))))&def(OPENSSL_NO_ENGINE)&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_AEP)|def(OPENSSL_NO_HW_ATALLA))&(def(OPENSSL_NO_CMS)|def(OPENSSL_SYS_SUNOS)|def(__ultrix)|((def(OPENSSL_NO_CMS)|def(OPENSSL_SYS_SUNOS)|!def(__ultrix))&(!def(OPENSSL_SYS_SUNOS)|def(OPENSSL_NO_CMS))))&(!def(TEST)|!def(STRING_TABLE_TEST))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(__COMPILE_CAPIENG)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_SUREWARE))&(!def(AES_WRAP_TEST)|(!def(TEST)&(def(OPENSSL_NO_HMAC)|!def(DO_TEST))))&!def(SELFTEST)&(((def(OPENSSL_NO_ENGINE)|def(_CRAY)|def(OPENSSL_NO_DYNAMIC_ENGINE))&(def(OPENSSL_NO_ENGINE)|!def(_CRAY)|def(OPENSSL_NO_DYNAMIC_ENGINE)|!def(OPENSSL_NO_GMP))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_NURON))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_CSWIFT)))|((def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_ATALLA))&(def(OPENSSL_NO_DYNAMIC_ENGINE)|def(OPENSSL_NO_ENGINE)|def(OPENSSL_NO_HW_AEP)))))
features (0)
	
imports (114)
	AES_cbc_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, unsigned char*, const signed int) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1741:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1741:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1727:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1727:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1713:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1713:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:557:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:529:15
	AES_ctr32_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, const unsigned char[]) => void 		if def(AES_CTR_ASM)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:849:24, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:849:24, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:561:31, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:561:31
	AES_decrypt: (const unsigned char*, unsigned char*, const struct aes_key_st*) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ecb.c:71:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c:312:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c:293:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c:190:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c:163:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_wrap.c:127:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1102:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:527:27, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:509:27
	AES_encrypt: (const unsigned char*, unsigned char*, const struct aes_key_st*) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1793:63, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1793:63, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1793:63, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1793:63, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ecb.c:69:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c:79:71, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c:79:71, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c:72:71, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c:72:71, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c:64:66, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c:64:66, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c:266:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c:243:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c:133:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c:107:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_wrap.c:84:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ofb.c:59:62, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ofb.c:59:62, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ctr.c:60:73, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ctr.c:60:73, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1226:28, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1226:28, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1107:33, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1097:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:847:56, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:847:56, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:830:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:830:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:555:27, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:537:27
	AES_xts_decrypt: (const char*, char*, unsigned long, const struct aes_key_st*, const struct aes_key_st*, const unsigned char[]) => void 		if def(AES_XTS_ASM)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1062:41, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1062:41
	AES_xts_encrypt: (const char*, char*, unsigned long, const struct aes_key_st*, const struct aes_key_st*, const unsigned char[]) => void 		if def(AES_XTS_ASM)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1062:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1062:23
	ASN1_d2i_bio: ((void) => void**, (void**, const unsigned char**, signed long) => void**, struct bio_st*, void**) => void* 		if def(NO_OLD_ASN1)		at file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56, file /usr/include/openssl/asn1.h:1005:56
	ASN1_d2i_fp: ((void) => void**, (void**, const unsigned char**, signed long) => void**, struct _IO_FILE*, void**) => void* 		if def(NO_OLD_ASN1)		at file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /usr/include/openssl/asn1.h:977:55, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509/x_all.c:245:8
	ASN1_dup: ((void*, unsigned char**) => signed int*, (void**, const unsigned char**, signed long) => void**, void*) => void* 		if def(NO_OLD_ASN1)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509v3/v3_genn.c:105:25
	ASN1_i2d_bio: ((void*, unsigned char**) => signed int*, struct bio_st*, unsigned char*) => signed int 		if def(NO_OLD_ASN1)		at file /usr/include/openssl/asn1.h:1019:51, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1019:51, file /usr/include/openssl/asn1.h:1019:51, file /usr/include/openssl/asn1.h:1019:51, file /usr/include/openssl/asn1.h:1019:51, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1019:51, file /usr/include/openssl/asn1.h:1019:51, file /usr/include/openssl/asn1.h:1019:51, file /usr/include/openssl/asn1.h:1019:51, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1014:45, file /usr/include/openssl/asn1.h:1019:51, file /usr/include/openssl/asn1.h:1014:45
	ASN1_i2d_fp: ((void*, unsigned char**) => signed int*, struct _IO_FILE*, void*) => signed int 		if def(NO_OLD_ASN1)		at file /usr/include/openssl/asn1.h:991:50, file /usr/include/openssl/asn1.h:991:50, file /usr/include/openssl/asn1.h:991:50, file /usr/include/openssl/asn1.h:991:50, file /usr/include/openssl/asn1.h:986:44, file /usr/include/openssl/asn1.h:986:44, file /usr/include/openssl/asn1.h:986:44, file /usr/include/openssl/asn1.h:986:44, file /usr/include/openssl/asn1.h:986:44, file /usr/include/openssl/asn1.h:986:44, file /usr/include/openssl/asn1.h:986:44, file /usr/include/openssl/asn1.h:991:50, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509/x_all.c:257:8
	BF_cbc_encrypt: (const unsigned char*, unsigned char*, signed long, const struct bf_key_st*, unsigned char*, signed int) => void 		if ((def(OPENSSL_NO_BF)|def(BF_DEFAULT_OPTIONS))&((!def(OPENSSL_NO_DES)&!def(OPENSSL_NO_BF))|(!def(OPENSSL_NO_BF)&def(BF_DEFAULT_OPTIONS)&(def(OPENSSL_NO_BF)|def(BF_DEFAULT_OPTIONS)))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1925:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1925:4, string literal: BF_cbc_encrypt:1:0, string literal: BF_cbc_encrypt:1:0, string literal: BF_cbc_encrypt:1:0, string literal: BF_cbc_encrypt:1:0
	BF_decrypt: (unsigned int*, const struct bf_key_st*) => void 		if (!def(_CRAY)&!def(OPENSSL_NO_BF)&(def(BF_DEFAULT_OPTIONS)|def(_CRAY)|def(OPENSSL_NO_BF)))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c:91:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c:91:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c:91:2
	BF_decrypt: (unsigned long*, const struct bf_key_st*) => void 		if (def(_CRAY)&!def(OPENSSL_NO_BF)&(def(BF_DEFAULT_OPTIONS)|!def(_CRAY)|def(OPENSSL_NO_BF)))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c:91:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c:91:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c:91:2
	BIO_new_file: (const char*, const char*) => struct bio_st* 		if def(HEADER_BSS_FILE_C)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c:1659:9, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c:511:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c:243:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c:235:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs8.c:259:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs8.c:247:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:807:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:807:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:782:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:782:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:739:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:739:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:637:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:637:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:624:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:624:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1138:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:664:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c:291:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c:271:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c:257:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:649:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c:832:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c:652:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c:642:18, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c:610:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c:267:20, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c:233:18, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c:209:21, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c:2838:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c:2838:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c:2506:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c:2506:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/nseq.c:117:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/nseq.c:109:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:400:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:400:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:379:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:379:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:1047:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:1027:21, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:972:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:945:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:906:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:809:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:690:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:530:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:479:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:445:18, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1522:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1522:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1208:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1208:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkey.c:212:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyparam.c:160:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyparam.c:148:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:471:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:471:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:328:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:328:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:327:9, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:327:9, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c:1238:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c:869:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c:841:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c:816:18, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c:784:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c:257:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genpkey.c:327:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genpkey.c:226:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509v3/v3_pci.c:164:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ts/ts_conf.c:141:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ts/ts_conf.c:115:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ts/ts_conf.c:99:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509/by_file.c:272:6, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_lib.c:99:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_def.c:192:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c:377:6, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c:377:6
	BIO_new_fp: (struct _IO_FILE*, signed int) => struct bio_st* 		if def(HEADER_BSS_FILE_C)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c:249:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c:240:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c:111:24, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs8.c:268:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs8.c:255:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs8.c:93:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:625:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:625:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:169:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c:169:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:2484:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1136:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:691:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c:280:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c:266:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c:110:24, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c:661:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c:618:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c:269:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c:234:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c:211:9, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c:102:25, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c:1498:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c:1498:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c:983:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c:983:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ciphers.c:111:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ciphers.c:111:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ciphers.c:110:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ciphers.c:110:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/nseq.c:123:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/nseq.c:114:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/nseq.c:79:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:393:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:393:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:378:22, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:378:22, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:134:36, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:134:36, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:529:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/engine.c:362:9, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/engine.c:362:9, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/engine.c:358:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/engine.c:358:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1086:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1086:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:636:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:636:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkey.c:221:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkey.c:87:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyparam.c:169:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyparam.c:156:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyparam.c:82:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:330:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:330:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c:878:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c:792:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_time.c:350:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_time.c:350:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c:539:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c:539:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c:493:20, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c:493:20, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genpkey.c:235:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genpkey.c:94:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c:223:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c:219:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pk8.c:229:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pk8.c:216:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pkey.c:232:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509v3/pcy_tree.c:103:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509v3/v3_prn.c:229:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_strex.c:533:9, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_sap.c:96:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_lib.c:370:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_lib.c:281:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_lib.c:211:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_lib.c:119:13
	BIO_s_file: (void) => struct bio_method_st* 		if def(HEADER_BSS_FILE_C)		at file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c:264:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c:264:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c:263:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c:263:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c:107:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c:107:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c:91:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c:91:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c:91:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c:91:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c:82:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c:82:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c:82:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c:82:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c:186:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c:186:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c:185:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c:185:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c:99:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c:99:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c:611:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c:611:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c:610:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c:610:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c:204:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c:204:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c:250:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c:250:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c:249:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c:249:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c:120:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c:120:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/srp.c:315:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/srp.c:315:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/srp.c:315:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/srp.c:315:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c:241:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c:241:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c:240:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c:240:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c:131:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c:131:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1947:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1947:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1902:20, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1902:20, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1800:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1800:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1677:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1677:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1599:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:1599:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:986:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:986:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:895:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:895:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:792:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:792:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendh.c:166:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendh.c:166:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendh.c:106:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendh.c:106:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rand.c:186:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rand.c:186:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rand.c:95:25, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rand.c:95:25, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:1587:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:1587:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:716:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:716:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:715:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:715:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:714:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:714:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:713:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:713:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:344:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:344:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/verify.c:104:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/verify.c:104:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/prime.c:112:25, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/prime.c:112:25, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/prime.c:74:22, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/prime.c:74:22, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c:129:25, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c:129:25, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c:411:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c:411:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c:344:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c:344:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c:169:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c:169:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c:410:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c:410:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c:347:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c:347:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c:131:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c:131:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c:124:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c:124:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsa.c:266:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsa.c:266:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsa.c:123:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsa.c:123:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:162:43, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c:162:43, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c:193:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c:193:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c:84:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c:84:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c:79:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c:79:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c:303:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c:303:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c:302:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c:302:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c:141:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c:141:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genrsa.c:121:18, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genrsa.c:121:18, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genrsa.c:116:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genrsa.c:116:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c:303:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c:303:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c:175:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c:175:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c:174:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c:174:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c:103:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c:103:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c:148:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c:148:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:294:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:294:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:294:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:294:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:141:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:141:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:141:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:141:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c:230:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c:230:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c:215:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c:215:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c:95:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c:95:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c:153:25, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c:153:25, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c:383:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c:383:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c:382:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c:382:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c:137:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c:137:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:286:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:286:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:286:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:286:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:203:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:203:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:203:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:203:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:104:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:104:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:104:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c:104:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c:220:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c:220:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c:219:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c:219:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c:107:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c:107:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c:193:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c:193:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c:192:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c:192:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c:103:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c:103:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c:291:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c:291:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c:291:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c:291:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:655:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:655:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:655:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:655:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c:676:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c:676:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c:577:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c:577:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c:108:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c:108:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c:92:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c:92:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c:76:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c:76:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:655:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:655:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:575:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:575:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:321:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:321:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:173:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:173:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pkey.c:214:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pkey.c:214:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_info.c:79:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_info.c:79:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/mem_dbg.c:835:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/mem_dbg.c:835:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_prn.c:70:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_prn.c:70:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/err/err_prn.c:94:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/err/err_prn.c:94:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_print.c:325:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_print.c:325:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/srp/srp_vfy.c:372:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/srp/srp_vfy.c:372:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/srp/srp_vfy.c:372:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/srp/srp_vfy.c:372:19, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_i2d_fp.c:125:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_i2d_fp.c:125:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_i2d_fp.c:72:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_i2d_fp.c:72:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_crl.c:73:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_crl.c:73:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_req.c:79:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_req.c:79:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_x509.c:88:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_x509.c:88:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_d2i_fp.c:129:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_d2i_fp.c:129:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_d2i_fp.c:75:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_d2i_fp.c:75:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dh/dh_prn.c:70:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dh/dh_prn.c:70:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c:170:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c:170:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c:158:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c:158:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c:146:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c:146:12, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dsa/dsa_prn.c:86:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dsa/dsa_prn.c:86:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dsa/dsa_prn.c:70:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dsa/dsa_prn.c:70:16, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29, file /usr/include/openssl/bio.h:635:29
	Camellia_DecryptBlock_Rounds: (signed int, const unsigned char[], const unsigned int[], unsigned char[]) => void 		if !def(OPENSSL_NO_CAMELLIA)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c:79:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c:79:1
	Camellia_Ekeygen: (signed int, const unsigned char*, unsigned int[]) => signed int 		if !def(OPENSSL_NO_CAMELLIA)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c:66:21, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c:66:21
	Camellia_EncryptBlock_Rounds: (signed int, const unsigned char[], const unsigned int[], unsigned char[]) => void 		if !def(OPENSSL_NO_CAMELLIA)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c:73:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c:73:1
	Camellia_cbc_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct camellia_key_st*, unsigned char*, const signed int) => void 		if !def(OPENSSL_NO_CAMELLIA)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1845:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1845:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1831:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1831:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1817:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1817:4, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0, string literal: Camellia_cbc_encrypt:1:0
	DES_ede3_cbc_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, struct DES_ks*, struct DES_ks*, unsigned char[]*, signed int) => void 		if (!def(OPENSSL_NO_DES)&def(DES_DEFAULT_OPTIONS))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1697:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1697:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/des_old.c:151:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/des_old.c:151:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des3.c:145:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des3.c:145:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des3.c:137:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des3.c:137:2
	DES_ncbc_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, unsigned char[]*, signed int) => void 		if (!def(OPENSSL_NO_DES)&def(DES_DEFAULT_OPTIONS))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1683:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1683:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/des_old.c:106:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/des_old.c:106:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/rpc_enc.c:78:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/rpc_enc.c:78:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des.c:111:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des.c:111:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des.c:104:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des.c:104:2
	OPENSSL_cleanse: (void*, unsigned long) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_lib.c:2997:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_lib.c:2997:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c:1486:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c:1486:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c:1485:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c:1485:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c:1035:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c:1035:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c:2886:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c:2886:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c:2885:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c:2885:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c:2301:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c:2301:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:664:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:664:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:570:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:570:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:569:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:569:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:568:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:568:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:567:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:567:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:241:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c:241:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c:781:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c:781:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c:757:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c:757:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c:756:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c:756:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c:755:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c:755:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c:461:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c:461:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c:379:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c:379:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c:378:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c:378:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c:210:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c:210:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s2_lib.c:360:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s2_lib.c:360:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c:423:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c:423:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c:403:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c:403:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c:396:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c:396:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c:364:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c:364:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c:247:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c:247:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c:2757:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c:2757:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c:2705:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c:2705:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c:2663:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c:2663:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c:2315:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c:2315:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c:2251:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c:2251:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:621:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:615:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:605:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c:763:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c:2351:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c:2351:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1902:21, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1902:21, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1901:21, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1901:21, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1900:21, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c:1900:21, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:540:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c:540:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c:565:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c:563:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/engines/e_sureware.c:924:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/engines/e_sureware.c:924:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_decr.c:179:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_decr.c:147:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crpt.c:110:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crpt.c:109:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_key.c:97:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ecdsa/ecs_lib.c:187:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_one.c:75:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_one.c:75:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha1_one.c:75:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c:63:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c:50:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_one.c:75:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:259:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:259:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:246:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:246:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_lib.c:745:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_lib.c:166:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_lib.c:162:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_key.c:136:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_mult.c:178:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_mult.c:174:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pk8.c:138:18, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pvkfmt.c:916:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pvkfmt.c:839:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pvkfmt.c:792:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pvkfmt.c:778:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_seal.c:117:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:641:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:631:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:472:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:471:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:430:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:427:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:426:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:425:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:424:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c:399:36, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pkey.c:135:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_info.c:403:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_info.c:402:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:1451:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_saos.c:145:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_saos.c:99:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_eay.c:731:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_eay.c:626:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_eay.c:486:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_eay.c:249:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_sign.c:300:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_sign.c:148:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c:291:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c:204:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c:121:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c:120:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c:119:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c:118:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_rand.c:204:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:825:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_lib.c:251:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_lib.c:246:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c:138:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c:138:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c:137:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c:137:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c:125:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c:125:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c:124:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c:124:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/str2key.c:171:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/str2key.c:171:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/str2key.c:98:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/str2key.c:98:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_sign.c:331:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_sign.c:329:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_sign.c:210:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_sign.c:208:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_verify.c:209:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_verify.c:112:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/p8_pkey.c:72:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/n_pkey.c:315:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/n_pkey.c:218:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/n_pkey.c:197:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/mdc2/mdc2_one.c:73:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/mdc2/mdc2_one.c:73:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c:394:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c:394:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/randfile.c:266:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/randfile.c:174:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c:186:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c:186:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c:183:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c:183:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_wrap.c:135:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/mem.c:376:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ecdh/ech_lib.c:209:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs7/pk7_doit.c:616:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs7/pk7_doit.c:610:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs7/pk7_doit.c:596:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs7/pk7_doit.c:368:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs7/pk7_doit.c:247:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_one.c:94:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_one.c:94:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/p5_crpt.c:138:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/p5_crpt.c:137:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/p5_crpt.c:136:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/evp_enc.c:578:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/bio_ok.c:205:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_idea.c:112:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/bio_enc.c:135:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/p5_crpt2.c:310:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/evp_key.c:186:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/evp_key.c:111:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/p_open.c:108:18, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/digest.c:385:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1297:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:947:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:680:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_one.c:94:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ui/ui_util.c:65:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ui/ui_openssl.c:470:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c:230:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c:230:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c:224:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c:224:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c:186:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c:186:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_asn1.c:245:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_asn1.c:245:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_asn1.c:236:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_asn1.c:236:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_pwri.c:272:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_pwri.c:272:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c:866:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c:866:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c:780:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c:780:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c:699:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c:699:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c:423:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c:423:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/hmac/hm_pmeth.c:121:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/hmac/hm_pmeth.c:121:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/hmac/hm_ameth.c:81:3
	OPENSSL_cpuid_setup: (void) => void 		if def(OPENSSL_NO_ASM)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/c_all.c:82:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_all.c:65:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_all.c:65:1
	OPENSSL_ia32_cpuid: (void) => unsigned long long 		if !def(OPENSSL_NO_ASM)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cryptlib.c:706:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cryptlib.c:706:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cryptlib.c:703:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cryptlib.c:703:16
	PKCS12_gen_mac: (struct {Map()}*, const char*, signed int, unsigned char*, unsigned int*) => signed int 		if def(OPENSSL_NO_HMAC)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_npas.c:159:5
	PKCS12_set_mac: (struct {Map()}*, const char*, signed int, unsigned char*, signed int, signed int, const struct env_md_st*) => signed int 		if (!def(OPENSSL_NO_DES)|def(OPENSSL_NO_HMAC))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:603:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:603:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:170:3
	PKCS12_verify_mac: (struct {Map()}*, const char*, signed int) => signed int 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:771:7, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:756:38, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c:756:5, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:659:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:659:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:656:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c:656:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_npas.c:89:6, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_kiss.c:113:13, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_kiss.c:108:10, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_kiss.c:107:5
	RAND_SSLeay: (void) => struct rand_meth_st* 		if (((!def(USE_MD5_RAND)&def(OPENSSL_NO_DES)&def(USE_MDC2_RAND)&!def(USE_SHA1_RAND))|(!def(OPENSSL_NO_ENGINE)&!def(TEST_ENG_OPENSSL_NO_ALGORITHMS)))&!def(USE_SHA1_RAND)&!def(USE_MD5_RAND)&def(OPENSSL_NO_DES)&def(USE_MDC2_RAND))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_lib.c:111:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_lib.c:111:23, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c:152:26, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c:152:26, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c:152:26, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c:152:26
	RAND_poll: (void) => signed int 		if ((!def(OPENSSL_NO_DES)|((def(USE_MD5_RAND)|((def(OPENSSL_SYS_VOS)|def(USE_SHA1_RAND)|def(USE_MDC2_RAND))&(!def(USE_SHA1_RAND)|def(OPENSSL_SYS_VOS))))&(!def(USE_MD5_RAND)|def(OPENSSL_SYS_VOS))))&(def(OPENSSL_NO_DES)|def(OPENSSL_SYS_VOS))&(def(OPENSSL_NO_DES)|(!def(OPENSSL_SYS_VOS_HPPA)&!def(OPENSSL_SYS_VOS_IA32))|!def(OPENSSL_SYS_VOS))&(!def(OPENSSL_NO_DES)|((def(USE_MD5_RAND)|((def(USE_SHA1_RAND)|def(USE_MDC2_RAND)|(!def(OPENSSL_SYS_VOS_HPPA)&!def(OPENSSL_SYS_VOS_IA32))|!def(OPENSSL_SYS_VOS))&(!def(USE_SHA1_RAND)|(!def(OPENSSL_SYS_VOS_HPPA)&!def(OPENSSL_SYS_VOS_IA32))|!def(OPENSSL_SYS_VOS))))&(!def(USE_MD5_RAND)|(!def(OPENSSL_SYS_VOS_HPPA)&!def(OPENSSL_SYS_VOS_IA32))|!def(OPENSSL_SYS_VOS))))&(def(USE_MD5_RAND)|!def(OPENSSL_NO_DES)|!def(USE_MDC2_RAND)|def(USE_SHA1_RAND)))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c:577:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c:577:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c:394:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c:394:2
	RC4: (struct rc4_key_st*, unsigned long, const unsigned char*, unsigned char*) => void 		if !def(OPENSSL_NO_RC4)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1668:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1668:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:198:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:198:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:180:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:180:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:169:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:169:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:167:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:167:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:140:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:140:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4.c:134:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4.c:134:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c:246:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c:246:1
	RC4_options: (void) => const char* 		if !def(OPENSSL_NO_RC4)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c:199:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c:199:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c:199:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c:199:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:2405:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:2405:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:2405:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:2405:15
	RC5_32_cbc_encrypt: (const unsigned char*, unsigned char*, signed long, struct rc5_key_st*, unsigned char*, signed int) => void 		if !def(OPENSSL_NO_RC5)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1909:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1909:4, string literal: RC5_32_cbc_encrypt:1:0, string literal: RC5_32_cbc_encrypt:1:0, string literal: RC5_32_cbc_encrypt:1:0, string literal: RC5_32_cbc_encrypt:1:0
	RC5_32_cfb64_encrypt: (const unsigned char*, unsigned char*, signed long, struct rc5_key_st*, unsigned char*, signed int*, signed int) => void 		if !def(OPENSSL_NO_RC5)		at string literal: RC5_32_cfb64_encrypt:1:0, string literal: RC5_32_cfb64_encrypt:1:0
	RC5_32_ecb_encrypt: (const unsigned char*, unsigned char*, struct rc5_key_st*, signed int) => void 		if !def(OPENSSL_NO_RC5)		at string literal: RC5_32_ecb_encrypt:1:0, string literal: RC5_32_ecb_encrypt:1:0
	RC5_32_ofb64_encrypt: (const unsigned char*, unsigned char*, signed long, struct rc5_key_st*, unsigned char*, signed int*) => void 		if !def(OPENSSL_NO_RC5)		at string literal: RC5_32_ofb64_encrypt:1:0, string literal: RC5_32_ofb64_encrypt:1:0, string literal: RC5_32_ofb64_encrypt:1:0, string literal: RC5_32_ofb64_encrypt:1:0
	RC5_32_set_key: (struct rc5_key_st*, signed int, const unsigned char*, signed int) => void 		if !def(OPENSSL_NO_RC5)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1246:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c:1246:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc5.c:121:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc5.c:121:1
	_openssl_ascii2ebcdic: (void*, const void*, unsigned long) => void* 		if (!def(OPENSSL_NO_DES)&def(_OSD_POSIX))		at file /usr/include/openssl/ebcdic.h:12:21, file /usr/include/openssl/ebcdic.h:12:21
	_openssl_ebcdic2ascii: (void*, const void*, unsigned long) => void* 		if (!def(OPENSSL_NO_DES)&def(_OSD_POSIX))		at file /usr/include/openssl/ebcdic.h:11:21, file /usr/include/openssl/ebcdic.h:11:21, file /usr/include/openssl/ebcdic.h:11:21, file /usr/include/openssl/ebcdic.h:11:21
	aesni_cbc_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, unsigned char*, signed int) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c:240:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c:233:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c:230:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:268:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:249:31, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:242:15
	aesni_cbc_sha1_enc: (const void*, void*, unsigned long, const struct aes_key_st*, unsigned char[], struct SHAstate_st*, const void*) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c:201:3
	aesni_ccm64_decrypt_blocks: (const unsigned char*, unsigned char*, unsigned long, const void*, const unsigned char[], unsigned char[]) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:401:14
	aesni_ccm64_encrypt_blocks: (const unsigned char*, unsigned char*, unsigned long, const void*, const unsigned char[], unsigned char[]) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:400:28
	aesni_ctr32_encrypt_blocks: (const unsigned char*, unsigned char*, unsigned long, const void*, const unsigned char*) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:316:24, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:251:31
	aesni_decrypt: (const unsigned char*, unsigned char*, const struct aes_key_st*) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:365:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:240:27
	aesni_ecb_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, signed int) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:280:1
	aesni_encrypt: (const unsigned char*, unsigned char*, const struct aes_key_st*) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:399:28, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:399:28, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:371:33, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:359:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:315:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:315:16, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:247:27
	aesni_set_decrypt_key: (const unsigned char*, signed int, struct aes_key_st*) => signed int 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c:123:6, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:364:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:239:8
	aesni_set_encrypt_key: (const unsigned char*, signed int, struct aes_key_st*) => signed int 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c:121:6, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:397:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:369:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:358:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:313:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:246:8
	aesni_xts_decrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, const struct aes_key_st*, const unsigned char[]) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:366:18
	aesni_xts_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, const struct aes_key_st*, const unsigned char[]) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:360:18
	bn_GF2m_mul_2x2: (unsigned long*, unsigned long, unsigned long, unsigned long, unsigned long) => void 		if !def(OPENSSL_NO_EC2M)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_gf2m.c:417:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_gf2m.c:417:3
	bn_div_3_words: (unsigned long*, unsigned long, unsigned long) => unsigned long 		if (!def(OPENSSL_NO_ASM)&def(BN_DIV3W))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_div.c:321:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_div.c:321:4
	bn_gather5: (unsigned long*, unsigned long, void*, unsigned long) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:746:1
	bn_mul_mont: (unsigned long*, const unsigned long*, const unsigned long*, const unsigned long*, const unsigned long*, signed int) => signed int 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mont.c:140:6, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:760:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:759:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:758:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:757:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:756:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:734:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:726:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:716:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:702:1
	bn_mul_mont_gather5: (unsigned long*, const unsigned long*, const void*, const unsigned long*, const unsigned long*, signed int, signed int) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:761:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:739:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:732:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:722:2
	bn_scatter5: (const unsigned long*, unsigned long, void*, unsigned long) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:740:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:735:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:733:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:727:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:723:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:717:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:703:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:701:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c:700:1
	bn_sub_part_words: (unsigned long*, const unsigned long*, const unsigned long*, signed int, signed int) => unsigned long 		if (!def(OPENSSL_NO_ASM)&def(OPENSSL_BN_ASM_PART_WORDS)&((def(BN_RECURSION)&def(OPENSSL_SMALL_FOOTPRINT)&def(OPENSSL_BN_ASM_PART_WORDS)&!def(OPENSSL_NO_ASM))|(def(OPENSSL_BN_ASM_PART_WORDS)&!def(OPENSSL_SMALL_FOOTPRINT)&!def(OPENSSL_NO_ASM))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:597:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:597:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:597:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:597:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:596:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:596:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:596:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:596:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:590:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:590:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:590:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:590:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:589:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:589:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:589:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:589:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:581:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:581:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:581:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:581:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:580:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:580:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:580:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:580:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:575:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:575:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:575:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:575:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:574:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:574:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:574:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:574:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:463:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:463:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:463:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:463:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:462:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:462:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:462:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:462:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:455:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:455:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:455:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:455:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:454:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:454:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:454:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:454:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:445:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:445:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:445:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:445:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:444:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:444:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:444:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:444:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:438:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:438:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:438:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:438:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:437:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:437:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:437:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c:437:2
	bsaes_cbc_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, unsigned char[], signed int) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:510:30
	bsaes_ctr32_encrypt_blocks: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, const unsigned char[]) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:831:25, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:538:30
	bsaes_xts_decrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, const struct aes_key_st*, const unsigned char[]) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1069:44
	bsaes_xts_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, const struct aes_key_st*, const unsigned char[]) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1069:24
	clock_gettime: (signed int, struct timespec*) => signed int 		if ((def(OPENSSL_NO_DES)&((def(USE_MD5_RAND)&(def(OPENSSL_SYS_VOS_HPPA)|def(OPENSSL_SYS_VOS_IA32))&def(OPENSSL_SYS_VOS))|(!def(USE_MD5_RAND)&((def(USE_SHA1_RAND)&(def(OPENSSL_SYS_VOS_HPPA)|def(OPENSSL_SYS_VOS_IA32))&def(OPENSSL_SYS_VOS))|(!def(USE_MDC2_RAND)&!def(USE_SHA1_RAND)&(def(OPENSSL_SYS_VOS_HPPA)|def(OPENSSL_SYS_VOS_IA32))&def(OPENSSL_SYS_VOS))))))|(!def(OPENSSL_NO_DES)&(def(OPENSSL_SYS_VOS_HPPA)|def(OPENSSL_SYS_VOS_IA32))&def(OPENSSL_SYS_VOS)))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c:210:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c:210:2
	deflate: (struct z_stream_s*, signed int) => signed int 		if (def(ZLIB)&!def(ZLIB_SHARED))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:126:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:126:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:126:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:126:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:126:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:126:32
	deflateEnd: (struct z_stream_s*) => signed int 		if (def(ZLIB)&!def(ZLIB_SHARED))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:125:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:125:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:186:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:186:1
	deflateInit_: (struct z_stream_s*, signed int, const char*, signed int) => signed int 		if (def(ZLIB)&!def(ZLIB_SHARED))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:127:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:127:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:127:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:127:32
	dladdr: (const void*, struct {Map()}*) => signed int 		if !def(_AIX)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:457:5
	dlclose: (void*) => signed int 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:479:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:228:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:204:2
	dlerror: (void) => char* 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:467:47, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:467:47, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:290:52, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:290:52, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:256:52, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:256:52, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:188:54, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:188:54
	dlopen: (const char*, signed int) => void* 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:474:28, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:184:7
	dlsym: (void*, const char*) => void* 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:478:8, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:286:11, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c:252:7
	gcm_ghash_4bit: (unsigned long long[], const struct {Map()}[], const unsigned char*, unsigned long) => void 		if (!def(__i386)&!def(__i386__)&!def(__arch64__)&!def(_M_IX86))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:739:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:739:14
	gcm_ghash_4bit: (unsigned long[], const struct {Map()}[], const unsigned char*, unsigned long) => void 		if (!def(__i386)&!def(__i386__)&def(__arch64__)&!def(_M_IX86))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:739:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:739:14
	gcm_ghash_4bit_mmx: (unsigned long long[], const struct {Map()}[], const unsigned char*, unsigned long) => void 		if ((def(__i386__)&!def(__arch64__))|(!def(__i386__)&((def(__i386)&!def(__arch64__))|(!def(__arch64__)&!def(__i386)&def(_M_IX86)))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:732:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:732:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:732:15
	gcm_ghash_4bit_mmx: (unsigned long[], const struct {Map()}[], const unsigned char*, unsigned long) => void 		if ((def(__i386__)&def(__arch64__))|(!def(__i386__)&((def(__i386)&def(__arch64__))|(def(__arch64__)&!def(__i386)&def(_M_IX86)))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:732:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:732:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:732:15
	gcm_ghash_4bit_x86: (unsigned long long[], const struct {Map()}[], const unsigned char*, unsigned long) => void 		if ((def(__i386__)&!def(__arch64__))|(!def(__i386__)&((def(__i386)&!def(__arch64__))|(!def(__arch64__)&!def(__i386)&def(_M_IX86)))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:735:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:735:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:735:15
	gcm_ghash_4bit_x86: (unsigned long[], const struct {Map()}[], const unsigned char*, unsigned long) => void 		if ((def(__i386__)&def(__arch64__))|(!def(__i386__)&((def(__i386)&def(__arch64__))|(def(__arch64__)&!def(__i386)&def(_M_IX86)))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:735:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:735:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:735:15
	gcm_ghash_clmul: (unsigned long long[], const struct {Map()}[], const unsigned char*, unsigned long) => void 		if !def(__arch64__)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:720:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:720:15
	gcm_ghash_clmul: (unsigned long[], const struct {Map()}[], const unsigned char*, unsigned long) => void 		if def(__arch64__)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:720:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:720:15
	gcm_gmult_4bit: (unsigned long long[], const struct {Map()}[]) => void 		if (!def(__i386)&!def(__i386__)&!def(__arch64__)&!def(_M_IX86))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:738:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:738:14
	gcm_gmult_4bit: (unsigned long[], const struct {Map()}[]) => void 		if (!def(__i386)&!def(__i386__)&def(__arch64__)&!def(_M_IX86))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:738:14, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:738:14
	gcm_gmult_4bit_mmx: (unsigned long long[], const struct {Map()}[]) => void 		if ((def(__i386__)&!def(__arch64__))|(!def(__i386__)&((def(__i386)&!def(__arch64__))|(!def(__arch64__)&!def(__i386)&def(_M_IX86)))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:731:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:731:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:731:15
	gcm_gmult_4bit_mmx: (unsigned long[], const struct {Map()}[]) => void 		if ((def(__i386__)&def(__arch64__))|(!def(__i386__)&((def(__i386)&def(__arch64__))|(def(__arch64__)&!def(__i386)&def(_M_IX86)))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:731:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:731:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:731:15
	gcm_gmult_4bit_x86: (unsigned long long[], const struct {Map()}[]) => void 		if ((def(__i386__)&!def(__arch64__))|(!def(__i386__)&((def(__i386)&!def(__arch64__))|(!def(__arch64__)&!def(__i386)&def(_M_IX86)))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:734:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:734:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:734:15
	gcm_gmult_4bit_x86: (unsigned long[], const struct {Map()}[]) => void 		if ((def(__i386__)&def(__arch64__))|(!def(__i386__)&((def(__i386)&def(__arch64__))|(def(__arch64__)&!def(__i386)&def(_M_IX86)))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:734:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:734:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:734:15
	gcm_gmult_clmul: (unsigned long long[], const struct {Map()}[]) => void 		if !def(__arch64__)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:719:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:719:15
	gcm_gmult_clmul: (unsigned long[], const struct {Map()}[]) => void 		if def(__arch64__)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:719:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:719:15
	gcm_init_clmul: (struct {Map()}[], const unsigned long long[]) => void 		if !def(__arch64__)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:718:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:718:2
	gcm_init_clmul: (struct {Map()}[], const unsigned long[]) => void 		if def(__arch64__)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:718:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c:718:2
	get_ip: (const char*, unsigned char*) => signed int 		if !def(OPENSSL_NO_SOCK)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bio/b_sock.c:127:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bio/b_sock.c:127:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bio/b_sock.c:127:3
	inflate: (struct z_stream_s*, signed int) => signed int 		if (def(ZLIB)&!def(ZLIB_SHARED))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:123:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:123:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:123:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:123:32
	inflateEnd: (struct z_stream_s*) => signed int 		if (def(ZLIB)&!def(ZLIB_SHARED))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:122:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:122:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:122:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:122:32
	inflateInit_: (struct z_stream_s*, const char*, signed int) => signed int 		if (def(ZLIB)&!def(ZLIB_SHARED))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:124:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:124:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:124:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:124:32
	md4_block_data_order: (struct MD4state_st*, const void*, unsigned long) => void 		if (!def(OPENSSL_NO_MD4)&def(md4_block_data_order)&(def(OPENSSL_NO_MD4)|def(md4_block_data_order)))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h:85:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h:85:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h:85:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h:85:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h:85:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h:85:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h:85:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h:85:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h:85:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h:85:30
	md5_block_asm_data_order: (struct MD5state_st*, const void*, unsigned long) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_locl.h:71:31, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_locl.h:71:31, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_locl.h:71:31, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_locl.h:71:31, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_locl.h:71:31
	private_AES_set_decrypt_key: (const unsigned char*, const signed int, struct aes_key_st*) => signed int 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_misc.c:84:8
	private_AES_set_encrypt_key: (const unsigned char*, const signed int, struct aes_key_st*) => signed int 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_misc.c:75:8
	private_RC4_set_key: (struct rc4_key_st*, signed int, const unsigned char*) => void 		if !def(OPENSSL_NO_RC4)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rc4/rc4_utl.c:61:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rc4/rc4_utl.c:61:1
	rc4_md5_enc: (struct rc4_key_st*, const void*, void*, struct MD5state_st*, const void*, unsigned long) => void 		if (!def(OPENSSL_NO_RC4)&((def(OPENSSL_NO_ASM)&def(STITCHED_CALL))|(!def(OPENSSL_NO_ASM)&(def(STITCHED_CALL)|!def(__APPLE__)|!def(__MACH__)))))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:183:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:183:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:142:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c:142:3
	ripemd160_block_data_order: (struct RIPEMD160state_st*, const void*, unsigned long) => void 		if (!def(OPENSSL_NO_RIPEMD)&def(ripemd160_block_data_order)&(def(OPENSSL_NO_RIPEMD)|def(ripemd160_block_data_order)))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h:97:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h:97:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h:97:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h:97:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h:97:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h:97:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h:97:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h:97:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h:97:32, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h:97:32
	s$sleep2: (signed long long*, signed short*) => void 		if ((def(OPENSSL_NO_DES)&((def(OPENSSL_SYS_VOS)&def(USE_MD5_RAND)&def(OPENSSL_SYS_VOS_IA32)&!def(OPENSSL_SYS_VOS_HPPA))|(!def(USE_MD5_RAND)&((def(OPENSSL_SYS_VOS)&def(USE_SHA1_RAND)&def(OPENSSL_SYS_VOS_IA32)&!def(OPENSSL_SYS_VOS_HPPA))|(!def(USE_SHA1_RAND)&def(OPENSSL_SYS_VOS)&!def(OPENSSL_SYS_VOS_HPPA)&def(OPENSSL_SYS_VOS_IA32)&!def(USE_MDC2_RAND))))))|(def(OPENSSL_SYS_VOS)&!def(OPENSSL_NO_DES)&def(OPENSSL_SYS_VOS_IA32)&!def(OPENSSL_SYS_VOS_HPPA)))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c:205:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c:205:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c:205:2
	s$sleep: (signed long*, signed short*) => void 		if ((def(OPENSSL_NO_DES)&((def(OPENSSL_SYS_VOS_HPPA)&def(USE_MD5_RAND)&def(OPENSSL_SYS_VOS))|(!def(USE_MD5_RAND)&((def(OPENSSL_SYS_VOS_HPPA)&def(USE_SHA1_RAND)&def(OPENSSL_SYS_VOS))|(!def(USE_MDC2_RAND)&!def(USE_SHA1_RAND)&def(OPENSSL_SYS_VOS_HPPA)&def(OPENSSL_SYS_VOS))))))|(def(OPENSSL_SYS_VOS_HPPA)&!def(OPENSSL_NO_DES)&def(OPENSSL_SYS_VOS)))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c:200:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c:200:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c:200:2
	sha1_block_data_order: (struct SHAstate_st*, const void*, unsigned long) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_locl.h:96:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_locl.h:96:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_locl.h:96:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_locl.h:96:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_locl.h:96:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c:158:2
	sha256_block_data_order: (struct SHA256state_st*, const void*, unsigned long) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c:109:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c:109:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c:109:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c:109:30, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c:109:30
	sha512_block_data_order: (struct SHA512state_st*, const void*, unsigned long) => void 		if !def(OPENSSL_NO_SHA512)		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:235:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:235:4, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:220:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:220:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:205:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:205:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:133:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:133:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:108:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c:108:2
	usage: (void) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c:176:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c:234:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c:225:3
	vpaes_cbc_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, unsigned char*, signed int) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:548:15, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:520:15
	vpaes_decrypt: (const unsigned char*, unsigned char*, const struct aes_key_st*) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1083:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:518:27
	vpaes_encrypt: (const unsigned char*, unsigned char*, const struct aes_key_st*) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1219:28, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1219:28, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1088:33, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1078:34, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:841:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:841:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:546:27
	vpaes_set_decrypt_key: (const unsigned char*, signed int, struct aes_key_st*) => signed int 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1082:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:517:8
	vpaes_set_encrypt_key: (const unsigned char*, signed int, struct aes_key_st*) => signed int 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1217:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1086:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:1077:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:839:3, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c:545:8
	whirlpool_block: (struct {Map()}*, const void*, unsigned long) => void 		if True		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c:245:1, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c:233:2, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c:204:5, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c:190:5, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c:204:5, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c:190:5, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c:171:5, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c:128:5, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c:113:4
	zError: (signed int) => const char* 		if (def(ZLIB)&!def(ZLIB_SHARED))		at file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17, file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c:128:17
exports (3622)
	ACCESS_DESCRIPTION_free: (struct ACCESS_DESCRIPTION_st*) => void 		if True		at :-1:-1
	ACCESS_DESCRIPTION_new: (void) => struct ACCESS_DESCRIPTION_st* 		if True		at :-1:-1
	AES_bi_ige_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, const struct aes_key_st*, const unsigned char*, const signed int) => void 		if True		at :-1:-1
	AES_cfb128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, unsigned char*, signed int*, const signed int) => void 		if True		at :-1:-1
	AES_cfb1_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, unsigned char*, signed int*, const signed int) => void 		if True		at :-1:-1
	AES_cfb8_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, unsigned char*, signed int*, const signed int) => void 		if True		at :-1:-1
	AES_ctr128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, unsigned char[], unsigned char[], unsigned int*) => void 		if True		at :-1:-1
	AES_ecb_encrypt: (const unsigned char*, unsigned char*, const struct aes_key_st*, const signed int) => void 		if True		at :-1:-1
	AES_ige_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, unsigned char*, const signed int) => void 		if True		at :-1:-1
	AES_ofb128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct aes_key_st*, unsigned char*, signed int*) => void 		if True		at :-1:-1
	AES_options: (void) => const char* 		if True		at :-1:-1
	AES_set_decrypt_key: (const unsigned char*, const signed int, struct aes_key_st*) => signed int 		if True		at :-1:-1
	AES_set_encrypt_key: (const unsigned char*, const signed int, struct aes_key_st*) => signed int 		if True		at :-1:-1
	AES_unwrap_key: (struct aes_key_st*, const unsigned char*, unsigned char*, const unsigned char*, unsigned int) => signed int 		if True		at :-1:-1
	AES_wrap_key: (struct aes_key_st*, const unsigned char*, unsigned char*, const unsigned char*, unsigned int) => signed int 		if True		at :-1:-1
	AES_wrap_unwrap_test: (const unsigned char*, signed int, const unsigned char*, const unsigned char*, const unsigned char*, signed int) => signed int 		if def(AES_WRAP_TEST)		at :-1:-1
	ASN1_BIT_STRING_check: (struct asn1_string_st*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	ASN1_BIT_STRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_BIT_STRING_get_bit: (struct asn1_string_st*, signed int) => signed int 		if True		at :-1:-1
	ASN1_BIT_STRING_name_print: (struct bio_st*, struct asn1_string_st*, struct BIT_STRING_BITNAME_st*, signed int) => signed int 		if True		at :-1:-1
	ASN1_BIT_STRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_BIT_STRING_num_asc: (char*, struct BIT_STRING_BITNAME_st*) => signed int 		if True		at :-1:-1
	ASN1_BIT_STRING_set: (struct asn1_string_st*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	ASN1_BIT_STRING_set_asc: (struct asn1_string_st*, char*, signed int, struct BIT_STRING_BITNAME_st*) => signed int 		if True		at :-1:-1
	ASN1_BIT_STRING_set_bit: (struct asn1_string_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	ASN1_BMPSTRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_BMPSTRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_ENUMERATED_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_ENUMERATED_get: (struct asn1_string_st*) => signed long 		if True		at :-1:-1
	ASN1_ENUMERATED_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_ENUMERATED_set: (struct asn1_string_st*, signed long) => signed int 		if True		at :-1:-1
	ASN1_ENUMERATED_to_BN: (struct asn1_string_st*, struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	ASN1_GENERALIZEDTIME_adj: (struct asn1_string_st*, signed long, signed int, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_GENERALIZEDTIME_check: (struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_GENERALIZEDTIME_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_GENERALIZEDTIME_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_GENERALIZEDTIME_print: (struct bio_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_GENERALIZEDTIME_set: (struct asn1_string_st*, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_GENERALIZEDTIME_set_string: (struct asn1_string_st*, const char*) => signed int 		if True		at :-1:-1
	ASN1_GENERALSTRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_GENERALSTRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_IA5STRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_IA5STRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_INTEGER_cmp: (const struct asn1_string_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_INTEGER_dup: (const struct asn1_string_st*) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_INTEGER_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_INTEGER_get: (const struct asn1_string_st*) => signed long 		if True		at :-1:-1
	ASN1_INTEGER_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_INTEGER_set: (struct asn1_string_st*, signed long) => signed int 		if True		at :-1:-1
	ASN1_INTEGER_to_BN: (const struct asn1_string_st*, struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	ASN1_NULL_free: (signed int*) => void 		if True		at :-1:-1
	ASN1_NULL_new: (void) => signed int* 		if True		at :-1:-1
	ASN1_OBJECT_create: (signed int, unsigned char*, signed int, const char*, const char*) => struct asn1_object_st* 		if True		at :-1:-1
	ASN1_OBJECT_free: (struct asn1_object_st*) => void 		if True		at :-1:-1
	ASN1_OBJECT_new: (void) => struct asn1_object_st* 		if True		at :-1:-1
	ASN1_OCTET_STRING_cmp: (const struct asn1_string_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_OCTET_STRING_dup: (const struct asn1_string_st*) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_OCTET_STRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_OCTET_STRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_OCTET_STRING_set: (struct asn1_string_st*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	ASN1_PCTX_free: (struct asn1_pctx_st*) => void 		if True		at :-1:-1
	ASN1_PCTX_get_cert_flags: (struct asn1_pctx_st*) => unsigned long 		if True		at :-1:-1
	ASN1_PCTX_get_flags: (struct asn1_pctx_st*) => unsigned long 		if True		at :-1:-1
	ASN1_PCTX_get_nm_flags: (struct asn1_pctx_st*) => unsigned long 		if True		at :-1:-1
	ASN1_PCTX_get_oid_flags: (struct asn1_pctx_st*) => unsigned long 		if True		at :-1:-1
	ASN1_PCTX_get_str_flags: (struct asn1_pctx_st*) => unsigned long 		if True		at :-1:-1
	ASN1_PCTX_new: (void) => struct asn1_pctx_st* 		if True		at :-1:-1
	ASN1_PCTX_set_cert_flags: (struct asn1_pctx_st*, unsigned long) => void 		if True		at :-1:-1
	ASN1_PCTX_set_flags: (struct asn1_pctx_st*, unsigned long) => void 		if True		at :-1:-1
	ASN1_PCTX_set_nm_flags: (struct asn1_pctx_st*, unsigned long) => void 		if True		at :-1:-1
	ASN1_PCTX_set_oid_flags: (struct asn1_pctx_st*, unsigned long) => void 		if True		at :-1:-1
	ASN1_PCTX_set_str_flags: (struct asn1_pctx_st*, unsigned long) => void 		if True		at :-1:-1
	ASN1_PRINTABLESTRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_PRINTABLESTRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_PRINTABLE_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_PRINTABLE_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_PRINTABLE_type: (const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	ASN1_STRING_TABLE_add: (signed int, signed long, signed long, unsigned long, unsigned long) => signed int 		if True		at :-1:-1
	ASN1_STRING_TABLE_cleanup: (void) => void 		if True		at :-1:-1
	ASN1_STRING_TABLE_get: (signed int) => struct asn1_string_table_st* 		if True		at :-1:-1
	ASN1_STRING_cmp: (const struct asn1_string_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_STRING_copy: (struct asn1_string_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_STRING_data: (struct asn1_string_st*) => unsigned char* 		if True		at :-1:-1
	ASN1_STRING_dup: (const struct asn1_string_st*) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_STRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_STRING_get_default_mask: (void) => unsigned long 		if True		at :-1:-1
	ASN1_STRING_length: (const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_STRING_length_set: (struct asn1_string_st*, signed int) => void 		if True		at :-1:-1
	ASN1_STRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_STRING_print: (struct bio_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_STRING_print_ex: (struct bio_st*, struct asn1_string_st*, unsigned long) => signed int 		if True		at :-1:-1
	ASN1_STRING_print_ex_fp: (struct _IO_FILE*, struct asn1_string_st*, unsigned long) => signed int 		if True		at :-1:-1
	ASN1_STRING_set0: (struct asn1_string_st*, void*, signed int) => void 		if True		at :-1:-1
	ASN1_STRING_set: (struct asn1_string_st*, const void*, signed int) => signed int 		if True		at :-1:-1
	ASN1_STRING_set_by_NID: (struct asn1_string_st**, const unsigned char*, signed int, signed int, signed int) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_STRING_set_default_mask: (unsigned long) => void 		if True		at :-1:-1
	ASN1_STRING_set_default_mask_asc: (const char*) => signed int 		if True		at :-1:-1
	ASN1_STRING_to_UTF8: (unsigned char**, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_STRING_type: (struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_STRING_type_new: (signed int) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_T61STRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_T61STRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_TIME_adj: (struct asn1_string_st*, signed long, signed int, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_TIME_check: (struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_TIME_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_TIME_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_TIME_print: (struct bio_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_TIME_set: (struct asn1_string_st*, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_TIME_set_string: (struct asn1_string_st*, const char*) => signed int 		if True		at :-1:-1
	ASN1_TIME_to_generalizedtime: (struct asn1_string_st*, struct asn1_string_st**) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_TYPE_cmp: (struct asn1_type_st*, struct asn1_type_st*) => signed int 		if True		at :-1:-1
	ASN1_TYPE_free: (struct asn1_type_st*) => void 		if True		at :-1:-1
	ASN1_TYPE_get: (struct asn1_type_st*) => signed int 		if True		at :-1:-1
	ASN1_TYPE_get_int_octetstring: (struct asn1_type_st*, signed long*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	ASN1_TYPE_get_octetstring: (struct asn1_type_st*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	ASN1_TYPE_new: (void) => struct asn1_type_st* 		if True		at :-1:-1
	ASN1_TYPE_set1: (struct asn1_type_st*, signed int, const void*) => signed int 		if True		at :-1:-1
	ASN1_TYPE_set: (struct asn1_type_st*, signed int, void*) => void 		if True		at :-1:-1
	ASN1_TYPE_set_int_octetstring: (struct asn1_type_st*, signed long, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	ASN1_TYPE_set_octetstring: (struct asn1_type_st*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	ASN1_UNIVERSALSTRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_UNIVERSALSTRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_UNIVERSALSTRING_to_string: (struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_UTCTIME_adj: (struct asn1_string_st*, signed long, signed int, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_UTCTIME_check: (struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_UTCTIME_cmp_time_t: (const struct asn1_string_st*, signed long) => signed int 		if True		at :-1:-1
	ASN1_UTCTIME_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_UTCTIME_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_UTCTIME_print: (struct bio_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	ASN1_UTCTIME_set: (struct asn1_string_st*, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_UTCTIME_set_string: (struct asn1_string_st*, const char*) => signed int 		if True		at :-1:-1
	ASN1_UTF8STRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_UTF8STRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_VISIBLESTRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	ASN1_VISIBLESTRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_add_oid_module: (void) => void 		if True		at :-1:-1
	ASN1_bn_print: (struct bio_st*, const char*, const struct bignum_st*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	ASN1_check_infinite_end: (unsigned char**, signed long) => signed int 		if True		at :-1:-1
	ASN1_const_check_infinite_end: (const unsigned char**, signed long) => signed int 		if True		at :-1:-1
	ASN1_d2i_bio: ((void) => void**, (void**, const unsigned char**, signed long) => void**, struct bio_st*, void**) => void* 		if !def(NO_OLD_ASN1)		at :-1:-1
	ASN1_d2i_fp: ((void) => void**, (void**, const unsigned char**, signed long) => void**, struct _IO_FILE*, void**) => void* 		if !def(NO_OLD_ASN1)		at :-1:-1
	ASN1_digest: ((void*, unsigned char**) => signed int*, const struct env_md_st*, char*, unsigned char*, unsigned int*) => signed int 		if !def(NO_ASN1_OLD)		at :-1:-1
	ASN1_dup: ((void*, unsigned char**) => signed int*, (void**, const unsigned char**, signed long) => void**, void*) => void* 		if !def(NO_OLD_ASN1)		at :-1:-1
	ASN1_generate_nconf: (char*, struct conf_st*) => struct asn1_type_st* 		if True		at :-1:-1
	ASN1_generate_v3: (char*, struct v3_ext_ctx*) => struct asn1_type_st* 		if True		at :-1:-1
	ASN1_get_object: (const unsigned char**, signed long*, signed int*, signed int*, signed long) => signed int 		if True		at :-1:-1
	ASN1_i2d_bio: ((void*, unsigned char**) => signed int*, struct bio_st*, unsigned char*) => signed int 		if !def(NO_OLD_ASN1)		at :-1:-1
	ASN1_i2d_fp: ((void*, unsigned char**) => signed int*, struct _IO_FILE*, void*) => signed int 		if !def(NO_OLD_ASN1)		at :-1:-1
	ASN1_item_d2i: (struct ASN1_VALUE_st**, const unsigned char**, signed long, const struct ASN1_ITEM_st*) => struct ASN1_VALUE_st* 		if True		at :-1:-1
	ASN1_item_d2i_bio: (const struct ASN1_ITEM_st*, struct bio_st*, void*) => void* 		if True		at :-1:-1
	ASN1_item_d2i_fp: (const struct ASN1_ITEM_st*, struct _IO_FILE*, void*) => void* 		if True		at :-1:-1
	ASN1_item_digest: (const struct ASN1_ITEM_st*, const struct env_md_st*, void*, unsigned char*, unsigned int*) => signed int 		if True		at :-1:-1
	ASN1_item_dup: (const struct ASN1_ITEM_st*, void*) => void* 		if True		at :-1:-1
	ASN1_item_ex_d2i: (struct ASN1_VALUE_st**, const unsigned char**, signed long, const struct ASN1_ITEM_st*, signed int, signed int, char, struct ASN1_TLC_st*) => signed int 		if True		at :-1:-1
	ASN1_item_ex_free: (struct ASN1_VALUE_st**, const struct ASN1_ITEM_st*) => void 		if True		at :-1:-1
	ASN1_item_ex_i2d: (struct ASN1_VALUE_st**, unsigned char**, const struct ASN1_ITEM_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	ASN1_item_ex_new: (struct ASN1_VALUE_st**, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	ASN1_item_free: (struct ASN1_VALUE_st*, const struct ASN1_ITEM_st*) => void 		if True		at :-1:-1
	ASN1_item_i2d: (struct ASN1_VALUE_st*, unsigned char**, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	ASN1_item_i2d_bio: (const struct ASN1_ITEM_st*, struct bio_st*, void*) => signed int 		if True		at :-1:-1
	ASN1_item_i2d_fp: (const struct ASN1_ITEM_st*, struct _IO_FILE*, void*) => signed int 		if True		at :-1:-1
	ASN1_item_ndef_i2d: (struct ASN1_VALUE_st*, unsigned char**, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	ASN1_item_new: (const struct ASN1_ITEM_st*) => struct ASN1_VALUE_st* 		if True		at :-1:-1
	ASN1_item_pack: (void*, const struct ASN1_ITEM_st*, struct asn1_string_st**) => struct asn1_string_st* 		if True		at :-1:-1
	ASN1_item_print: (struct bio_st*, struct ASN1_VALUE_st*, signed int, const struct ASN1_ITEM_st*, const struct asn1_pctx_st*) => signed int 		if True		at :-1:-1
	ASN1_item_sign: (const struct ASN1_ITEM_st*, struct X509_algor_st*, struct X509_algor_st*, struct asn1_string_st*, void*, struct evp_pkey_st*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	ASN1_item_sign_ctx: (const struct ASN1_ITEM_st*, struct X509_algor_st*, struct X509_algor_st*, struct asn1_string_st*, void*, struct env_md_ctx_st*) => signed int 		if True		at :-1:-1
	ASN1_item_unpack: (struct asn1_string_st*, const struct ASN1_ITEM_st*) => void* 		if True		at :-1:-1
	ASN1_item_verify: (const struct ASN1_ITEM_st*, struct X509_algor_st*, struct asn1_string_st*, void*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	ASN1_mbstring_copy: (struct asn1_string_st**, const unsigned char*, signed int, signed int, unsigned long) => signed int 		if True		at :-1:-1
	ASN1_mbstring_ncopy: (struct asn1_string_st**, const unsigned char*, signed int, signed int, unsigned long, signed long, signed long) => signed int 		if True		at :-1:-1
	ASN1_object_size: (signed int, signed int, signed int) => signed int 		if True		at :-1:-1
	ASN1_pack_string: (void*, (void*, unsigned char**) => signed int*, struct asn1_string_st**) => struct asn1_string_st* 		if !def(NO_ASN1_OLD)		at :-1:-1
	ASN1_parse: (struct bio_st*, const unsigned char*, signed long, signed int) => signed int 		if True		at :-1:-1
	ASN1_parse_dump: (struct bio_st*, const unsigned char*, signed long, signed int, signed int) => signed int 		if True		at :-1:-1
	ASN1_primitive_free: (struct ASN1_VALUE_st**, const struct ASN1_ITEM_st*) => void 		if True		at :-1:-1
	ASN1_primitive_new: (struct ASN1_VALUE_st**, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	ASN1_put_eoc: (unsigned char**) => signed int 		if True		at :-1:-1
	ASN1_put_object: (unsigned char**, signed int, signed int, signed int, signed int) => void 		if True		at :-1:-1
	ASN1_seq_pack: (struct stack_st_OPENSSL_BLOCK*, (void*, unsigned char**) => signed int*, unsigned char**, signed int*) => unsigned char* 		if !def(NO_ASN1_OLD)		at :-1:-1
	ASN1_seq_unpack: (const unsigned char*, signed int, (void**, const unsigned char**, signed long) => void**, (void*) => void*) => struct stack_st_OPENSSL_BLOCK* 		if !def(NO_ASN1_OLD)		at :-1:-1
	ASN1_sign: ((void*, unsigned char**) => signed int*, struct X509_algor_st*, struct X509_algor_st*, struct asn1_string_st*, char*, struct evp_pkey_st*, const struct env_md_st*) => signed int 		if !def(NO_ASN1_OLD)		at :-1:-1
	ASN1_tag2bit: (signed int) => unsigned long 		if True		at :-1:-1
	ASN1_tag2str: (signed int) => const char* 		if True		at :-1:-1
	ASN1_template_d2i: (struct ASN1_VALUE_st**, const unsigned char**, signed long, const struct ASN1_TEMPLATE_st*) => signed int 		if True		at :-1:-1
	ASN1_template_free: (struct ASN1_VALUE_st**, const struct ASN1_TEMPLATE_st*) => void 		if True		at :-1:-1
	ASN1_template_i2d: (struct ASN1_VALUE_st**, unsigned char**, const struct ASN1_TEMPLATE_st*) => signed int 		if True		at :-1:-1
	ASN1_template_new: (struct ASN1_VALUE_st**, const struct ASN1_TEMPLATE_st*) => signed int 		if True		at :-1:-1
	ASN1_unpack_string: (struct asn1_string_st*, (void**, const unsigned char**, signed long) => void**) => void* 		if !def(NO_ASN1_OLD)		at :-1:-1
	ASN1_verify: ((void*, unsigned char**) => signed int*, struct X509_algor_st*, struct asn1_string_st*, char*, struct evp_pkey_st*) => signed int 		if !def(NO_ASN1_OLD)		at :-1:-1
	AUTHORITY_INFO_ACCESS_free: (struct stack_st_ACCESS_DESCRIPTION*) => void 		if True		at :-1:-1
	AUTHORITY_INFO_ACCESS_new: (void) => struct stack_st_ACCESS_DESCRIPTION* 		if True		at :-1:-1
	AUTHORITY_KEYID_free: (struct AUTHORITY_KEYID_st*) => void 		if True		at :-1:-1
	AUTHORITY_KEYID_new: (void) => struct AUTHORITY_KEYID_st* 		if True		at :-1:-1
	BASIC_CONSTRAINTS_free: (struct BASIC_CONSTRAINTS_st*) => void 		if True		at :-1:-1
	BASIC_CONSTRAINTS_new: (void) => struct BASIC_CONSTRAINTS_st* 		if True		at :-1:-1
	BF_cbc_encrypt: (const unsigned char*, unsigned char*, signed long, const struct bf_key_st*, unsigned char*, signed int) => void 		if (!def(OPENSSL_NO_BF)&!def(BF_DEFAULT_OPTIONS))		at :-1:-1
	BF_cfb64_encrypt: (const unsigned char*, unsigned char*, signed long, const struct bf_key_st*, unsigned char*, signed int*, signed int) => void 		if !def(OPENSSL_NO_BF)		at :-1:-1
	BF_decrypt: (unsigned int*, const struct bf_key_st*) => void 		if (!def(BF_DEFAULT_OPTIONS)&!def(_CRAY)&!def(OPENSSL_NO_BF))		at :-1:-1
	BF_decrypt: (unsigned long*, const struct bf_key_st*) => void 		if (!def(BF_DEFAULT_OPTIONS)&def(_CRAY)&!def(OPENSSL_NO_BF))		at :-1:-1
	BF_ecb_encrypt: (const unsigned char*, unsigned char*, const struct bf_key_st*, signed int) => void 		if !def(OPENSSL_NO_BF)		at :-1:-1
	BF_encrypt: (unsigned int*, const struct bf_key_st*) => void 		if (!def(_CRAY)&!def(OPENSSL_NO_BF))		at :-1:-1
	BF_encrypt: (unsigned long*, const struct bf_key_st*) => void 		if (def(_CRAY)&!def(OPENSSL_NO_BF))		at :-1:-1
	BF_ofb64_encrypt: (const unsigned char*, unsigned char*, signed long, const struct bf_key_st*, unsigned char*, signed int*) => void 		if !def(OPENSSL_NO_BF)		at :-1:-1
	BF_options: (void) => const char* 		if !def(OPENSSL_NO_BF)		at :-1:-1
	BF_set_key: (struct bf_key_st*, signed int, const unsigned char*) => void 		if !def(OPENSSL_NO_BF)		at :-1:-1
	BIO_CONNECT_free: (struct bio_connect_st*) => void 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_CONNECT_new: (void) => struct bio_connect_st* 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_accept: (signed int, char**) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_asn1_get_prefix: (struct bio_st*, (struct bio_st*, unsigned char**, signed int*, void*) => signed int**, (struct bio_st*, unsigned char**, signed int*, void*) => signed int**) => signed int 		if True		at :-1:-1
	BIO_asn1_get_suffix: (struct bio_st*, (struct bio_st*, unsigned char**, signed int*, void*) => signed int**, (struct bio_st*, unsigned char**, signed int*, void*) => signed int**) => signed int 		if True		at :-1:-1
	BIO_asn1_set_prefix: (struct bio_st*, (struct bio_st*, unsigned char**, signed int*, void*) => signed int*, (struct bio_st*, unsigned char**, signed int*, void*) => signed int*) => signed int 		if True		at :-1:-1
	BIO_asn1_set_suffix: (struct bio_st*, (struct bio_st*, unsigned char**, signed int*, void*) => signed int*, (struct bio_st*, unsigned char**, signed int*, void*) => signed int*) => signed int 		if True		at :-1:-1
	BIO_callback_ctrl: (struct bio_st*, signed int, (struct bio_st*, signed int, const char*, signed int, signed long, signed long) => void*) => signed long 		if True		at :-1:-1
	BIO_clear_flags: (struct bio_st*, signed int) => void 		if True		at :-1:-1
	BIO_copy_next_retry: (struct bio_st*) => void 		if True		at :-1:-1
	BIO_ctrl: (struct bio_st*, signed int, signed long, void*) => signed long 		if True		at :-1:-1
	BIO_ctrl_get_read_request: (struct bio_st*) => unsigned long 		if True		at :-1:-1
	BIO_ctrl_get_write_guarantee: (struct bio_st*) => unsigned long 		if True		at :-1:-1
	BIO_ctrl_pending: (struct bio_st*) => unsigned long 		if True		at :-1:-1
	BIO_ctrl_reset_read_request: (struct bio_st*) => signed int 		if True		at :-1:-1
	BIO_ctrl_wpending: (struct bio_st*) => unsigned long 		if True		at :-1:-1
	BIO_debug_callback: (struct bio_st*, signed int, const char*, signed int, signed long, signed long) => signed long 		if True		at :-1:-1
	BIO_dgram_non_fatal_error: (signed int) => signed int 		if !def(OPENSSL_NO_DGRAM)		at :-1:-1
	BIO_dump: (struct bio_st*, const char*, signed int) => signed int 		if True		at :-1:-1
	BIO_dump_cb: ((const void*, unsigned long, void*) => signed int*, void*, const char*, signed int) => signed int 		if True		at :-1:-1
	BIO_dump_fp: (struct _IO_FILE*, const char*, signed int) => signed int 		if True		at :-1:-1
	BIO_dump_indent: (struct bio_st*, const char*, signed int, signed int) => signed int 		if True		at :-1:-1
	BIO_dump_indent_cb: ((const void*, unsigned long, void*) => signed int*, void*, const char*, signed int, signed int) => signed int 		if True		at :-1:-1
	BIO_dump_indent_fp: (struct _IO_FILE*, const char*, signed int, signed int) => signed int 		if True		at :-1:-1
	BIO_dup_chain: (struct bio_st*) => struct bio_st* 		if True		at :-1:-1
	BIO_f_asn1: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_f_base64: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_f_buffer: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_f_cipher: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_f_md: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_f_nbio_test: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_f_null: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_f_reliable: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_f_zlib: (void) => struct bio_method_st* 		if def(ZLIB)		at :-1:-1
	BIO_fd_non_fatal_error: (signed int) => signed int 		if True		at :-1:-1
	BIO_fd_should_retry: (signed int) => signed int 		if True		at :-1:-1
	BIO_find_type: (struct bio_st*, signed int) => struct bio_st* 		if True		at :-1:-1
	BIO_free: (struct bio_st*) => signed int 		if True		at :-1:-1
	BIO_free_all: (struct bio_st*) => void 		if True		at :-1:-1
	BIO_get_accept_socket: (char*, signed int) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_get_callback: (const struct bio_st*) => (struct bio_st*, signed int, const char*, signed int, signed long, signed long) => signed long* 		if True		at :-1:-1
	BIO_get_callback_arg: (const struct bio_st*) => char* 		if True		at :-1:-1
	BIO_get_ex_data: (struct bio_st*, signed int) => void* 		if True		at :-1:-1
	BIO_get_ex_new_index: (signed long, void*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => signed int*, (struct crypto_ex_data_st*, struct crypto_ex_data_st*, void*, signed int, signed long, void*) => signed int*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => void*) => signed int 		if True		at :-1:-1
	BIO_get_host_ip: (const char*, unsigned char*) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_get_port: (const char*, unsigned short*) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_get_retry_BIO: (struct bio_st*, signed int*) => struct bio_st* 		if True		at :-1:-1
	BIO_get_retry_reason: (struct bio_st*) => signed int 		if True		at :-1:-1
	BIO_gethostbyname: (const char*) => struct hostent* 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_gets: (struct bio_st*, char*, signed int) => signed int 		if True		at :-1:-1
	BIO_indent: (struct bio_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	BIO_int_ctrl: (struct bio_st*, signed int, signed long, signed int) => signed long 		if True		at :-1:-1
	BIO_method_name: (const struct bio_st*) => const char* 		if True		at :-1:-1
	BIO_method_type: (const struct bio_st*) => signed int 		if True		at :-1:-1
	BIO_new: (struct bio_method_st*) => struct bio_st* 		if True		at :-1:-1
	BIO_new_CMS: (struct bio_st*, struct CMS_ContentInfo_st*) => struct bio_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	BIO_new_NDEF: (struct bio_st*, struct ASN1_VALUE_st*, const struct ASN1_ITEM_st*) => struct bio_st* 		if True		at :-1:-1
	BIO_new_PKCS7: (struct bio_st*, struct pkcs7_st*) => struct bio_st* 		if True		at :-1:-1
	BIO_new_accept: (char*) => struct bio_st* 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_new_bio_pair: (struct bio_st**, unsigned long, struct bio_st**, unsigned long) => signed int 		if True		at :-1:-1
	BIO_new_connect: (char*) => struct bio_st* 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_new_dgram: (signed int, signed int) => struct bio_st* 		if !def(OPENSSL_NO_DGRAM)		at :-1:-1
	BIO_new_fd: (signed int, signed int) => struct bio_st* 		if True		at :-1:-1
	BIO_new_file: (const char*, const char*) => struct bio_st* 		if !def(HEADER_BSS_FILE_C)		at :-1:-1
	BIO_new_fp: (struct _IO_FILE*, signed int) => struct bio_st* 		if !def(HEADER_BSS_FILE_C)		at :-1:-1
	BIO_new_mem_buf: (void*, signed int) => struct bio_st* 		if True		at :-1:-1
	BIO_new_socket: (signed int, signed int) => struct bio_st* 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_next: (struct bio_st*) => struct bio_st* 		if True		at :-1:-1
	BIO_nread0: (struct bio_st*, char**) => signed int 		if True		at :-1:-1
	BIO_nread: (struct bio_st*, char**, signed int) => signed int 		if True		at :-1:-1
	BIO_number_read: (struct bio_st*) => unsigned long 		if True		at :-1:-1
	BIO_number_written: (struct bio_st*) => unsigned long 		if True		at :-1:-1
	BIO_nwrite0: (struct bio_st*, char**) => signed int 		if True		at :-1:-1
	BIO_nwrite: (struct bio_st*, char**, signed int) => signed int 		if True		at :-1:-1
	BIO_pop: (struct bio_st*) => struct bio_st* 		if True		at :-1:-1
	BIO_printf: (struct bio_st*, const char*, ...) => signed int 		if True		at :-1:-1
	BIO_ptr_ctrl: (struct bio_st*, signed int, signed long) => char* 		if True		at :-1:-1
	BIO_push: (struct bio_st*, struct bio_st*) => struct bio_st* 		if True		at :-1:-1
	BIO_puts: (struct bio_st*, const char*) => signed int 		if True		at :-1:-1
	BIO_read: (struct bio_st*, void*, signed int) => signed int 		if True		at :-1:-1
	BIO_s_accept: (void) => struct bio_method_st* 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_s_bio: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_s_connect: (void) => struct bio_method_st* 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_s_datagram: (void) => struct bio_method_st* 		if !def(OPENSSL_NO_DGRAM)		at :-1:-1
	BIO_s_fd: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_s_file: (void) => struct bio_method_st* 		if !def(HEADER_BSS_FILE_C)		at :-1:-1
	BIO_s_log: (void) => struct bio_method_st* 		if !def(NO_SYSLOG)		at :-1:-1
	BIO_s_mem: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_s_null: (void) => struct bio_method_st* 		if True		at :-1:-1
	BIO_s_socket: (void) => struct bio_method_st* 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_set: (struct bio_st*, struct bio_method_st*) => signed int 		if True		at :-1:-1
	BIO_set_callback: (struct bio_st*, (struct bio_st*, signed int, const char*, signed int, signed long, signed long) => signed long*) => void 		if True		at :-1:-1
	BIO_set_callback_arg: (struct bio_st*, char*) => void 		if True		at :-1:-1
	BIO_set_cipher: (struct bio_st*, const struct evp_cipher_st*, const unsigned char*, const unsigned char*, signed int) => void 		if True		at :-1:-1
	BIO_set_ex_data: (struct bio_st*, signed int, void*) => signed int 		if True		at :-1:-1
	BIO_set_flags: (struct bio_st*, signed int) => void 		if True		at :-1:-1
	BIO_set_tcp_ndelay: (signed int, signed int) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_snprintf: (char*, unsigned long, const char*, ...) => signed int 		if True		at :-1:-1
	BIO_sock_cleanup: (void) => void 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_sock_error: (signed int) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_sock_init: (void) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_sock_non_fatal_error: (signed int) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_sock_should_retry: (signed int) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_socket_ioctl: (signed int, signed long, void*) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_socket_nbio: (signed int, signed int) => signed int 		if !def(OPENSSL_NO_SOCK)		at :-1:-1
	BIO_test_flags: (const struct bio_st*, signed int) => signed int 		if True		at :-1:-1
	BIO_vfree: (struct bio_st*) => void 		if True		at :-1:-1
	BIO_vprintf: (struct bio_st*, const char*, CBuiltinVaList()) => signed int 		if True		at :-1:-1
	BIO_vsnprintf: (char*, unsigned long, const char*, CBuiltinVaList()) => signed int 		if True		at :-1:-1
	BIO_write: (struct bio_st*, const void*, signed int) => signed int 		if True		at :-1:-1
	BN_BLINDING_convert: (struct bignum_st*, struct bn_blinding_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_BLINDING_convert_ex: (struct bignum_st*, struct bignum_st*, struct bn_blinding_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_BLINDING_create_param: (struct bn_blinding_st*, const struct bignum_st*, struct bignum_st*, struct bignum_ctx*, (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*, struct bn_mont_ctx_st*) => signed int*, struct bn_mont_ctx_st*) => struct bn_blinding_st* 		if True		at :-1:-1
	BN_BLINDING_free: (struct bn_blinding_st*) => void 		if True		at :-1:-1
	BN_BLINDING_get_flags: (const struct bn_blinding_st*) => unsigned long 		if True		at :-1:-1
	BN_BLINDING_get_thread_id: (const struct bn_blinding_st*) => unsigned long 		if True		at :-1:-1
	BN_BLINDING_invert: (struct bignum_st*, struct bn_blinding_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_BLINDING_invert_ex: (struct bignum_st*, const struct bignum_st*, struct bn_blinding_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_BLINDING_new: (const struct bignum_st*, const struct bignum_st*, struct bignum_st*) => struct bn_blinding_st* 		if True		at :-1:-1
	BN_BLINDING_set_flags: (struct bn_blinding_st*, unsigned long) => void 		if True		at :-1:-1
	BN_BLINDING_set_thread_id: (struct bn_blinding_st*, unsigned long) => void 		if True		at :-1:-1
	BN_BLINDING_thread_id: (struct bn_blinding_st*) => struct crypto_threadid_st* 		if True		at :-1:-1
	BN_BLINDING_update: (struct bn_blinding_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_CTX_end: (struct bignum_ctx*) => void 		if True		at :-1:-1
	BN_CTX_free: (struct bignum_ctx*) => void 		if True		at :-1:-1
	BN_CTX_get: (struct bignum_ctx*) => struct bignum_st* 		if True		at :-1:-1
	BN_CTX_init: (struct bignum_ctx*) => void 		if True		at :-1:-1
	BN_CTX_new: (void) => struct bignum_ctx* 		if True		at :-1:-1
	BN_CTX_start: (struct bignum_ctx*) => void 		if True		at :-1:-1
	BN_GENCB_call: (struct bn_gencb_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	BN_GF2m_add: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_arr2poly: (const signed int[], struct bignum_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_arr: (struct bignum_st*, const struct bignum_st*, const signed int[]) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_div: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if (!def(OPENSSL_NO_EC2M)&!def(OPENSSL_SUN_GF2M_DIV))		at :-1:-1
	BN_GF2m_mod_div: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if (!def(OPENSSL_NO_EC2M)&def(OPENSSL_SUN_GF2M_DIV))		at :-1:-1
	BN_GF2m_mod_div_arr: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const signed int[], struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_exp: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_exp_arr: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const signed int[], struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_inv: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_inv_arr: (struct bignum_st*, const struct bignum_st*, const signed int[], struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_mul: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_mul_arr: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const signed int[], struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_solve_quad: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_solve_quad_arr: (struct bignum_st*, const struct bignum_st*, const signed int[], struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_sqr: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_sqr_arr: (struct bignum_st*, const struct bignum_st*, const signed int[], struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_sqrt: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_mod_sqrt_arr: (struct bignum_st*, const struct bignum_st*, const signed int[], struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_GF2m_poly2arr: (const struct bignum_st*, signed int[], signed int) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	BN_MONT_CTX_copy: (struct bn_mont_ctx_st*, struct bn_mont_ctx_st*) => struct bn_mont_ctx_st* 		if True		at :-1:-1
	BN_MONT_CTX_free: (struct bn_mont_ctx_st*) => void 		if True		at :-1:-1
	BN_MONT_CTX_init: (struct bn_mont_ctx_st*) => void 		if True		at :-1:-1
	BN_MONT_CTX_new: (void) => struct bn_mont_ctx_st* 		if True		at :-1:-1
	BN_MONT_CTX_set: (struct bn_mont_ctx_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_MONT_CTX_set_locked: (struct bn_mont_ctx_st**, signed int, const struct bignum_st*, struct bignum_ctx*) => struct bn_mont_ctx_st* 		if True		at :-1:-1
	BN_RECP_CTX_free: (struct bn_recp_ctx_st*) => void 		if True		at :-1:-1
	BN_RECP_CTX_init: (struct bn_recp_ctx_st*) => void 		if True		at :-1:-1
	BN_RECP_CTX_new: (void) => struct bn_recp_ctx_st* 		if True		at :-1:-1
	BN_RECP_CTX_set: (struct bn_recp_ctx_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_X931_derive_prime_ex: (struct bignum_st*, struct bignum_st*, struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*, struct bn_gencb_st*) => signed int 		if True		at :-1:-1
	BN_X931_generate_Xpq: (struct bignum_st*, struct bignum_st*, signed int, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_X931_generate_prime_ex: (struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*, struct bn_gencb_st*) => signed int 		if True		at :-1:-1
	BN_add: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_add_word: (struct bignum_st*, unsigned long) => signed int 		if True		at :-1:-1
	BN_asc2bn: (struct bignum_st**, const char*) => signed int 		if True		at :-1:-1
	BN_bin2bn: (const unsigned char*, signed int, struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	BN_bn2bin: (const struct bignum_st*, unsigned char*) => signed int 		if True		at :-1:-1
	BN_bn2dec: (const struct bignum_st*) => char* 		if True		at :-1:-1
	BN_bn2hex: (const struct bignum_st*) => char* 		if True		at :-1:-1
	BN_bn2mpi: (const struct bignum_st*, unsigned char*) => signed int 		if True		at :-1:-1
	BN_bntest_rand: (struct bignum_st*, signed int, signed int, signed int) => signed int 		if True		at :-1:-1
	BN_clear: (struct bignum_st*) => void 		if True		at :-1:-1
	BN_clear_bit: (struct bignum_st*, signed int) => signed int 		if True		at :-1:-1
	BN_clear_free: (struct bignum_st*) => void 		if True		at :-1:-1
	BN_cmp: (const struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_copy: (struct bignum_st*, const struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	BN_dec2bn: (struct bignum_st**, const char*) => signed int 		if True		at :-1:-1
	BN_div: (struct bignum_st*, struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_div_recp: (struct bignum_st*, struct bignum_st*, const struct bignum_st*, struct bn_recp_ctx_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_div_word: (struct bignum_st*, unsigned long) => unsigned long 		if True		at :-1:-1
	BN_dup: (const struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	BN_exp: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_free: (struct bignum_st*) => void 		if True		at :-1:-1
	BN_from_montgomery: (struct bignum_st*, const struct bignum_st*, struct bn_mont_ctx_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_gcd: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_generate_prime: (struct bignum_st*, signed int, signed int, const struct bignum_st*, const struct bignum_st*, (signed int, signed int, void*) => void*, void*) => struct bignum_st* 		if True		at :-1:-1
	BN_generate_prime_ex: (struct bignum_st*, signed int, signed int, const struct bignum_st*, const struct bignum_st*, struct bn_gencb_st*) => signed int 		if True		at :-1:-1
	BN_get0_nist_prime_192: (void) => const struct bignum_st* 		if True		at :-1:-1
	BN_get0_nist_prime_224: (void) => const struct bignum_st* 		if True		at :-1:-1
	BN_get0_nist_prime_256: (void) => const struct bignum_st* 		if True		at :-1:-1
	BN_get0_nist_prime_384: (void) => const struct bignum_st* 		if True		at :-1:-1
	BN_get0_nist_prime_521: (void) => const struct bignum_st* 		if True		at :-1:-1
	BN_get_params: (signed int) => signed int 		if True		at :-1:-1
	BN_get_word: (const struct bignum_st*) => unsigned long 		if True		at :-1:-1
	BN_hex2bn: (struct bignum_st**, const char*) => signed int 		if True		at :-1:-1
	BN_init: (struct bignum_st*) => void 		if True		at :-1:-1
	BN_is_bit_set: (const struct bignum_st*, signed int) => signed int 		if True		at :-1:-1
	BN_is_prime: (const struct bignum_st*, signed int, (signed int, signed int, void*) => void*, struct bignum_ctx*, void*) => signed int 		if True		at :-1:-1
	BN_is_prime_ex: (const struct bignum_st*, signed int, struct bignum_ctx*, struct bn_gencb_st*) => signed int 		if True		at :-1:-1
	BN_is_prime_fasttest: (const struct bignum_st*, signed int, (signed int, signed int, void*) => void*, struct bignum_ctx*, void*, signed int) => signed int 		if True		at :-1:-1
	BN_is_prime_fasttest_ex: (const struct bignum_st*, signed int, struct bignum_ctx*, signed int, struct bn_gencb_st*) => signed int 		if True		at :-1:-1
	BN_kronecker: (const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_lshift1: (struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_lshift: (struct bignum_st*, const struct bignum_st*, signed int) => signed int 		if True		at :-1:-1
	BN_mask_bits: (struct bignum_st*, signed int) => signed int 		if True		at :-1:-1
	BN_mod_add: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_add_quick: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_mod_exp2_mont: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*, struct bn_mont_ctx_st*) => signed int 		if True		at :-1:-1
	BN_mod_exp: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_exp_mont: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*, struct bn_mont_ctx_st*) => signed int 		if True		at :-1:-1
	BN_mod_exp_mont_consttime: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*, struct bn_mont_ctx_st*) => signed int 		if True		at :-1:-1
	BN_mod_exp_mont_word: (struct bignum_st*, unsigned long, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*, struct bn_mont_ctx_st*) => signed int 		if True		at :-1:-1
	BN_mod_exp_recp: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_exp_simple: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_inverse: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => struct bignum_st* 		if True		at :-1:-1
	BN_mod_lshift1: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_lshift1_quick: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_mod_lshift: (struct bignum_st*, const struct bignum_st*, signed int, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_lshift_quick: (struct bignum_st*, const struct bignum_st*, signed int, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_mod_mul: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_mul_montgomery: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bn_mont_ctx_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_mul_reciprocal: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bn_recp_ctx_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_sqr: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_sqrt: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => struct bignum_st* 		if True		at :-1:-1
	BN_mod_sub: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mod_sub_quick: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_mod_word: (const struct bignum_st*, unsigned long) => unsigned long 		if True		at :-1:-1
	BN_mpi2bn: (const unsigned char*, signed int, struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	BN_mul: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_mul_word: (struct bignum_st*, unsigned long) => signed int 		if True		at :-1:-1
	BN_new: (void) => struct bignum_st* 		if True		at :-1:-1
	BN_nist_mod_192: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_nist_mod_224: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_nist_mod_256: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_nist_mod_384: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_nist_mod_521: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_nnmod: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_num_bits: (const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_num_bits_word: (unsigned long) => signed int 		if True		at :-1:-1
	BN_options: (void) => char* 		if True		at :-1:-1
	BN_print: (struct bio_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_print_fp: (struct _IO_FILE*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_pseudo_rand: (struct bignum_st*, signed int, signed int, signed int) => signed int 		if True		at :-1:-1
	BN_pseudo_rand_range: (struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_rand: (struct bignum_st*, signed int, signed int, signed int) => signed int 		if True		at :-1:-1
	BN_rand_range: (struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_reciprocal: (struct bignum_st*, const struct bignum_st*, signed int, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_rshift1: (struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_rshift: (struct bignum_st*, const struct bignum_st*, signed int) => signed int 		if True		at :-1:-1
	BN_set_bit: (struct bignum_st*, signed int) => signed int 		if True		at :-1:-1
	BN_set_negative: (struct bignum_st*, signed int) => void 		if True		at :-1:-1
	BN_set_params: (signed int, signed int, signed int, signed int) => void 		if True		at :-1:-1
	BN_set_word: (struct bignum_st*, unsigned long) => signed int 		if True		at :-1:-1
	BN_sqr: (struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	BN_sub: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_sub_word: (struct bignum_st*, unsigned long) => signed int 		if True		at :-1:-1
	BN_swap: (struct bignum_st*, struct bignum_st*) => void 		if True		at :-1:-1
	BN_to_ASN1_ENUMERATED: (struct bignum_st*, struct asn1_string_st*) => struct asn1_string_st* 		if True		at :-1:-1
	BN_to_ASN1_INTEGER: (const struct bignum_st*, struct asn1_string_st*) => struct asn1_string_st* 		if True		at :-1:-1
	BN_uadd: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_ucmp: (const struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_usub: (struct bignum_st*, const struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	BN_value_one: (void) => const struct bignum_st* 		if True		at :-1:-1
	BUF_MEM_free: (struct buf_mem_st*) => void 		if True		at :-1:-1
	BUF_MEM_grow: (struct buf_mem_st*, unsigned long) => signed int 		if True		at :-1:-1
	BUF_MEM_grow_clean: (struct buf_mem_st*, unsigned long) => signed int 		if True		at :-1:-1
	BUF_MEM_new: (void) => struct buf_mem_st* 		if True		at :-1:-1
	BUF_memdup: (const void*, unsigned long) => void* 		if True		at :-1:-1
	BUF_reverse: (unsigned char*, unsigned char*, unsigned long) => void 		if True		at :-1:-1
	BUF_strdup: (const char*) => char* 		if True		at :-1:-1
	BUF_strlcat: (char*, const char*, unsigned long) => unsigned long 		if True		at :-1:-1
	BUF_strlcpy: (char*, const char*, unsigned long) => unsigned long 		if True		at :-1:-1
	BUF_strndup: (const char*, unsigned long) => char* 		if True		at :-1:-1
	CAST_cbc_encrypt: (const unsigned char*, unsigned char*, signed long, const struct cast_key_st*, unsigned char*, signed int) => void 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	CAST_cfb64_encrypt: (const unsigned char*, unsigned char*, signed long, const struct cast_key_st*, unsigned char*, signed int*, signed int) => void 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	CAST_decrypt: (unsigned int*, const struct cast_key_st*) => void 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	CAST_ecb_encrypt: (const unsigned char*, unsigned char*, const struct cast_key_st*, signed int) => void 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	CAST_encrypt: (unsigned int*, const struct cast_key_st*) => void 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	CAST_ofb64_encrypt: (const unsigned char*, unsigned char*, signed long, const struct cast_key_st*, unsigned char*, signed int*) => void 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	CAST_set_key: (struct cast_key_st*, signed int, const unsigned char*) => void 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	CERTIFICATEPOLICIES_free: (struct stack_st_POLICYINFO*) => void 		if True		at :-1:-1
	CERTIFICATEPOLICIES_new: (void) => struct stack_st_POLICYINFO* 		if True		at :-1:-1
	CMAC_CTX_cleanup: (struct CMAC_CTX_st*) => void 		if True		at :-1:-1
	CMAC_CTX_copy: (struct CMAC_CTX_st*, const struct CMAC_CTX_st*) => signed int 		if True		at :-1:-1
	CMAC_CTX_free: (struct CMAC_CTX_st*) => void 		if True		at :-1:-1
	CMAC_CTX_get0_cipher_ctx: (struct CMAC_CTX_st*) => struct evp_cipher_ctx_st* 		if True		at :-1:-1
	CMAC_CTX_new: (void) => struct CMAC_CTX_st* 		if True		at :-1:-1
	CMAC_Final: (struct CMAC_CTX_st*, unsigned char*, unsigned long*) => signed int 		if True		at :-1:-1
	CMAC_Init: (struct CMAC_CTX_st*, const void*, unsigned long, const struct evp_cipher_st*, struct engine_st*) => signed int 		if True		at :-1:-1
	CMAC_Update: (struct CMAC_CTX_st*, const void*, unsigned long) => signed int 		if True		at :-1:-1
	CMAC_resume: (struct CMAC_CTX_st*) => signed int 		if True		at :-1:-1
	CMS_ContentInfo_free: (struct CMS_ContentInfo_st*) => void 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_ContentInfo_new: (void) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_ContentInfo_print_ctx: (struct bio_st*, struct CMS_ContentInfo_st*, signed int, const struct asn1_pctx_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_EncryptedData_decrypt: (struct CMS_ContentInfo_st*, const unsigned char*, unsigned long, struct bio_st*, struct bio_st*, unsigned int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_EncryptedData_encrypt: (struct bio_st*, const struct evp_cipher_st*, const unsigned char*, unsigned long, unsigned int) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_EncryptedData_set1_key: (struct CMS_ContentInfo_st*, const struct evp_cipher_st*, const unsigned char*, unsigned long) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_EnvelopedData_create: (const struct evp_cipher_st*) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_ReceiptRequest_create0: (unsigned char*, signed int, signed int, struct stack_st_GENERAL_NAMES*, struct stack_st_GENERAL_NAMES*) => struct CMS_ReceiptRequest_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_ReceiptRequest_free: (struct CMS_ReceiptRequest_st*) => void 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_ReceiptRequest_get0_values: (struct CMS_ReceiptRequest_st*, struct asn1_string_st**, signed int*, struct stack_st_GENERAL_NAMES**, struct stack_st_GENERAL_NAMES**) => void 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_ReceiptRequest_new: (void) => struct CMS_ReceiptRequest_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_RecipientInfo_decrypt: (struct CMS_ContentInfo_st*, struct CMS_RecipientInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_RecipientInfo_kekri_get0_id: (struct CMS_RecipientInfo_st*, struct X509_algor_st**, struct asn1_string_st**, struct asn1_string_st**, struct asn1_object_st**, struct asn1_type_st**) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_RecipientInfo_kekri_id_cmp: (struct CMS_RecipientInfo_st*, const unsigned char*, unsigned long) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_RecipientInfo_ktri_cert_cmp: (struct CMS_RecipientInfo_st*, struct x509_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_RecipientInfo_ktri_get0_algs: (struct CMS_RecipientInfo_st*, struct evp_pkey_st**, struct x509_st**, struct X509_algor_st**) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_RecipientInfo_ktri_get0_signer_id: (struct CMS_RecipientInfo_st*, struct asn1_string_st**, struct X509_name_st**, struct asn1_string_st**) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_RecipientInfo_set0_key: (struct CMS_RecipientInfo_st*, unsigned char*, unsigned long) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_RecipientInfo_set0_password: (struct CMS_RecipientInfo_st*, unsigned char*, signed int) => signed int 		if ((def(OPENSSL_SYS_SUNOS)&!def(OPENSSL_NO_CMS))|(!def(OPENSSL_NO_CMS)&!def(OPENSSL_SYS_SUNOS)&def(__ultrix)))		at :-1:-1
	CMS_RecipientInfo_set0_password: (struct CMS_RecipientInfo_st*, unsigned char*, signed long) => signed int 		if (!def(OPENSSL_NO_CMS)&!def(OPENSSL_SYS_SUNOS)&!def(__ultrix))		at :-1:-1
	CMS_RecipientInfo_set0_pkey: (struct CMS_RecipientInfo_st*, struct evp_pkey_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_RecipientInfo_type: (struct CMS_RecipientInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_SignedData_init: (struct CMS_ContentInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_SignerInfo_cert_cmp: (struct CMS_SignerInfo_st*, struct x509_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_SignerInfo_get0_algs: (struct CMS_SignerInfo_st*, struct evp_pkey_st**, struct x509_st**, struct X509_algor_st**, struct X509_algor_st**) => void 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_SignerInfo_get0_signer_id: (struct CMS_SignerInfo_st*, struct asn1_string_st**, struct X509_name_st**, struct asn1_string_st**) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_SignerInfo_set1_signer_cert: (struct CMS_SignerInfo_st*, struct x509_st*) => void 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_SignerInfo_sign: (struct CMS_SignerInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_SignerInfo_verify: (struct CMS_SignerInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_SignerInfo_verify_content: (struct CMS_SignerInfo_st*, struct bio_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add0_CertificateChoices: (struct CMS_ContentInfo_st*) => struct CMS_CertificateChoices* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add0_RevocationInfoChoice: (struct CMS_ContentInfo_st*) => struct CMS_RevocationInfoChoice_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add0_cert: (struct CMS_ContentInfo_st*, struct x509_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add0_crl: (struct CMS_ContentInfo_st*, struct X509_crl_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add0_recipient_key: (struct CMS_ContentInfo_st*, signed int, unsigned char*, unsigned long, unsigned char*, unsigned long, struct asn1_string_st*, struct asn1_object_st*, struct asn1_type_st*) => struct CMS_RecipientInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add0_recipient_password: (struct CMS_ContentInfo_st*, signed int, signed int, signed int, unsigned char*, signed int, const struct evp_cipher_st*) => struct CMS_RecipientInfo_st* 		if ((def(OPENSSL_SYS_SUNOS)&!def(OPENSSL_NO_CMS))|(!def(OPENSSL_NO_CMS)&!def(OPENSSL_SYS_SUNOS)&def(__ultrix)))		at :-1:-1
	CMS_add0_recipient_password: (struct CMS_ContentInfo_st*, signed int, signed int, signed int, unsigned char*, signed long, const struct evp_cipher_st*) => struct CMS_RecipientInfo_st* 		if (!def(OPENSSL_NO_CMS)&!def(OPENSSL_SYS_SUNOS)&!def(__ultrix))		at :-1:-1
	CMS_add1_ReceiptRequest: (struct CMS_SignerInfo_st*, struct CMS_ReceiptRequest_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add1_cert: (struct CMS_ContentInfo_st*, struct x509_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add1_crl: (struct CMS_ContentInfo_st*, struct X509_crl_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add1_recipient_cert: (struct CMS_ContentInfo_st*, struct x509_st*, unsigned int) => struct CMS_RecipientInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add1_signer: (struct CMS_ContentInfo_st*, struct x509_st*, struct evp_pkey_st*, const struct env_md_st*, unsigned int) => struct CMS_SignerInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add_simple_smimecap: (struct stack_st_X509_ALGOR**, signed int, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add_smimecap: (struct CMS_SignerInfo_st*, struct stack_st_X509_ALGOR*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_add_standard_smimecap: (struct stack_st_X509_ALGOR**) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_compress: (struct bio_st*, signed int, unsigned int) => struct CMS_ContentInfo_st* 		if (!def(OPENSSL_NO_CMS)&!def(ZLIB))		at :-1:-1
	CMS_compress: (struct bio_st*, signed int, unsigned int) => struct CMS_ContentInfo_st* 		if (!def(OPENSSL_NO_CMS)&def(ZLIB))		at :-1:-1
	CMS_data: (struct CMS_ContentInfo_st*, struct bio_st*, unsigned int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_dataFinal: (struct CMS_ContentInfo_st*, struct bio_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_dataInit: (struct CMS_ContentInfo_st*, struct bio_st*) => struct bio_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_data_create: (struct bio_st*, unsigned int) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_decrypt: (struct CMS_ContentInfo_st*, struct evp_pkey_st*, struct x509_st*, struct bio_st*, struct bio_st*, unsigned int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_decrypt_set1_key: (struct CMS_ContentInfo_st*, unsigned char*, unsigned long, unsigned char*, unsigned long) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_decrypt_set1_password: (struct CMS_ContentInfo_st*, unsigned char*, signed int) => signed int 		if ((def(OPENSSL_SYS_SUNOS)&!def(OPENSSL_NO_CMS))|(!def(OPENSSL_NO_CMS)&!def(OPENSSL_SYS_SUNOS)&def(__ultrix)))		at :-1:-1
	CMS_decrypt_set1_password: (struct CMS_ContentInfo_st*, unsigned char*, signed long) => signed int 		if (!def(OPENSSL_NO_CMS)&!def(OPENSSL_SYS_SUNOS)&!def(__ultrix))		at :-1:-1
	CMS_decrypt_set1_pkey: (struct CMS_ContentInfo_st*, struct evp_pkey_st*, struct x509_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_digest_create: (struct bio_st*, const struct env_md_st*, unsigned int) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_digest_verify: (struct CMS_ContentInfo_st*, struct bio_st*, struct bio_st*, unsigned int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_encrypt: (struct stack_st_X509*, struct bio_st*, const struct evp_cipher_st*, unsigned int) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_final: (struct CMS_ContentInfo_st*, struct bio_st*, struct bio_st*, unsigned int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_get0_RecipientInfos: (struct CMS_ContentInfo_st*) => struct stack_st_CMS_RecipientInfo* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_get0_SignerInfos: (struct CMS_ContentInfo_st*) => struct stack_st_CMS_SignerInfo* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_get0_content: (struct CMS_ContentInfo_st*) => struct asn1_string_st** 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_get0_eContentType: (struct CMS_ContentInfo_st*) => const struct asn1_object_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_get0_signers: (struct CMS_ContentInfo_st*) => struct stack_st_X509* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_get0_type: (struct CMS_ContentInfo_st*) => const struct asn1_object_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_get1_ReceiptRequest: (struct CMS_SignerInfo_st*, struct CMS_ReceiptRequest_st**) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_get1_certs: (struct CMS_ContentInfo_st*) => struct stack_st_X509* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_get1_crls: (struct CMS_ContentInfo_st*) => struct stack_st_X509_CRL* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_is_detached: (struct CMS_ContentInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_set1_eContentType: (struct CMS_ContentInfo_st*, const struct asn1_object_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_set1_signers_certs: (struct CMS_ContentInfo_st*, struct stack_st_X509*, unsigned int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_set_detached: (struct CMS_ContentInfo_st*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_sign: (struct x509_st*, struct evp_pkey_st*, struct stack_st_X509*, struct bio_st*, unsigned int) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_sign_receipt: (struct CMS_SignerInfo_st*, struct x509_st*, struct evp_pkey_st*, struct stack_st_X509*, unsigned int) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_signed_add1_attr: (struct CMS_SignerInfo_st*, struct x509_attributes_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_signed_add1_attr_by_NID: (struct CMS_SignerInfo_st*, signed int, signed int, const void*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_signed_add1_attr_by_OBJ: (struct CMS_SignerInfo_st*, const struct asn1_object_st*, signed int, const void*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_signed_add1_attr_by_txt: (struct CMS_SignerInfo_st*, const char*, signed int, const void*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_signed_delete_attr: (struct CMS_SignerInfo_st*, signed int) => struct x509_attributes_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_signed_get0_data_by_OBJ: (struct CMS_SignerInfo_st*, struct asn1_object_st*, signed int, signed int) => void* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_signed_get_attr: (const struct CMS_SignerInfo_st*, signed int) => struct x509_attributes_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_signed_get_attr_by_NID: (const struct CMS_SignerInfo_st*, signed int, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_signed_get_attr_by_OBJ: (const struct CMS_SignerInfo_st*, struct asn1_object_st*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_signed_get_attr_count: (const struct CMS_SignerInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_stream: (unsigned char***, struct CMS_ContentInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_uncompress: (struct CMS_ContentInfo_st*, struct bio_st*, struct bio_st*, unsigned int) => signed int 		if (!def(OPENSSL_NO_CMS)&!def(ZLIB))		at :-1:-1
	CMS_uncompress: (struct CMS_ContentInfo_st*, struct bio_st*, struct bio_st*, unsigned int) => signed int 		if (!def(OPENSSL_NO_CMS)&def(ZLIB))		at :-1:-1
	CMS_unsigned_add1_attr: (struct CMS_SignerInfo_st*, struct x509_attributes_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_unsigned_add1_attr_by_NID: (struct CMS_SignerInfo_st*, signed int, signed int, const void*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_unsigned_add1_attr_by_OBJ: (struct CMS_SignerInfo_st*, const struct asn1_object_st*, signed int, const void*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_unsigned_add1_attr_by_txt: (struct CMS_SignerInfo_st*, const char*, signed int, const void*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_unsigned_delete_attr: (struct CMS_SignerInfo_st*, signed int) => struct x509_attributes_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_unsigned_get0_data_by_OBJ: (struct CMS_SignerInfo_st*, struct asn1_object_st*, signed int, signed int) => void* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_unsigned_get_attr: (const struct CMS_SignerInfo_st*, signed int) => struct x509_attributes_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_unsigned_get_attr_by_NID: (const struct CMS_SignerInfo_st*, signed int, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_unsigned_get_attr_by_OBJ: (const struct CMS_SignerInfo_st*, struct asn1_object_st*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_unsigned_get_attr_count: (const struct CMS_SignerInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_verify: (struct CMS_ContentInfo_st*, struct stack_st_X509*, struct x509_store_st*, struct bio_st*, struct bio_st*, unsigned int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	CMS_verify_receipt: (struct CMS_ContentInfo_st*, struct CMS_ContentInfo_st*, struct stack_st_X509*, struct x509_store_st*, unsigned int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	COMP_CTX_free: (struct comp_ctx_st*) => void 		if True		at :-1:-1
	COMP_CTX_new: (struct comp_method_st*) => struct comp_ctx_st* 		if True		at :-1:-1
	COMP_compress_block: (struct comp_ctx_st*, unsigned char*, signed int, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	COMP_expand_block: (struct comp_ctx_st*, unsigned char*, signed int, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	COMP_rle: (void) => struct comp_method_st* 		if True		at :-1:-1
	COMP_zlib: (void) => struct comp_method_st* 		if True		at :-1:-1
	COMP_zlib_cleanup: (void) => void 		if True		at :-1:-1
	CONF_dump_bio: (struct lhash_st_CONF_VALUE*, struct bio_st*) => signed int 		if True		at :-1:-1
	CONF_dump_fp: (struct lhash_st_CONF_VALUE*, struct _IO_FILE*) => signed int 		if True		at :-1:-1
	CONF_free: (struct lhash_st_CONF_VALUE*) => void 		if True		at :-1:-1
	CONF_get1_default_config_file: (void) => char* 		if True		at :-1:-1
	CONF_get_number: (struct lhash_st_CONF_VALUE*, const char*, const char*) => signed long 		if True		at :-1:-1
	CONF_get_section: (struct lhash_st_CONF_VALUE*, const char*) => struct stack_st_CONF_VALUE* 		if True		at :-1:-1
	CONF_get_string: (struct lhash_st_CONF_VALUE*, const char*, const char*) => char* 		if True		at :-1:-1
	CONF_imodule_get_flags: (const struct conf_imodule_st*) => unsigned long 		if True		at :-1:-1
	CONF_imodule_get_module: (const struct conf_imodule_st*) => struct conf_module_st* 		if True		at :-1:-1
	CONF_imodule_get_name: (const struct conf_imodule_st*) => const char* 		if True		at :-1:-1
	CONF_imodule_get_usr_data: (const struct conf_imodule_st*) => void* 		if True		at :-1:-1
	CONF_imodule_get_value: (const struct conf_imodule_st*) => const char* 		if True		at :-1:-1
	CONF_imodule_set_flags: (struct conf_imodule_st*, unsigned long) => void 		if True		at :-1:-1
	CONF_imodule_set_usr_data: (struct conf_imodule_st*, void*) => void 		if True		at :-1:-1
	CONF_load: (struct lhash_st_CONF_VALUE*, const char*, signed long*) => struct lhash_st_CONF_VALUE* 		if True		at :-1:-1
	CONF_load_bio: (struct lhash_st_CONF_VALUE*, struct bio_st*, signed long*) => struct lhash_st_CONF_VALUE* 		if True		at :-1:-1
	CONF_load_fp: (struct lhash_st_CONF_VALUE*, struct _IO_FILE*, signed long*) => struct lhash_st_CONF_VALUE* 		if True		at :-1:-1
	CONF_module_add: (const char*, (struct conf_imodule_st*, const struct conf_st*) => signed int*, (struct conf_imodule_st*) => void*) => signed int 		if True		at :-1:-1
	CONF_module_get_usr_data: (struct conf_module_st*) => void* 		if True		at :-1:-1
	CONF_module_set_usr_data: (struct conf_module_st*, void*) => void 		if True		at :-1:-1
	CONF_modules_finish: (void) => void 		if True		at :-1:-1
	CONF_modules_free: (void) => void 		if True		at :-1:-1
	CONF_modules_load: (const struct conf_st*, const char*, unsigned long) => signed int 		if True		at :-1:-1
	CONF_modules_load_file: (const char*, const char*, unsigned long) => signed int 		if True		at :-1:-1
	CONF_modules_unload: (signed int) => void 		if True		at :-1:-1
	CONF_parse_list: (const char*, signed int, signed int, (const char*, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	CONF_set_default_method: (struct conf_method_st*) => signed int 		if True		at :-1:-1
	CONF_set_nconf: (struct conf_st*, struct lhash_st_CONF_VALUE*) => void 		if True		at :-1:-1
	CRL_DIST_POINTS_free: (struct stack_st_DIST_POINT*) => void 		if True		at :-1:-1
	CRL_DIST_POINTS_new: (void) => struct stack_st_DIST_POINT* 		if True		at :-1:-1
	CRYPTO_THREADID_cmp: (const struct crypto_threadid_st*, const struct crypto_threadid_st*) => signed int 		if True		at :-1:-1
	CRYPTO_THREADID_cpy: (struct crypto_threadid_st*, const struct crypto_threadid_st*) => void 		if True		at :-1:-1
	CRYPTO_THREADID_current: (struct crypto_threadid_st*) => void 		if True		at :-1:-1
	CRYPTO_THREADID_get_callback: (void) => (struct crypto_threadid_st*) => void* 		if True		at :-1:-1
	CRYPTO_THREADID_hash: (const struct crypto_threadid_st*) => unsigned long 		if True		at :-1:-1
	CRYPTO_THREADID_set_callback: ((struct crypto_threadid_st*) => void*) => signed int 		if True		at :-1:-1
	CRYPTO_THREADID_set_numeric: (struct crypto_threadid_st*, unsigned long) => void 		if True		at :-1:-1
	CRYPTO_THREADID_set_pointer: (struct crypto_threadid_st*, void*) => void 		if True		at :-1:-1
	CRYPTO_add_lock: (signed int*, signed int, signed int, const char*, signed int) => signed int 		if True		at :-1:-1
	CRYPTO_cbc128_decrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], (const unsigned char[], unsigned char[], const void*) => void*) => void 		if True		at :-1:-1
	CRYPTO_cbc128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], (const unsigned char[], unsigned char[], const void*) => void*) => void 		if True		at :-1:-1
	CRYPTO_ccm128_aad: (struct ccm128_context*, const unsigned char*, unsigned long) => void 		if True		at :-1:-1
	CRYPTO_ccm128_decrypt: (struct ccm128_context*, const unsigned char*, unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	CRYPTO_ccm128_decrypt_ccm64: (struct ccm128_context*, const unsigned char*, unsigned char*, unsigned long, (const unsigned char*, unsigned char*, unsigned long, const void*, const unsigned char[], unsigned char[]) => void*) => signed int 		if True		at :-1:-1
	CRYPTO_ccm128_encrypt: (struct ccm128_context*, const unsigned char*, unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	CRYPTO_ccm128_encrypt_ccm64: (struct ccm128_context*, const unsigned char*, unsigned char*, unsigned long, (const unsigned char*, unsigned char*, unsigned long, const void*, const unsigned char[], unsigned char[]) => void*) => signed int 		if True		at :-1:-1
	CRYPTO_ccm128_init: (struct ccm128_context*, unsigned int, unsigned int, void*, (const unsigned char[], unsigned char[], const void*) => void*) => void 		if True		at :-1:-1
	CRYPTO_ccm128_setiv: (struct ccm128_context*, const unsigned char*, unsigned long, unsigned long) => signed int 		if True		at :-1:-1
	CRYPTO_ccm128_tag: (struct ccm128_context*, unsigned char*, unsigned long) => unsigned long 		if True		at :-1:-1
	CRYPTO_cfb128_1_encrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], signed int*, signed int, (const unsigned char[], unsigned char[], const void*) => void*) => void 		if True		at :-1:-1
	CRYPTO_cfb128_8_encrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], signed int*, signed int, (const unsigned char[], unsigned char[], const void*) => void*) => void 		if True		at :-1:-1
	CRYPTO_cfb128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], signed int*, signed int, (const unsigned char[], unsigned char[], const void*) => void*) => void 		if True		at :-1:-1
	CRYPTO_cleanup_all_ex_data: (void) => void 		if True		at :-1:-1
	CRYPTO_ctr128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], unsigned char[], unsigned int*, (const unsigned char[], unsigned char[], const void*) => void*) => void 		if True		at :-1:-1
	CRYPTO_ctr128_encrypt_ctr32: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], unsigned char[], unsigned int*, (const unsigned char*, unsigned char*, unsigned long, const void*, const unsigned char[]) => void*) => void 		if True		at :-1:-1
	CRYPTO_cts128_decrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], signed int) => void*) => unsigned long 		if True		at :-1:-1
	CRYPTO_cts128_decrypt_block: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], (const unsigned char[], unsigned char[], const void*) => void*) => unsigned long 		if True		at :-1:-1
	CRYPTO_cts128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], signed int) => void*) => unsigned long 		if True		at :-1:-1
	CRYPTO_cts128_encrypt_block: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], (const unsigned char[], unsigned char[], const void*) => void*) => unsigned long 		if True		at :-1:-1
	CRYPTO_dbg_free: (void*, signed int) => void 		if True		at :-1:-1
	CRYPTO_dbg_get_options: (void) => signed long 		if True		at :-1:-1
	CRYPTO_dbg_malloc: (void*, signed int, const char*, signed int, signed int) => void 		if True		at :-1:-1
	CRYPTO_dbg_realloc: (void*, void*, signed int, const char*, signed int, signed int) => void 		if True		at :-1:-1
	CRYPTO_dbg_set_options: (signed long) => void 		if True		at :-1:-1
	CRYPTO_destroy_dynlockid: (signed int) => void 		if True		at :-1:-1
	CRYPTO_dup_ex_data: (signed int, struct crypto_ex_data_st*, struct crypto_ex_data_st*) => signed int 		if True		at :-1:-1
	CRYPTO_ex_data_new_class: (void) => signed int 		if True		at :-1:-1
	CRYPTO_free: (void*) => void 		if True		at :-1:-1
	CRYPTO_free_ex_data: (signed int, void*, struct crypto_ex_data_st*) => void 		if True		at :-1:-1
	CRYPTO_free_locked: (void*) => void 		if True		at :-1:-1
	CRYPTO_gcm128_aad: (struct gcm128_context*, const unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	CRYPTO_gcm128_decrypt: (struct gcm128_context*, const unsigned char*, unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	CRYPTO_gcm128_decrypt_ctr32: (struct gcm128_context*, const unsigned char*, unsigned char*, unsigned long, (const unsigned char*, unsigned char*, unsigned long, const void*, const unsigned char[]) => void*) => signed int 		if True		at :-1:-1
	CRYPTO_gcm128_encrypt: (struct gcm128_context*, const unsigned char*, unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	CRYPTO_gcm128_encrypt_ctr32: (struct gcm128_context*, const unsigned char*, unsigned char*, unsigned long, (const unsigned char*, unsigned char*, unsigned long, const void*, const unsigned char[]) => void*) => signed int 		if True		at :-1:-1
	CRYPTO_gcm128_finish: (struct gcm128_context*, const unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	CRYPTO_gcm128_init: (struct gcm128_context*, void*, (const unsigned char[], unsigned char[], const void*) => void*) => void 		if True		at :-1:-1
	CRYPTO_gcm128_new: (void*, (const unsigned char[], unsigned char[], const void*) => void*) => struct gcm128_context* 		if True		at :-1:-1
	CRYPTO_gcm128_release: (struct gcm128_context*) => void 		if True		at :-1:-1
	CRYPTO_gcm128_setiv: (struct gcm128_context*, const unsigned char*, unsigned long) => void 		if True		at :-1:-1
	CRYPTO_gcm128_tag: (struct gcm128_context*, unsigned char*, unsigned long) => void 		if True		at :-1:-1
	CRYPTO_get_add_lock_callback: (void) => (signed int*, signed int, signed int, const char*, signed int) => signed int* 		if True		at :-1:-1
	CRYPTO_get_dynlock_create_callback: (void) => (const char*, signed int) => struct CRYPTO_dynlock_value** 		if True		at :-1:-1
	CRYPTO_get_dynlock_destroy_callback: (void) => (struct CRYPTO_dynlock_value*, const char*, signed int) => void* 		if True		at :-1:-1
	CRYPTO_get_dynlock_lock_callback: (void) => (signed int, struct CRYPTO_dynlock_value*, const char*, signed int) => void* 		if True		at :-1:-1
	CRYPTO_get_dynlock_value: (signed int) => struct CRYPTO_dynlock_value* 		if True		at :-1:-1
	CRYPTO_get_ex_data: (const struct crypto_ex_data_st*, signed int) => void* 		if True		at :-1:-1
	CRYPTO_get_ex_data_implementation: (void) => const struct st_CRYPTO_EX_DATA_IMPL* 		if True		at :-1:-1
	CRYPTO_get_ex_new_index: (signed int, signed long, void*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => signed int*, (struct crypto_ex_data_st*, struct crypto_ex_data_st*, void*, signed int, signed long, void*) => signed int*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => void*) => signed int 		if True		at :-1:-1
	CRYPTO_get_id_callback: (void) => (void) => unsigned long* 		if True		at :-1:-1
	CRYPTO_get_lock_name: (signed int) => const char* 		if True		at :-1:-1
	CRYPTO_get_locked_mem_ex_functions: ((unsigned long, const char*, signed int) => void***, (void*) => void**) => void 		if True		at :-1:-1
	CRYPTO_get_locked_mem_functions: ((unsigned long) => void***, (void*) => void**) => void 		if True		at :-1:-1
	CRYPTO_get_locking_callback: (void) => (signed int, signed int, const char*, signed int) => void* 		if True		at :-1:-1
	CRYPTO_get_mem_debug_functions: ((void*, signed int, const char*, signed int, signed int) => void**, (void*, void*, signed int, const char*, signed int, signed int) => void**, (void*, signed int) => void**, (signed long) => void**, (void) => signed long**) => void 		if True		at :-1:-1
	CRYPTO_get_mem_debug_options: (void) => signed long 		if True		at :-1:-1
	CRYPTO_get_mem_ex_functions: ((unsigned long, const char*, signed int) => void***, (void*, unsigned long, const char*, signed int) => void***, (void*) => void**) => void 		if True		at :-1:-1
	CRYPTO_get_mem_functions: ((unsigned long) => void***, (void*, unsigned long) => void***, (void*) => void**) => void 		if True		at :-1:-1
	CRYPTO_get_new_dynlockid: (void) => signed int 		if True		at :-1:-1
	CRYPTO_get_new_lockid: (char*) => signed int 		if True		at :-1:-1
	CRYPTO_is_mem_check_on: (void) => signed int 		if True		at :-1:-1
	CRYPTO_lock: (signed int, signed int, const char*, signed int) => void 		if True		at :-1:-1
	CRYPTO_malloc: (signed int, const char*, signed int) => void* 		if True		at :-1:-1
	CRYPTO_malloc_locked: (signed int, const char*, signed int) => void* 		if True		at :-1:-1
	CRYPTO_mem_ctrl: (signed int) => signed int 		if True		at :-1:-1
	CRYPTO_mem_leaks: (struct bio_st*) => void 		if True		at :-1:-1
	CRYPTO_mem_leaks_cb: ((unsigned long, const char*, signed int, signed int, void*) => void**) => void 		if True		at :-1:-1
	CRYPTO_mem_leaks_fp: (struct _IO_FILE*) => void 		if True		at :-1:-1
	CRYPTO_new_ex_data: (signed int, void*, struct crypto_ex_data_st*) => signed int 		if True		at :-1:-1
	CRYPTO_nistcts128_decrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], signed int) => void*) => unsigned long 		if True		at :-1:-1
	CRYPTO_nistcts128_decrypt_block: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], (const unsigned char[], unsigned char[], const void*) => void*) => unsigned long 		if True		at :-1:-1
	CRYPTO_nistcts128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], signed int) => void*) => unsigned long 		if True		at :-1:-1
	CRYPTO_nistcts128_encrypt_block: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], (const unsigned char[], unsigned char[], const void*) => void*) => unsigned long 		if True		at :-1:-1
	CRYPTO_num_locks: (void) => signed int 		if True		at :-1:-1
	CRYPTO_ofb128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const void*, unsigned char[], signed int*, (const unsigned char[], unsigned char[], const void*) => void*) => void 		if True		at :-1:-1
	CRYPTO_pop_info: (void) => signed int 		if True		at :-1:-1
	CRYPTO_push_info_: (const char*, const char*, signed int) => signed int 		if True		at :-1:-1
	CRYPTO_realloc: (void*, signed int, const char*, signed int) => void* 		if True		at :-1:-1
	CRYPTO_realloc_clean: (void*, signed int, signed int, const char*, signed int) => void* 		if True		at :-1:-1
	CRYPTO_remalloc: (void*, signed int, const char*, signed int) => void* 		if True		at :-1:-1
	CRYPTO_remove_all_info: (void) => signed int 		if True		at :-1:-1
	CRYPTO_set_add_lock_callback: ((signed int*, signed int, signed int, const char*, signed int) => signed int*) => void 		if True		at :-1:-1
	CRYPTO_set_dynlock_create_callback: ((const char*, signed int) => struct CRYPTO_dynlock_value**) => void 		if True		at :-1:-1
	CRYPTO_set_dynlock_destroy_callback: ((struct CRYPTO_dynlock_value*, const char*, signed int) => void*) => void 		if True		at :-1:-1
	CRYPTO_set_dynlock_lock_callback: ((signed int, struct CRYPTO_dynlock_value*, const char*, signed int) => void*) => void 		if True		at :-1:-1
	CRYPTO_set_ex_data: (struct crypto_ex_data_st*, signed int, void*) => signed int 		if True		at :-1:-1
	CRYPTO_set_ex_data_implementation: (const struct st_CRYPTO_EX_DATA_IMPL*) => signed int 		if True		at :-1:-1
	CRYPTO_set_id_callback: ((void) => unsigned long*) => void 		if True		at :-1:-1
	CRYPTO_set_locked_mem_ex_functions: ((unsigned long, const char*, signed int) => void**, (void*) => void*) => signed int 		if True		at :-1:-1
	CRYPTO_set_locked_mem_functions: ((unsigned long) => void**, (void*) => void*) => signed int 		if True		at :-1:-1
	CRYPTO_set_locking_callback: ((signed int, signed int, const char*, signed int) => void*) => void 		if True		at :-1:-1
	CRYPTO_set_mem_debug_functions: ((void*, signed int, const char*, signed int, signed int) => void*, (void*, void*, signed int, const char*, signed int, signed int) => void*, (void*, signed int) => void*, (signed long) => void*, (void) => signed long*) => signed int 		if True		at :-1:-1
	CRYPTO_set_mem_debug_options: (signed long) => void 		if True		at :-1:-1
	CRYPTO_set_mem_ex_functions: ((unsigned long, const char*, signed int) => void**, (void*, unsigned long, const char*, signed int) => void**, (void*) => void*) => signed int 		if True		at :-1:-1
	CRYPTO_set_mem_functions: ((unsigned long) => void**, (void*, unsigned long) => void**, (void*) => void*) => signed int 		if True		at :-1:-1
	CRYPTO_strdup: (const char*, const char*, signed int) => char* 		if True		at :-1:-1
	CRYPTO_thread_id: (void) => unsigned long 		if True		at :-1:-1
	CRYPTO_xts128_encrypt: (const struct xts128_context*, const unsigned char[], const unsigned char*, unsigned char*, unsigned long, signed int) => signed int 		if True		at :-1:-1
	Camellia_cfb128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct camellia_key_st*, unsigned char*, signed int*, const signed int) => void 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	Camellia_cfb1_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct camellia_key_st*, unsigned char*, signed int*, const signed int) => void 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	Camellia_cfb8_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct camellia_key_st*, unsigned char*, signed int*, const signed int) => void 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	Camellia_ctr128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct camellia_key_st*, unsigned char[], unsigned char[], unsigned int*) => void 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	Camellia_decrypt: (const unsigned char*, unsigned char*, const struct camellia_key_st*) => void 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	Camellia_ecb_encrypt: (const unsigned char*, unsigned char*, const struct camellia_key_st*, const signed int) => void 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	Camellia_encrypt: (const unsigned char*, unsigned char*, const struct camellia_key_st*) => void 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	Camellia_ofb128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct camellia_key_st*, unsigned char*, signed int*) => void 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	Camellia_set_key: (const unsigned char*, const signed int, struct camellia_key_st*) => signed int 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	DES_cbc_cksum: (const unsigned char*, unsigned char[]*, signed long, struct DES_ks*, unsigned char[]*) => unsigned int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_cbc_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_cfb64_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, unsigned char[]*, signed int*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_cfb_encrypt: (const unsigned char*, unsigned char*, signed int, signed long, struct DES_ks*, unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_check_key_parity: (unsigned char[]*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_crypt: (const char*, const char*) => char* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_decrypt3: (unsigned int*, struct DES_ks*, struct DES_ks*, struct DES_ks*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_ecb3_encrypt: (unsigned char[]*, unsigned char[]*, struct DES_ks*, struct DES_ks*, struct DES_ks*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_ecb_encrypt: (unsigned char[]*, unsigned char[]*, struct DES_ks*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_ede3_cbc_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, struct DES_ks*, struct DES_ks*, unsigned char[]*, signed int) => void 		if (!def(OPENSSL_NO_DES)&!def(DES_DEFAULT_OPTIONS))		at :-1:-1
	DES_ede3_cbcm_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, struct DES_ks*, struct DES_ks*, unsigned char[]*, unsigned char[]*, signed int) => void 		if (!def(OPENSSL_NO_DES)&!def(OPENSSL_NO_DESCBCM))		at :-1:-1
	DES_ede3_cfb64_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, struct DES_ks*, struct DES_ks*, unsigned char[]*, signed int*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_ede3_cfb_encrypt: (const unsigned char*, unsigned char*, signed int, signed long, struct DES_ks*, struct DES_ks*, struct DES_ks*, unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_ede3_ofb64_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, struct DES_ks*, struct DES_ks*, unsigned char[]*, signed int*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_enc_read: (signed int, void*, signed int, struct DES_ks*, unsigned char[]*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_enc_write: (signed int, const void*, signed int, struct DES_ks*, unsigned char[]*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_encrypt1: (unsigned int*, struct DES_ks*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_encrypt2: (unsigned int*, struct DES_ks*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_encrypt3: (unsigned int*, struct DES_ks*, struct DES_ks*, struct DES_ks*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_fcrypt: (const char*, const char*, char*) => char* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_is_weak_key: (unsigned char[]*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_key_sched: (unsigned char[]*, struct DES_ks*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_ncbc_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, unsigned char[]*, signed int) => void 		if (!def(OPENSSL_NO_DES)&!def(DES_DEFAULT_OPTIONS))		at :-1:-1
	DES_ofb64_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, unsigned char[]*, signed int*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_ofb_encrypt: (const unsigned char*, unsigned char*, signed int, signed long, struct DES_ks*, unsigned char[]*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_options: (void) => const char* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_pcbc_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_quad_cksum: (const unsigned char*, unsigned char[][], signed long, signed int, unsigned char[]*) => unsigned int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_random_key: (unsigned char[]*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_read_2passwords: (unsigned char[]*, unsigned char[]*, const char*, signed int) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_read_password: (unsigned char[]*, const char*, signed int) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_set_key: (unsigned char[]*, struct DES_ks*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_set_key_checked: (unsigned char[]*, struct DES_ks*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_set_key_unchecked: (unsigned char[]*, struct DES_ks*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_set_odd_parity: (unsigned char[]*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_string_to_2keys: (const char*, unsigned char[]*, unsigned char[]*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_string_to_key: (const char*, unsigned char[]*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DES_xcbc_encrypt: (const unsigned char*, unsigned char*, signed long, struct DES_ks*, unsigned char[]*, unsigned char[]*, unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	DH_OpenSSL: (void) => const struct dh_method* 		if True		at :-1:-1
	DH_check: (const struct dh_st*, signed int*) => signed int 		if True		at :-1:-1
	DH_check_pub_key: (const struct dh_st*, const struct bignum_st*, signed int*) => signed int 		if True		at :-1:-1
	DH_compute_key: (unsigned char*, const struct bignum_st*, struct dh_st*) => signed int 		if True		at :-1:-1
	DH_free: (struct dh_st*) => void 		if True		at :-1:-1
	DH_generate_key: (struct dh_st*) => signed int 		if True		at :-1:-1
	DH_generate_parameters: (signed int, signed int, (signed int, signed int, void*) => void*, void*) => struct dh_st* 		if True		at :-1:-1
	DH_generate_parameters_ex: (struct dh_st*, signed int, signed int, struct bn_gencb_st*) => signed int 		if True		at :-1:-1
	DH_get_default_method: (void) => const struct dh_method* 		if True		at :-1:-1
	DH_get_ex_data: (struct dh_st*, signed int) => void* 		if True		at :-1:-1
	DH_get_ex_new_index: (signed long, void*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => signed int*, (struct crypto_ex_data_st*, struct crypto_ex_data_st*, void*, signed int, signed long, void*) => signed int*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => void*) => signed int 		if True		at :-1:-1
	DH_new: (void) => struct dh_st* 		if True		at :-1:-1
	DH_new_method: (struct engine_st*) => struct dh_st* 		if True		at :-1:-1
	DH_set_default_method: (const struct dh_method*) => void 		if True		at :-1:-1
	DH_set_ex_data: (struct dh_st*, signed int, void*) => signed int 		if True		at :-1:-1
	DH_set_method: (struct dh_st*, const struct dh_method*) => signed int 		if True		at :-1:-1
	DH_size: (const struct dh_st*) => signed int 		if True		at :-1:-1
	DH_up_ref: (struct dh_st*) => signed int 		if True		at :-1:-1
	DHparams_dup: (struct dh_st*) => struct dh_st* 		if True		at :-1:-1
	DHparams_print: (struct bio_st*, const struct dh_st*) => signed int 		if True		at :-1:-1
	DHparams_print_fp: (struct _IO_FILE*, const struct dh_st*) => signed int 		if True		at :-1:-1
	DIRECTORYSTRING_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	DIRECTORYSTRING_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	DISPLAYTEXT_free: (struct asn1_string_st*) => void 		if True		at :-1:-1
	DISPLAYTEXT_new: (void) => struct asn1_string_st* 		if True		at :-1:-1
	DIST_POINT_NAME_free: (struct DIST_POINT_NAME_st*) => void 		if True		at :-1:-1
	DIST_POINT_NAME_new: (void) => struct DIST_POINT_NAME_st* 		if True		at :-1:-1
	DIST_POINT_free: (struct DIST_POINT_st*) => void 		if True		at :-1:-1
	DIST_POINT_new: (void) => struct DIST_POINT_st* 		if True		at :-1:-1
	DIST_POINT_set_dpname: (struct DIST_POINT_NAME_st*, struct X509_name_st*) => signed int 		if True		at :-1:-1
	DSA_OpenSSL: (void) => const struct dsa_method* 		if True		at :-1:-1
	DSA_SIG_free: (struct DSA_SIG_st*) => void 		if True		at :-1:-1
	DSA_SIG_new: (void) => struct DSA_SIG_st* 		if True		at :-1:-1
	DSA_do_sign: (const unsigned char*, signed int, struct dsa_st*) => struct DSA_SIG_st* 		if True		at :-1:-1
	DSA_do_verify: (const unsigned char*, signed int, struct DSA_SIG_st*, struct dsa_st*) => signed int 		if True		at :-1:-1
	DSA_dup_DH: (const struct dsa_st*) => struct dh_st* 		if True		at :-1:-1
	DSA_free: (struct dsa_st*) => void 		if True		at :-1:-1
	DSA_generate_key: (struct dsa_st*) => signed int 		if True		at :-1:-1
	DSA_generate_parameters: (signed int, unsigned char*, signed int, signed int*, unsigned long*, (signed int, signed int, void*) => void*, void*) => struct dsa_st* 		if True		at :-1:-1
	DSA_generate_parameters_ex: (struct dsa_st*, signed int, const unsigned char*, signed int, signed int*, unsigned long*, struct bn_gencb_st*) => signed int 		if True		at :-1:-1
	DSA_get_default_method: (void) => const struct dsa_method* 		if True		at :-1:-1
	DSA_get_ex_data: (struct dsa_st*, signed int) => void* 		if True		at :-1:-1
	DSA_get_ex_new_index: (signed long, void*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => signed int*, (struct crypto_ex_data_st*, struct crypto_ex_data_st*, void*, signed int, signed long, void*) => signed int*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => void*) => signed int 		if True		at :-1:-1
	DSA_new: (void) => struct dsa_st* 		if True		at :-1:-1
	DSA_new_method: (struct engine_st*) => struct dsa_st* 		if True		at :-1:-1
	DSA_print: (struct bio_st*, const struct dsa_st*, signed int) => signed int 		if True		at :-1:-1
	DSA_print_fp: (struct _IO_FILE*, const struct dsa_st*, signed int) => signed int 		if True		at :-1:-1
	DSA_set_default_method: (const struct dsa_method*) => void 		if True		at :-1:-1
	DSA_set_ex_data: (struct dsa_st*, signed int, void*) => signed int 		if True		at :-1:-1
	DSA_set_method: (struct dsa_st*, const struct dsa_method*) => signed int 		if True		at :-1:-1
	DSA_sign: (signed int, const unsigned char*, signed int, unsigned char*, unsigned int*, struct dsa_st*) => signed int 		if True		at :-1:-1
	DSA_sign_setup: (struct dsa_st*, struct bignum_ctx*, struct bignum_st**, struct bignum_st**) => signed int 		if True		at :-1:-1
	DSA_size: (const struct dsa_st*) => signed int 		if True		at :-1:-1
	DSA_up_ref: (struct dsa_st*) => signed int 		if True		at :-1:-1
	DSA_verify: (signed int, const unsigned char*, signed int, const unsigned char*, signed int, struct dsa_st*) => signed int 		if True		at :-1:-1
	DSAparams_dup: (struct dsa_st*) => struct dsa_st* 		if True		at :-1:-1
	DSAparams_print: (struct bio_st*, const struct dsa_st*) => signed int 		if True		at :-1:-1
	DSAparams_print_fp: (struct _IO_FILE*, const struct dsa_st*) => signed int 		if True		at :-1:-1
	DSO_METHOD_beos: (void) => struct dso_meth_st* 		if True		at :-1:-1
	DSO_METHOD_dl: (void) => struct dso_meth_st* 		if True		at :-1:-1
	DSO_METHOD_dlfcn: (void) => struct dso_meth_st* 		if True		at :-1:-1
	DSO_METHOD_null: (void) => struct dso_meth_st* 		if True		at :-1:-1
	DSO_METHOD_openssl: (void) => struct dso_meth_st* 		if True		at :-1:-1
	DSO_METHOD_vms: (void) => struct dso_meth_st* 		if True		at :-1:-1
	DSO_METHOD_win32: (void) => struct dso_meth_st* 		if True		at :-1:-1
	DSO_bind_func: (struct dso_st*, const char*) => (void) => void* 		if True		at :-1:-1
	DSO_bind_var: (struct dso_st*, const char*) => void* 		if True		at :-1:-1
	DSO_convert_filename: (struct dso_st*, const char*) => char* 		if True		at :-1:-1
	DSO_ctrl: (struct dso_st*, signed int, signed long, void*) => signed long 		if True		at :-1:-1
	DSO_flags: (struct dso_st*) => signed int 		if True		at :-1:-1
	DSO_free: (struct dso_st*) => signed int 		if True		at :-1:-1
	DSO_get_default_method: (void) => struct dso_meth_st* 		if True		at :-1:-1
	DSO_get_filename: (struct dso_st*) => const char* 		if True		at :-1:-1
	DSO_get_loaded_filename: (struct dso_st*) => const char* 		if True		at :-1:-1
	DSO_get_method: (struct dso_st*) => struct dso_meth_st* 		if True		at :-1:-1
	DSO_global_lookup: (const char*) => void* 		if True		at :-1:-1
	DSO_load: (struct dso_st*, const char*, struct dso_meth_st*, signed int) => struct dso_st* 		if True		at :-1:-1
	DSO_merge: (struct dso_st*, const char*, const char*) => char* 		if True		at :-1:-1
	DSO_new: (void) => struct dso_st* 		if True		at :-1:-1
	DSO_new_method: (struct dso_meth_st*) => struct dso_st* 		if True		at :-1:-1
	DSO_pathbyaddr: (void*, char*, signed int) => signed int 		if True		at :-1:-1
	DSO_set_default_method: (struct dso_meth_st*) => void 		if True		at :-1:-1
	DSO_set_filename: (struct dso_st*, const char*) => signed int 		if True		at :-1:-1
	DSO_set_method: (struct dso_st*, struct dso_meth_st*) => struct dso_meth_st* 		if True		at :-1:-1
	DSO_set_name_converter: (struct dso_st*, (struct dso_st*, const char*) => char**, (struct dso_st*, const char*) => char***) => signed int 		if True		at :-1:-1
	DSO_up_ref: (struct dso_st*) => signed int 		if True		at :-1:-1
	ECDH_OpenSSL: (void) => const struct ecdh_method* 		if True		at :-1:-1
	ECDH_compute_key: (void*, unsigned long, const struct ec_point_st*, struct ec_key_st*, (const void*, unsigned long, void*, unsigned long*) => void**) => signed int 		if True		at :-1:-1
	ECDH_get_default_method: (void) => const struct ecdh_method* 		if True		at :-1:-1
	ECDH_get_ex_data: (struct ec_key_st*, signed int) => void* 		if True		at :-1:-1
	ECDH_get_ex_new_index: (signed long, void*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => signed int*, (struct crypto_ex_data_st*, struct crypto_ex_data_st*, void*, signed int, signed long, void*) => signed int*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => void*) => signed int 		if True		at :-1:-1
	ECDH_set_default_method: (const struct ecdh_method*) => void 		if True		at :-1:-1
	ECDH_set_ex_data: (struct ec_key_st*, signed int, void*) => signed int 		if True		at :-1:-1
	ECDH_set_method: (struct ec_key_st*, const struct ecdh_method*) => signed int 		if True		at :-1:-1
	ECDSA_OpenSSL: (void) => const struct ecdsa_method* 		if True		at :-1:-1
	ECDSA_SIG_free: (struct ECDSA_SIG_st*) => void 		if True		at :-1:-1
	ECDSA_SIG_new: (void) => struct ECDSA_SIG_st* 		if True		at :-1:-1
	ECDSA_do_sign: (const unsigned char*, signed int, struct ec_key_st*) => struct ECDSA_SIG_st* 		if True		at :-1:-1
	ECDSA_do_sign_ex: (const unsigned char*, signed int, const struct bignum_st*, const struct bignum_st*, struct ec_key_st*) => struct ECDSA_SIG_st* 		if True		at :-1:-1
	ECDSA_do_verify: (const unsigned char*, signed int, const struct ECDSA_SIG_st*, struct ec_key_st*) => signed int 		if True		at :-1:-1
	ECDSA_get_default_method: (void) => const struct ecdsa_method* 		if True		at :-1:-1
	ECDSA_get_ex_data: (struct ec_key_st*, signed int) => void* 		if True		at :-1:-1
	ECDSA_get_ex_new_index: (signed long, void*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => signed int*, (struct crypto_ex_data_st*, struct crypto_ex_data_st*, void*, signed int, signed long, void*) => signed int*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => void*) => signed int 		if True		at :-1:-1
	ECDSA_set_default_method: (const struct ecdsa_method*) => void 		if True		at :-1:-1
	ECDSA_set_ex_data: (struct ec_key_st*, signed int, void*) => signed int 		if True		at :-1:-1
	ECDSA_set_method: (struct ec_key_st*, const struct ecdsa_method*) => signed int 		if True		at :-1:-1
	ECDSA_sign: (signed int, const unsigned char*, signed int, unsigned char*, unsigned int*, struct ec_key_st*) => signed int 		if True		at :-1:-1
	ECDSA_sign_ex: (signed int, const unsigned char*, signed int, unsigned char*, unsigned int*, const struct bignum_st*, const struct bignum_st*, struct ec_key_st*) => signed int 		if True		at :-1:-1
	ECDSA_sign_setup: (struct ec_key_st*, struct bignum_ctx*, struct bignum_st**, struct bignum_st**) => signed int 		if True		at :-1:-1
	ECDSA_size: (const struct ec_key_st*) => signed int 		if True		at :-1:-1
	ECDSA_verify: (signed int, const unsigned char*, signed int, const unsigned char*, signed int, struct ec_key_st*) => signed int 		if True		at :-1:-1
	ECPARAMETERS_free: (struct ec_parameters_st*) => void 		if True		at :-1:-1
	ECPARAMETERS_new: (void) => struct ec_parameters_st* 		if True		at :-1:-1
	ECPKPARAMETERS_free: (struct ecpk_parameters_st*) => void 		if True		at :-1:-1
	ECPKPARAMETERS_new: (void) => struct ecpk_parameters_st* 		if True		at :-1:-1
	ECPKParameters_print: (struct bio_st*, const struct ec_group_st*, signed int) => signed int 		if True		at :-1:-1
	ECPKParameters_print_fp: (struct _IO_FILE*, const struct ec_group_st*, signed int) => signed int 		if True		at :-1:-1
	ECParameters_print: (struct bio_st*, const struct ec_key_st*) => signed int 		if True		at :-1:-1
	ECParameters_print_fp: (struct _IO_FILE*, const struct ec_key_st*) => signed int 		if True		at :-1:-1
	EC_EX_DATA_clear_free_all_data: (struct ec_extra_data_st**) => void 		if True		at :-1:-1
	EC_EX_DATA_clear_free_data: (struct ec_extra_data_st**, (void*) => void**, (void*) => void*, (void*) => void*) => void 		if True		at :-1:-1
	EC_EX_DATA_free_all_data: (struct ec_extra_data_st**) => void 		if True		at :-1:-1
	EC_EX_DATA_free_data: (struct ec_extra_data_st**, (void*) => void**, (void*) => void*, (void*) => void*) => void 		if True		at :-1:-1
	EC_EX_DATA_get_data: (const struct ec_extra_data_st*, (void*) => void**, (void*) => void*, (void*) => void*) => void* 		if True		at :-1:-1
	EC_EX_DATA_set_data: (struct ec_extra_data_st**, void*, (void*) => void**, (void*) => void*, (void*) => void*) => signed int 		if True		at :-1:-1
	EC_GF2m_simple_method: (void) => const struct ec_method_st* 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	EC_GFp_mont_method: (void) => const struct ec_method_st* 		if True		at :-1:-1
	EC_GFp_nist_method: (void) => const struct ec_method_st* 		if True		at :-1:-1
	EC_GFp_simple_method: (void) => const struct ec_method_st* 		if True		at :-1:-1
	EC_GROUP_check: (const struct ec_group_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_GROUP_check_discriminant: (const struct ec_group_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_GROUP_clear_free: (struct ec_group_st*) => void 		if True		at :-1:-1
	EC_GROUP_cmp: (const struct ec_group_st*, const struct ec_group_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_GROUP_copy: (struct ec_group_st*, const struct ec_group_st*) => signed int 		if True		at :-1:-1
	EC_GROUP_dup: (const struct ec_group_st*) => struct ec_group_st* 		if True		at :-1:-1
	EC_GROUP_free: (struct ec_group_st*) => void 		if True		at :-1:-1
	EC_GROUP_get0_generator: (const struct ec_group_st*) => const struct ec_point_st* 		if True		at :-1:-1
	EC_GROUP_get0_seed: (const struct ec_group_st*) => unsigned char* 		if True		at :-1:-1
	EC_GROUP_get_asn1_flag: (const struct ec_group_st*) => signed int 		if True		at :-1:-1
	EC_GROUP_get_basis_type: (const struct ec_group_st*) => signed int 		if True		at :-1:-1
	EC_GROUP_get_cofactor: (const struct ec_group_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_GROUP_get_curve_GF2m: (const struct ec_group_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	EC_GROUP_get_curve_GFp: (const struct ec_group_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_GROUP_get_curve_name: (const struct ec_group_st*) => signed int 		if True		at :-1:-1
	EC_GROUP_get_degree: (const struct ec_group_st*) => signed int 		if True		at :-1:-1
	EC_GROUP_get_order: (const struct ec_group_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_GROUP_get_pentanomial_basis: (const struct ec_group_st*, unsigned int*, unsigned int*, unsigned int*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	EC_GROUP_get_point_conversion_form: (const struct ec_group_st*) => unsigned int 		if True		at :-1:-1
	EC_GROUP_get_seed_len: (const struct ec_group_st*) => unsigned long 		if True		at :-1:-1
	EC_GROUP_get_trinomial_basis: (const struct ec_group_st*, unsigned int*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	EC_GROUP_have_precompute_mult: (const struct ec_group_st*) => signed int 		if True		at :-1:-1
	EC_GROUP_method_of: (const struct ec_group_st*) => const struct ec_method_st* 		if True		at :-1:-1
	EC_GROUP_new: (const struct ec_method_st*) => struct ec_group_st* 		if True		at :-1:-1
	EC_GROUP_new_by_curve_name: (signed int) => struct ec_group_st* 		if True		at :-1:-1
	EC_GROUP_new_curve_GF2m: (const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => struct ec_group_st* 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	EC_GROUP_new_curve_GFp: (const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => struct ec_group_st* 		if True		at :-1:-1
	EC_GROUP_precompute_mult: (struct ec_group_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_GROUP_set_asn1_flag: (struct ec_group_st*, signed int) => void 		if True		at :-1:-1
	EC_GROUP_set_curve_GF2m: (struct ec_group_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	EC_GROUP_set_curve_GFp: (struct ec_group_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_GROUP_set_curve_name: (struct ec_group_st*, signed int) => void 		if True		at :-1:-1
	EC_GROUP_set_generator: (struct ec_group_st*, const struct ec_point_st*, const struct bignum_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	EC_GROUP_set_point_conversion_form: (struct ec_group_st*, unsigned int) => void 		if True		at :-1:-1
	EC_GROUP_set_seed: (struct ec_group_st*, const unsigned char*, unsigned long) => unsigned long 		if True		at :-1:-1
	EC_KEY_check_key: (const struct ec_key_st*) => signed int 		if True		at :-1:-1
	EC_KEY_clear_flags: (struct ec_key_st*, signed int) => void 		if True		at :-1:-1
	EC_KEY_copy: (struct ec_key_st*, const struct ec_key_st*) => struct ec_key_st* 		if True		at :-1:-1
	EC_KEY_dup: (const struct ec_key_st*) => struct ec_key_st* 		if True		at :-1:-1
	EC_KEY_free: (struct ec_key_st*) => void 		if True		at :-1:-1
	EC_KEY_generate_key: (struct ec_key_st*) => signed int 		if True		at :-1:-1
	EC_KEY_get0_group: (const struct ec_key_st*) => const struct ec_group_st* 		if True		at :-1:-1
	EC_KEY_get0_private_key: (const struct ec_key_st*) => const struct bignum_st* 		if True		at :-1:-1
	EC_KEY_get0_public_key: (const struct ec_key_st*) => const struct ec_point_st* 		if True		at :-1:-1
	EC_KEY_get_conv_form: (const struct ec_key_st*) => unsigned int 		if True		at :-1:-1
	EC_KEY_get_enc_flags: (const struct ec_key_st*) => unsigned int 		if True		at :-1:-1
	EC_KEY_get_flags: (const struct ec_key_st*) => signed int 		if True		at :-1:-1
	EC_KEY_get_key_method_data: (struct ec_key_st*, (void*) => void**, (void*) => void*, (void*) => void*) => void* 		if True		at :-1:-1
	EC_KEY_insert_key_method_data: (struct ec_key_st*, void*, (void*) => void**, (void*) => void*, (void*) => void*) => void 		if True		at :-1:-1
	EC_KEY_new: (void) => struct ec_key_st* 		if True		at :-1:-1
	EC_KEY_new_by_curve_name: (signed int) => struct ec_key_st* 		if True		at :-1:-1
	EC_KEY_precompute_mult: (struct ec_key_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_KEY_print: (struct bio_st*, const struct ec_key_st*, signed int) => signed int 		if True		at :-1:-1
	EC_KEY_print_fp: (struct _IO_FILE*, const struct ec_key_st*, signed int) => signed int 		if True		at :-1:-1
	EC_KEY_set_asn1_flag: (struct ec_key_st*, signed int) => void 		if True		at :-1:-1
	EC_KEY_set_conv_form: (struct ec_key_st*, unsigned int) => void 		if True		at :-1:-1
	EC_KEY_set_enc_flags: (struct ec_key_st*, unsigned int) => void 		if True		at :-1:-1
	EC_KEY_set_flags: (struct ec_key_st*, signed int) => void 		if True		at :-1:-1
	EC_KEY_set_group: (struct ec_key_st*, const struct ec_group_st*) => signed int 		if True		at :-1:-1
	EC_KEY_set_private_key: (struct ec_key_st*, const struct bignum_st*) => signed int 		if True		at :-1:-1
	EC_KEY_set_public_key: (struct ec_key_st*, const struct ec_point_st*) => signed int 		if True		at :-1:-1
	EC_KEY_set_public_key_affine_coordinates: (struct ec_key_st*, struct bignum_st*, struct bignum_st*) => signed int 		if True		at :-1:-1
	EC_KEY_up_ref: (struct ec_key_st*) => signed int 		if True		at :-1:-1
	EC_METHOD_get_field_type: (const struct ec_method_st*) => signed int 		if True		at :-1:-1
	EC_POINT_add: (const struct ec_group_st*, struct ec_point_st*, const struct ec_point_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_bn2point: (const struct ec_group_st*, const struct bignum_st*, struct ec_point_st*, struct bignum_ctx*) => struct ec_point_st* 		if True		at :-1:-1
	EC_POINT_clear_free: (struct ec_point_st*) => void 		if True		at :-1:-1
	EC_POINT_cmp: (const struct ec_group_st*, const struct ec_point_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_copy: (struct ec_point_st*, const struct ec_point_st*) => signed int 		if True		at :-1:-1
	EC_POINT_dbl: (const struct ec_group_st*, struct ec_point_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_dup: (const struct ec_point_st*, const struct ec_group_st*) => struct ec_point_st* 		if True		at :-1:-1
	EC_POINT_free: (struct ec_point_st*) => void 		if True		at :-1:-1
	EC_POINT_get_Jprojective_coordinates_GFp: (const struct ec_group_st*, const struct ec_point_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_get_affine_coordinates_GF2m: (const struct ec_group_st*, const struct ec_point_st*, struct bignum_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	EC_POINT_get_affine_coordinates_GFp: (const struct ec_group_st*, const struct ec_point_st*, struct bignum_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_hex2point: (const struct ec_group_st*, const char*, struct ec_point_st*, struct bignum_ctx*) => struct ec_point_st* 		if True		at :-1:-1
	EC_POINT_invert: (const struct ec_group_st*, struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_is_at_infinity: (const struct ec_group_st*, const struct ec_point_st*) => signed int 		if True		at :-1:-1
	EC_POINT_is_on_curve: (const struct ec_group_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_make_affine: (const struct ec_group_st*, struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_method_of: (const struct ec_point_st*) => const struct ec_method_st* 		if True		at :-1:-1
	EC_POINT_mul: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, const struct ec_point_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_new: (const struct ec_group_st*) => struct ec_point_st* 		if True		at :-1:-1
	EC_POINT_oct2point: (const struct ec_group_st*, struct ec_point_st*, const unsigned char*, unsigned long, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_point2bn: (const struct ec_group_st*, const struct ec_point_st*, unsigned int, struct bignum_st*, struct bignum_ctx*) => struct bignum_st* 		if True		at :-1:-1
	EC_POINT_point2hex: (const struct ec_group_st*, const struct ec_point_st*, unsigned int, struct bignum_ctx*) => char* 		if True		at :-1:-1
	EC_POINT_point2oct: (const struct ec_group_st*, const struct ec_point_st*, unsigned int, unsigned char*, unsigned long, struct bignum_ctx*) => unsigned long 		if True		at :-1:-1
	EC_POINT_set_Jprojective_coordinates_GFp: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_set_affine_coordinates_GF2m: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	EC_POINT_set_affine_coordinates_GFp: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_set_compressed_coordinates_GF2m: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, signed int, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	EC_POINT_set_compressed_coordinates_GFp: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, signed int, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINT_set_to_infinity: (const struct ec_group_st*, struct ec_point_st*) => signed int 		if True		at :-1:-1
	EC_POINTs_make_affine: (const struct ec_group_st*, unsigned long, struct ec_point_st*[], struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_POINTs_mul: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, unsigned long, const struct ec_point_st*[], const struct bignum_st*[], struct bignum_ctx*) => signed int 		if True		at :-1:-1
	EC_PRIVATEKEY_free: (struct ec_privatekey_st*) => void 		if True		at :-1:-1
	EC_PRIVATEKEY_new: (void) => struct ec_privatekey_st* 		if True		at :-1:-1
	EC_get_builtin_curves: (struct {Map()}*, unsigned long) => unsigned long 		if True		at :-1:-1
	EDIPARTYNAME_free: (struct EDIPartyName_st*) => void 		if True		at :-1:-1
	EDIPARTYNAME_new: (void) => struct EDIPartyName_st* 		if True		at :-1:-1
	ERR_GOST_error: (signed int, signed int, char*, signed int) => void 		if True		at :-1:-1
	ERR_add_error_data: (signed int, ...) => void 		if True		at :-1:-1
	ERR_add_error_vdata: (signed int, CBuiltinVaList()) => void 		if True		at :-1:-1
	ERR_clear_error: (void) => void 		if True		at :-1:-1
	ERR_error_string: (unsigned long, char*) => char* 		if True		at :-1:-1
	ERR_error_string_n: (unsigned long, char*, unsigned long) => void 		if True		at :-1:-1
	ERR_free_strings: (void) => void 		if True		at :-1:-1
	ERR_func_error_string: (unsigned long) => const char* 		if True		at :-1:-1
	ERR_get_err_state_table: (void) => struct lhash_st_ERR_STATE* 		if True		at :-1:-1
	ERR_get_error: (void) => unsigned long 		if True		at :-1:-1
	ERR_get_error_line: (const char**, signed int*) => unsigned long 		if True		at :-1:-1
	ERR_get_error_line_data: (const char**, signed int*, const char**, signed int*) => unsigned long 		if True		at :-1:-1
	ERR_get_implementation: (void) => const struct st_ERR_FNS* 		if True		at :-1:-1
	ERR_get_next_error_library: (void) => signed int 		if True		at :-1:-1
	ERR_get_state: (void) => struct err_state_st* 		if True		at :-1:-1
	ERR_get_string_table: (void) => struct lhash_st_ERR_STRING_DATA* 		if True		at :-1:-1
	ERR_lib_error_string: (unsigned long) => const char* 		if True		at :-1:-1
	ERR_load_ASN1_strings: (void) => void 		if True		at :-1:-1
	ERR_load_BIO_strings: (void) => void 		if True		at :-1:-1
	ERR_load_BN_strings: (void) => void 		if True		at :-1:-1
	ERR_load_BUF_strings: (void) => void 		if True		at :-1:-1
	ERR_load_CMS_strings: (void) => void 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	ERR_load_COMP_strings: (void) => void 		if True		at :-1:-1
	ERR_load_CONF_strings: (void) => void 		if True		at :-1:-1
	ERR_load_CRYPTO_strings: (void) => void 		if True		at :-1:-1
	ERR_load_DH_strings: (void) => void 		if True		at :-1:-1
	ERR_load_DSA_strings: (void) => void 		if True		at :-1:-1
	ERR_load_DSO_strings: (void) => void 		if True		at :-1:-1
	ERR_load_ECDH_strings: (void) => void 		if True		at :-1:-1
	ERR_load_ECDSA_strings: (void) => void 		if True		at :-1:-1
	ERR_load_EC_strings: (void) => void 		if True		at :-1:-1
	ERR_load_ERR_strings: (void) => void 		if True		at :-1:-1
	ERR_load_EVP_strings: (void) => void 		if True		at :-1:-1
	ERR_load_GOST_strings: (void) => void 		if True		at :-1:-1
	ERR_load_OBJ_strings: (void) => void 		if True		at :-1:-1
	ERR_load_OCSP_strings: (void) => void 		if True		at :-1:-1
	ERR_load_PEM_strings: (void) => void 		if True		at :-1:-1
	ERR_load_PKCS12_strings: (void) => void 		if True		at :-1:-1
	ERR_load_PKCS7_strings: (void) => void 		if True		at :-1:-1
	ERR_load_RAND_strings: (void) => void 		if True		at :-1:-1
	ERR_load_RSA_strings: (void) => void 		if True		at :-1:-1
	ERR_load_TS_strings: (void) => void 		if True		at :-1:-1
	ERR_load_UI_strings: (void) => void 		if True		at :-1:-1
	ERR_load_X509V3_strings: (void) => void 		if True		at :-1:-1
	ERR_load_X509_strings: (void) => void 		if True		at :-1:-1
	ERR_load_crypto_strings: (void) => void 		if True		at :-1:-1
	ERR_load_strings: (signed int, struct ERR_string_data_st[]) => void 		if True		at :-1:-1
	ERR_peek_error: (void) => unsigned long 		if True		at :-1:-1
	ERR_peek_error_line: (const char**, signed int*) => unsigned long 		if True		at :-1:-1
	ERR_peek_error_line_data: (const char**, signed int*, const char**, signed int*) => unsigned long 		if True		at :-1:-1
	ERR_peek_last_error: (void) => unsigned long 		if True		at :-1:-1
	ERR_peek_last_error_line: (const char**, signed int*) => unsigned long 		if True		at :-1:-1
	ERR_peek_last_error_line_data: (const char**, signed int*, const char**, signed int*) => unsigned long 		if True		at :-1:-1
	ERR_pop_to_mark: (void) => signed int 		if True		at :-1:-1
	ERR_print_errors: (struct bio_st*) => void 		if True		at :-1:-1
	ERR_print_errors_cb: ((const char*, unsigned long, void*) => signed int*, void*) => void 		if True		at :-1:-1
	ERR_print_errors_fp: (struct _IO_FILE*) => void 		if True		at :-1:-1
	ERR_put_error: (signed int, signed int, signed int, const char*, signed int) => void 		if True		at :-1:-1
	ERR_reason_error_string: (unsigned long) => const char* 		if True		at :-1:-1
	ERR_release_err_state_table: (struct lhash_st_ERR_STATE**) => void 		if True		at :-1:-1
	ERR_remove_state: (unsigned long) => void 		if True		at :-1:-1
	ERR_remove_thread_state: (const struct crypto_threadid_st*) => void 		if True		at :-1:-1
	ERR_set_error_data: (char*, signed int) => void 		if True		at :-1:-1
	ERR_set_implementation: (const struct st_ERR_FNS*) => signed int 		if True		at :-1:-1
	ERR_set_mark: (void) => signed int 		if True		at :-1:-1
	ERR_unload_GOST_strings: (void) => void 		if True		at :-1:-1
	ERR_unload_strings: (signed int, struct ERR_string_data_st*) => void 		if True		at :-1:-1
	ESS_CERT_ID_dup: (struct ESS_cert_id*) => struct ESS_cert_id* 		if True		at :-1:-1
	ESS_CERT_ID_free: (struct ESS_cert_id*) => void 		if True		at :-1:-1
	ESS_CERT_ID_new: (void) => struct ESS_cert_id* 		if True		at :-1:-1
	ESS_ISSUER_SERIAL_dup: (struct ESS_issuer_serial*) => struct ESS_issuer_serial* 		if True		at :-1:-1
	ESS_ISSUER_SERIAL_free: (struct ESS_issuer_serial*) => void 		if True		at :-1:-1
	ESS_ISSUER_SERIAL_new: (void) => struct ESS_issuer_serial* 		if True		at :-1:-1
	ESS_SIGNING_CERT_dup: (struct ESS_signing_cert*) => struct ESS_signing_cert* 		if True		at :-1:-1
	ESS_SIGNING_CERT_free: (struct ESS_signing_cert*) => void 		if True		at :-1:-1
	ESS_SIGNING_CERT_new: (void) => struct ESS_signing_cert* 		if True		at :-1:-1
	EVP_BytesToKey: (const struct evp_cipher_st*, const struct env_md_st*, const unsigned char*, const unsigned char*, signed int, signed int, unsigned char*, unsigned char*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_block_size: (const struct evp_cipher_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_cipher: (const struct evp_cipher_ctx_st*) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_CIPHER_CTX_cleanup: (struct evp_cipher_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_clear_flags: (struct evp_cipher_ctx_st*, signed int) => void 		if True		at :-1:-1
	EVP_CIPHER_CTX_copy: (struct evp_cipher_ctx_st*, const struct evp_cipher_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_ctrl: (struct evp_cipher_ctx_st*, signed int, signed int, void*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_flags: (const struct evp_cipher_ctx_st*) => unsigned long 		if True		at :-1:-1
	EVP_CIPHER_CTX_free: (struct evp_cipher_ctx_st*) => void 		if True		at :-1:-1
	EVP_CIPHER_CTX_get_app_data: (const struct evp_cipher_ctx_st*) => void* 		if True		at :-1:-1
	EVP_CIPHER_CTX_init: (struct evp_cipher_ctx_st*) => void 		if True		at :-1:-1
	EVP_CIPHER_CTX_iv_length: (const struct evp_cipher_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_key_length: (const struct evp_cipher_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_new: (void) => struct evp_cipher_ctx_st* 		if True		at :-1:-1
	EVP_CIPHER_CTX_nid: (const struct evp_cipher_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_rand_key: (struct evp_cipher_ctx_st*, unsigned char*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_set_app_data: (struct evp_cipher_ctx_st*, void*) => void 		if True		at :-1:-1
	EVP_CIPHER_CTX_set_flags: (struct evp_cipher_ctx_st*, signed int) => void 		if True		at :-1:-1
	EVP_CIPHER_CTX_set_key_length: (struct evp_cipher_ctx_st*, signed int) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_set_padding: (struct evp_cipher_ctx_st*, signed int) => signed int 		if True		at :-1:-1
	EVP_CIPHER_CTX_test_flags: (const struct evp_cipher_ctx_st*, signed int) => signed int 		if True		at :-1:-1
	EVP_CIPHER_asn1_to_param: (struct evp_cipher_ctx_st*, struct asn1_type_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_block_size: (const struct evp_cipher_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_do_all: ((const struct evp_cipher_st*, const char*, const char*, void*) => void*, void*) => void 		if True		at :-1:-1
	EVP_CIPHER_do_all_sorted: ((const struct evp_cipher_st*, const char*, const char*, void*) => void*, void*) => void 		if True		at :-1:-1
	EVP_CIPHER_flags: (const struct evp_cipher_st*) => unsigned long 		if True		at :-1:-1
	EVP_CIPHER_get_asn1_iv: (struct evp_cipher_ctx_st*, struct asn1_type_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_iv_length: (const struct evp_cipher_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_key_length: (const struct evp_cipher_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_nid: (const struct evp_cipher_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_param_to_asn1: (struct evp_cipher_ctx_st*, struct asn1_type_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_set_asn1_iv: (struct evp_cipher_ctx_st*, struct asn1_type_st*) => signed int 		if True		at :-1:-1
	EVP_CIPHER_type: (const struct evp_cipher_st*) => signed int 		if True		at :-1:-1
	EVP_Cipher: (struct evp_cipher_ctx_st*, unsigned char*, const unsigned char*, unsigned int) => signed int 		if True		at :-1:-1
	EVP_CipherFinal: (struct evp_cipher_ctx_st*, unsigned char*, signed int*) => signed int 		if True		at :-1:-1
	EVP_CipherFinal_ex: (struct evp_cipher_ctx_st*, unsigned char*, signed int*) => signed int 		if True		at :-1:-1
	EVP_CipherInit: (struct evp_cipher_ctx_st*, const struct evp_cipher_st*, const unsigned char*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_CipherInit_ex: (struct evp_cipher_ctx_st*, const struct evp_cipher_st*, struct engine_st*, const unsigned char*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_CipherUpdate: (struct evp_cipher_ctx_st*, unsigned char*, signed int*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_DecodeBlock: (unsigned char*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_DecodeFinal: (struct evp_Encode_Ctx_st*, unsigned char*, signed int*) => signed int 		if True		at :-1:-1
	EVP_DecodeInit: (struct evp_Encode_Ctx_st*) => void 		if True		at :-1:-1
	EVP_DecodeUpdate: (struct evp_Encode_Ctx_st*, unsigned char*, signed int*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_DecryptFinal: (struct evp_cipher_ctx_st*, unsigned char*, signed int*) => signed int 		if True		at :-1:-1
	EVP_DecryptFinal_ex: (struct evp_cipher_ctx_st*, unsigned char*, signed int*) => signed int 		if True		at :-1:-1
	EVP_DecryptInit: (struct evp_cipher_ctx_st*, const struct evp_cipher_st*, const unsigned char*, const unsigned char*) => signed int 		if True		at :-1:-1
	EVP_DecryptInit_ex: (struct evp_cipher_ctx_st*, const struct evp_cipher_st*, struct engine_st*, const unsigned char*, const unsigned char*) => signed int 		if True		at :-1:-1
	EVP_DecryptUpdate: (struct evp_cipher_ctx_st*, unsigned char*, signed int*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_Digest: (const void*, unsigned long, unsigned char*, unsigned int*, const struct env_md_st*, struct engine_st*) => signed int 		if True		at :-1:-1
	EVP_DigestFinal: (struct env_md_ctx_st*, unsigned char*, unsigned int*) => signed int 		if True		at :-1:-1
	EVP_DigestFinal_ex: (struct env_md_ctx_st*, unsigned char*, unsigned int*) => signed int 		if True		at :-1:-1
	EVP_DigestInit: (struct env_md_ctx_st*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	EVP_DigestInit_ex: (struct env_md_ctx_st*, const struct env_md_st*, struct engine_st*) => signed int 		if True		at :-1:-1
	EVP_DigestSignFinal: (struct env_md_ctx_st*, unsigned char*, unsigned long*) => signed int 		if True		at :-1:-1
	EVP_DigestSignInit: (struct env_md_ctx_st*, struct evp_pkey_ctx_st**, const struct env_md_st*, struct engine_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_DigestUpdate: (struct env_md_ctx_st*, const void*, unsigned long) => signed int 		if True		at :-1:-1
	EVP_DigestVerifyFinal: (struct env_md_ctx_st*, unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	EVP_DigestVerifyInit: (struct env_md_ctx_st*, struct evp_pkey_ctx_st**, const struct env_md_st*, struct engine_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_EncodeBlock: (unsigned char*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_EncodeFinal: (struct evp_Encode_Ctx_st*, unsigned char*, signed int*) => void 		if True		at :-1:-1
	EVP_EncodeInit: (struct evp_Encode_Ctx_st*) => void 		if True		at :-1:-1
	EVP_EncodeUpdate: (struct evp_Encode_Ctx_st*, unsigned char*, signed int*, const unsigned char*, signed int) => void 		if True		at :-1:-1
	EVP_EncryptFinal: (struct evp_cipher_ctx_st*, unsigned char*, signed int*) => signed int 		if True		at :-1:-1
	EVP_EncryptFinal_ex: (struct evp_cipher_ctx_st*, unsigned char*, signed int*) => signed int 		if True		at :-1:-1
	EVP_EncryptInit: (struct evp_cipher_ctx_st*, const struct evp_cipher_st*, const unsigned char*, const unsigned char*) => signed int 		if True		at :-1:-1
	EVP_EncryptInit_ex: (struct evp_cipher_ctx_st*, const struct evp_cipher_st*, struct engine_st*, const unsigned char*, const unsigned char*) => signed int 		if True		at :-1:-1
	EVP_EncryptUpdate: (struct evp_cipher_ctx_st*, unsigned char*, signed int*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_MD_CTX_cleanup: (struct env_md_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_MD_CTX_clear_flags: (struct env_md_ctx_st*, signed int) => void 		if True		at :-1:-1
	EVP_MD_CTX_copy: (struct env_md_ctx_st*, const struct env_md_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_MD_CTX_copy_ex: (struct env_md_ctx_st*, const struct env_md_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_MD_CTX_create: (void) => struct env_md_ctx_st* 		if True		at :-1:-1
	EVP_MD_CTX_destroy: (struct env_md_ctx_st*) => void 		if True		at :-1:-1
	EVP_MD_CTX_init: (struct env_md_ctx_st*) => void 		if True		at :-1:-1
	EVP_MD_CTX_md: (const struct env_md_ctx_st*) => const struct env_md_st* 		if True		at :-1:-1
	EVP_MD_CTX_set_flags: (struct env_md_ctx_st*, signed int) => void 		if True		at :-1:-1
	EVP_MD_CTX_test_flags: (const struct env_md_ctx_st*, signed int) => signed int 		if True		at :-1:-1
	EVP_MD_block_size: (const struct env_md_st*) => signed int 		if True		at :-1:-1
	EVP_MD_do_all: ((const struct env_md_st*, const char*, const char*, void*) => void*, void*) => void 		if True		at :-1:-1
	EVP_MD_do_all_sorted: ((const struct env_md_st*, const char*, const char*, void*) => void*, void*) => void 		if True		at :-1:-1
	EVP_MD_flags: (const struct env_md_st*) => unsigned long 		if True		at :-1:-1
	EVP_MD_pkey_type: (const struct env_md_st*) => signed int 		if True		at :-1:-1
	EVP_MD_size: (const struct env_md_st*) => signed int 		if True		at :-1:-1
	EVP_MD_type: (const struct env_md_st*) => signed int 		if True		at :-1:-1
	EVP_OpenFinal: (struct evp_cipher_ctx_st*, unsigned char*, signed int*) => signed int 		if True		at :-1:-1
	EVP_OpenInit: (struct evp_cipher_ctx_st*, const struct evp_cipher_st*, const unsigned char*, signed int, const unsigned char*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PBE_CipherInit: (struct asn1_object_st*, const char*, signed int, struct asn1_type_st*, struct evp_cipher_ctx_st*, signed int) => signed int 		if True		at :-1:-1
	EVP_PBE_alg_add: (signed int, const struct evp_cipher_st*, const struct env_md_st*, (struct evp_cipher_ctx_st*, const char*, signed int, struct asn1_type_st*, const struct evp_cipher_st*, const struct env_md_st*, signed int) => signed int*) => signed int 		if True		at :-1:-1
	EVP_PBE_alg_add_type: (signed int, signed int, signed int, signed int, (struct evp_cipher_ctx_st*, const char*, signed int, struct asn1_type_st*, const struct evp_cipher_st*, const struct env_md_st*, signed int) => signed int*) => signed int 		if True		at :-1:-1
	EVP_PBE_cleanup: (void) => void 		if True		at :-1:-1
	EVP_PBE_find: (signed int, signed int, signed int*, signed int*, (struct evp_cipher_ctx_st*, const char*, signed int, struct asn1_type_st*, const struct evp_cipher_st*, const struct env_md_st*, signed int) => signed int**) => signed int 		if True		at :-1:-1
	EVP_PKCS82PKEY: (struct pkcs8_priv_key_info_st*) => struct evp_pkey_st* 		if True		at :-1:-1
	EVP_PKEY2PKCS8: (struct evp_pkey_st*) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	EVP_PKEY2PKCS8_broken: (struct evp_pkey_st*, signed int) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	EVP_PKEY_CTX_ctrl: (struct evp_pkey_ctx_st*, signed int, signed int, signed int, signed int, void*) => signed int 		if True		at :-1:-1
	EVP_PKEY_CTX_ctrl_str: (struct evp_pkey_ctx_st*, const char*, const char*) => signed int 		if True		at :-1:-1
	EVP_PKEY_CTX_dup: (struct evp_pkey_ctx_st*) => struct evp_pkey_ctx_st* 		if True		at :-1:-1
	EVP_PKEY_CTX_free: (struct evp_pkey_ctx_st*) => void 		if True		at :-1:-1
	EVP_PKEY_CTX_get0_peerkey: (struct evp_pkey_ctx_st*) => struct evp_pkey_st* 		if True		at :-1:-1
	EVP_PKEY_CTX_get0_pkey: (struct evp_pkey_ctx_st*) => struct evp_pkey_st* 		if True		at :-1:-1
	EVP_PKEY_CTX_get_app_data: (struct evp_pkey_ctx_st*) => void* 		if True		at :-1:-1
	EVP_PKEY_CTX_get_cb: (struct evp_pkey_ctx_st*) => (struct evp_pkey_ctx_st*) => signed int* 		if True		at :-1:-1
	EVP_PKEY_CTX_get_data: (struct evp_pkey_ctx_st*) => void* 		if True		at :-1:-1
	EVP_PKEY_CTX_get_keygen_info: (struct evp_pkey_ctx_st*, signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_CTX_get_operation: (struct evp_pkey_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_CTX_new: (struct evp_pkey_st*, struct engine_st*) => struct evp_pkey_ctx_st* 		if True		at :-1:-1
	EVP_PKEY_CTX_new_id: (signed int, struct engine_st*) => struct evp_pkey_ctx_st* 		if True		at :-1:-1
	EVP_PKEY_CTX_set0_keygen_info: (struct evp_pkey_ctx_st*, signed int*, signed int) => void 		if True		at :-1:-1
	EVP_PKEY_CTX_set_app_data: (struct evp_pkey_ctx_st*, void*) => void 		if True		at :-1:-1
	EVP_PKEY_CTX_set_cb: (struct evp_pkey_ctx_st*, (struct evp_pkey_ctx_st*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_CTX_set_data: (struct evp_pkey_ctx_st*, void*) => void 		if True		at :-1:-1
	EVP_PKEY_add1_attr: (struct evp_pkey_st*, struct x509_attributes_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_add1_attr_by_NID: (struct evp_pkey_st*, signed int, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_add1_attr_by_OBJ: (struct evp_pkey_st*, const struct asn1_object_st*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_add1_attr_by_txt: (struct evp_pkey_st*, const char*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_asn1_add0: (const struct evp_pkey_asn1_method_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_asn1_add_alias: (signed int, signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_asn1_copy: (struct evp_pkey_asn1_method_st*, const struct evp_pkey_asn1_method_st*) => void 		if True		at :-1:-1
	EVP_PKEY_asn1_find: (struct engine_st**, signed int) => const struct evp_pkey_asn1_method_st* 		if True		at :-1:-1
	EVP_PKEY_asn1_find_str: (struct engine_st**, const char*, signed int) => const struct evp_pkey_asn1_method_st* 		if True		at :-1:-1
	EVP_PKEY_asn1_free: (struct evp_pkey_asn1_method_st*) => void 		if True		at :-1:-1
	EVP_PKEY_asn1_get0: (signed int) => const struct evp_pkey_asn1_method_st* 		if True		at :-1:-1
	EVP_PKEY_asn1_get0_info: (signed int*, signed int*, signed int*, const char**, const char**, const struct evp_pkey_asn1_method_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_asn1_get_count: (void) => signed int 		if True		at :-1:-1
	EVP_PKEY_asn1_new: (signed int, signed int, const char*, const char*) => struct evp_pkey_asn1_method_st* 		if True		at :-1:-1
	EVP_PKEY_asn1_set_ctrl: (struct evp_pkey_asn1_method_st*, (struct evp_pkey_st*, signed int, signed long, void*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_asn1_set_free: (struct evp_pkey_asn1_method_st*, (struct evp_pkey_st*) => void*) => void 		if True		at :-1:-1
	EVP_PKEY_asn1_set_param: (struct evp_pkey_asn1_method_st*, (struct evp_pkey_st*, const unsigned char**, signed int) => signed int*, (const struct evp_pkey_st*, unsigned char**) => signed int*, (const struct evp_pkey_st*) => signed int*, (struct evp_pkey_st*, const struct evp_pkey_st*) => signed int*, (const struct evp_pkey_st*, const struct evp_pkey_st*) => signed int*, (struct bio_st*, const struct evp_pkey_st*, signed int, struct asn1_pctx_st*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_asn1_set_private: (struct evp_pkey_asn1_method_st*, (struct evp_pkey_st*, struct pkcs8_priv_key_info_st*) => signed int*, (struct pkcs8_priv_key_info_st*, const struct evp_pkey_st*) => signed int*, (struct bio_st*, const struct evp_pkey_st*, signed int, struct asn1_pctx_st*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_asn1_set_public: (struct evp_pkey_asn1_method_st*, (struct evp_pkey_st*, struct X509_pubkey_st*) => signed int*, (struct X509_pubkey_st*, const struct evp_pkey_st*) => signed int*, (const struct evp_pkey_st*, const struct evp_pkey_st*) => signed int*, (struct bio_st*, const struct evp_pkey_st*, signed int, struct asn1_pctx_st*) => signed int*, (const struct evp_pkey_st*) => signed int*, (const struct evp_pkey_st*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_assign: (struct evp_pkey_st*, signed int, void*) => signed int 		if True		at :-1:-1
	EVP_PKEY_base_id: (const struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_bits: (struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_cmp: (const struct evp_pkey_st*, const struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_cmp_parameters: (const struct evp_pkey_st*, const struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_copy_parameters: (struct evp_pkey_st*, const struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_decrypt: (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*, const unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	EVP_PKEY_decrypt_init: (struct evp_pkey_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_decrypt_old: (unsigned char*, const unsigned char*, signed int, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_delete_attr: (struct evp_pkey_st*, signed int) => struct x509_attributes_st* 		if True		at :-1:-1
	EVP_PKEY_derive: (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*) => signed int 		if True		at :-1:-1
	EVP_PKEY_derive_init: (struct evp_pkey_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_derive_set_peer: (struct evp_pkey_ctx_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_encrypt: (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*, const unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	EVP_PKEY_encrypt_init: (struct evp_pkey_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_encrypt_old: (unsigned char*, const unsigned char*, signed int, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_free: (struct evp_pkey_st*) => void 		if True		at :-1:-1
	EVP_PKEY_get0: (struct evp_pkey_st*) => void* 		if True		at :-1:-1
	EVP_PKEY_get0_asn1: (struct evp_pkey_st*) => const struct evp_pkey_asn1_method_st* 		if True		at :-1:-1
	EVP_PKEY_get1_DH: (struct evp_pkey_st*) => struct dh_st* 		if True		at :-1:-1
	EVP_PKEY_get1_DSA: (struct evp_pkey_st*) => struct dsa_st* 		if True		at :-1:-1
	EVP_PKEY_get1_EC_KEY: (struct evp_pkey_st*) => struct ec_key_st* 		if True		at :-1:-1
	EVP_PKEY_get1_RSA: (struct evp_pkey_st*) => struct rsa_st* 		if True		at :-1:-1
	EVP_PKEY_get_attr: (const struct evp_pkey_st*, signed int) => struct x509_attributes_st* 		if True		at :-1:-1
	EVP_PKEY_get_attr_by_NID: (const struct evp_pkey_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_get_attr_by_OBJ: (const struct evp_pkey_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_get_attr_count: (const struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_get_default_digest_nid: (struct evp_pkey_st*, signed int*) => signed int 		if True		at :-1:-1
	EVP_PKEY_id: (const struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_keygen: (struct evp_pkey_ctx_st*, struct evp_pkey_st**) => signed int 		if True		at :-1:-1
	EVP_PKEY_keygen_init: (struct evp_pkey_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_meth_add0: (const struct evp_pkey_method_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_meth_copy: (struct evp_pkey_method_st*, const struct evp_pkey_method_st*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_find: (signed int) => const struct evp_pkey_method_st* 		if True		at :-1:-1
	EVP_PKEY_meth_free: (struct evp_pkey_method_st*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_get0_info: (signed int*, signed int*, const struct evp_pkey_method_st*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_new: (signed int, signed int) => struct evp_pkey_method_st* 		if True		at :-1:-1
	EVP_PKEY_meth_set_cleanup: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*) => void*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_copy: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*, struct evp_pkey_ctx_st*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_ctrl: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*, signed int, signed int, void*) => signed int*, (struct evp_pkey_ctx_st*, const char*, const char*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_decrypt: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*) => signed int*, (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*, const unsigned char*, unsigned long) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_derive: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*) => signed int*, (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_encrypt: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*) => signed int*, (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*, const unsigned char*, unsigned long) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_init: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_keygen: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*) => signed int*, (struct evp_pkey_ctx_st*, struct evp_pkey_st*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_paramgen: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*) => signed int*, (struct evp_pkey_ctx_st*, struct evp_pkey_st*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_sign: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*) => signed int*, (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*, const unsigned char*, unsigned long) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_signctx: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*, struct env_md_ctx_st*) => signed int*, (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*, struct env_md_ctx_st*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_verify: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*) => signed int*, (struct evp_pkey_ctx_st*, const unsigned char*, unsigned long, const unsigned char*, unsigned long) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_verify_recover: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*) => signed int*, (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*, const unsigned char*, unsigned long) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_meth_set_verifyctx: (struct evp_pkey_method_st*, (struct evp_pkey_ctx_st*, struct env_md_ctx_st*) => signed int*, (struct evp_pkey_ctx_st*, const unsigned char*, signed int, struct env_md_ctx_st*) => signed int*) => void 		if True		at :-1:-1
	EVP_PKEY_missing_parameters: (const struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_new: (void) => struct evp_pkey_st* 		if True		at :-1:-1
	EVP_PKEY_new_mac_key: (signed int, struct engine_st*, const unsigned char*, signed int) => struct evp_pkey_st* 		if True		at :-1:-1
	EVP_PKEY_paramgen: (struct evp_pkey_ctx_st*, struct evp_pkey_st**) => signed int 		if True		at :-1:-1
	EVP_PKEY_paramgen_init: (struct evp_pkey_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_print_params: (struct bio_st*, const struct evp_pkey_st*, signed int, struct asn1_pctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_print_private: (struct bio_st*, const struct evp_pkey_st*, signed int, struct asn1_pctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_print_public: (struct bio_st*, const struct evp_pkey_st*, signed int, struct asn1_pctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_save_parameters: (struct evp_pkey_st*, signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_set1_DH: (struct evp_pkey_st*, struct dh_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_set1_DSA: (struct evp_pkey_st*, struct dsa_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_set1_EC_KEY: (struct evp_pkey_st*, struct ec_key_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_set1_RSA: (struct evp_pkey_st*, struct rsa_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_set_type: (struct evp_pkey_st*, signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_set_type_str: (struct evp_pkey_st*, const char*, signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_sign: (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*, const unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	EVP_PKEY_sign_init: (struct evp_pkey_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_size: (struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_type: (signed int) => signed int 		if True		at :-1:-1
	EVP_PKEY_verify: (struct evp_pkey_ctx_st*, const unsigned char*, unsigned long, const unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	EVP_PKEY_verify_init: (struct evp_pkey_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_PKEY_verify_recover: (struct evp_pkey_ctx_st*, unsigned char*, unsigned long*, const unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	EVP_PKEY_verify_recover_init: (struct evp_pkey_ctx_st*) => signed int 		if True		at :-1:-1
	EVP_SealFinal: (struct evp_cipher_ctx_st*, unsigned char*, signed int*) => signed int 		if True		at :-1:-1
	EVP_SealInit: (struct evp_cipher_ctx_st*, const struct evp_cipher_st*, unsigned char**, signed int*, unsigned char*, struct evp_pkey_st**, signed int) => signed int 		if True		at :-1:-1
	EVP_SignFinal: (struct env_md_ctx_st*, unsigned char*, unsigned int*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_VerifyFinal: (struct env_md_ctx_st*, const unsigned char*, unsigned int, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	EVP_add_cipher: (const struct evp_cipher_st*) => signed int 		if True		at :-1:-1
	EVP_add_digest: (const struct env_md_st*) => signed int 		if True		at :-1:-1
	EVP_aes_128_cbc: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_cbc_hmac_sha1: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_ccm: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_cfb128: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_cfb1: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_cfb8: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_cfb: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_ctr: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_ecb: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_gcm: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_ofb: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_128_xts: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_192_cbc: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_192_ccm: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_192_cfb128: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_192_cfb1: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_192_cfb8: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_192_cfb: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_192_ctr: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_192_ecb: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_192_gcm: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_192_ofb: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_cbc: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_cbc_hmac_sha1: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_ccm: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_cfb128: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_cfb1: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_cfb8: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_cfb: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_ctr: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_ecb: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_gcm: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_ofb: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_aes_256_xts: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_bf_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_BF)		at :-1:-1
	EVP_bf_cfb64: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_BF)		at :-1:-1
	EVP_bf_cfb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_BF)		at :-1:-1
	EVP_bf_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_BF)		at :-1:-1
	EVP_bf_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_BF)		at :-1:-1
	EVP_camellia_128_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_128_cfb128: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_128_cfb1: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_128_cfb8: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_128_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_128_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_192_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_192_cfb128: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_192_cfb1: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_192_cfb8: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_192_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_192_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_256_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_256_cfb128: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_256_cfb1: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_256_cfb8: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_256_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_camellia_256_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	EVP_cast5_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	EVP_cast5_cfb64: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	EVP_cast5_cfb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	EVP_cast5_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	EVP_cast5_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_CAST)		at :-1:-1
	EVP_cleanup: (void) => void 		if True		at :-1:-1
	EVP_des_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_cfb1: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_cfb64: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_cfb8: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_cfb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede3: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede3_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede3_cfb1: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede3_cfb64: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede3_cfb8: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede3_cfb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede3_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede3_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede_cfb64: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede_cfb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ede_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_des_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_desx_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_dss1: (void) => const struct env_md_st* 		if True		at :-1:-1
	EVP_dss: (void) => const struct env_md_st* 		if True		at :-1:-1
	EVP_ecdsa: (void) => const struct env_md_st* 		if True		at :-1:-1
	EVP_enc_null: (void) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_get_cipherbyname: (const char*) => const struct evp_cipher_st* 		if True		at :-1:-1
	EVP_get_digestbyname: (const char*) => const struct env_md_st* 		if True		at :-1:-1
	EVP_get_pw_prompt: (void) => char* 		if True		at :-1:-1
	EVP_idea_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	EVP_idea_cfb64: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	EVP_idea_cfb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	EVP_idea_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	EVP_idea_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	EVP_md4: (void) => const struct env_md_st* 		if !def(OPENSSL_NO_MD4)		at :-1:-1
	EVP_md5: (void) => const struct env_md_st* 		if True		at :-1:-1
	EVP_md_null: (void) => const struct env_md_st* 		if True		at :-1:-1
	EVP_mdc2: (void) => const struct env_md_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	EVP_rc2_40_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	EVP_rc2_64_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	EVP_rc2_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	EVP_rc2_cfb64: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	EVP_rc2_cfb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	EVP_rc2_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	EVP_rc2_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	EVP_rc4: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	EVP_rc4_40: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	EVP_rc4_hmac_md5: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	EVP_rc5_32_12_16_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC5)		at :-1:-1
	EVP_rc5_32_12_16_cfb64: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC5)		at :-1:-1
	EVP_rc5_32_12_16_cfb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC5)		at :-1:-1
	EVP_rc5_32_12_16_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC5)		at :-1:-1
	EVP_rc5_32_12_16_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_RC5)		at :-1:-1
	EVP_read_pw_string: (char*, signed int, const char*, signed int) => signed int 		if True		at :-1:-1
	EVP_read_pw_string_min: (char*, signed int, signed int, const char*, signed int) => signed int 		if True		at :-1:-1
	EVP_ripemd160: (void) => const struct env_md_st* 		if !def(OPENSSL_NO_RIPEMD)		at :-1:-1
	EVP_seed_cbc: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	EVP_seed_cfb128: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	EVP_seed_ecb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	EVP_seed_ofb: (void) => const struct evp_cipher_st* 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	EVP_set_pw_prompt: (const char*) => void 		if True		at :-1:-1
	EVP_sha1: (void) => const struct env_md_st* 		if True		at :-1:-1
	EVP_sha224: (void) => const struct env_md_st* 		if True		at :-1:-1
	EVP_sha256: (void) => const struct env_md_st* 		if True		at :-1:-1
	EVP_sha384: (void) => const struct env_md_st* 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	EVP_sha512: (void) => const struct env_md_st* 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	EVP_sha: (void) => const struct env_md_st* 		if !def(OPENSSL_NO_SHA0)		at :-1:-1
	EVP_whirlpool: (void) => const struct env_md_st* 		if True		at :-1:-1
	EXTENDED_KEY_USAGE_free: (struct stack_st_ASN1_OBJECT*) => void 		if True		at :-1:-1
	EXTENDED_KEY_USAGE_new: (void) => struct stack_st_ASN1_OBJECT* 		if True		at :-1:-1
	FIPS_mode: (void) => signed int 		if True		at :-1:-1
	FIPS_mode_set: (signed int) => signed int 		if True		at :-1:-1
	GENERAL_NAMES_free: (struct stack_st_GENERAL_NAME*) => void 		if True		at :-1:-1
	GENERAL_NAMES_new: (void) => struct stack_st_GENERAL_NAME* 		if True		at :-1:-1
	GENERAL_NAME_cmp: (struct GENERAL_NAME_st*, struct GENERAL_NAME_st*) => signed int 		if True		at :-1:-1
	GENERAL_NAME_dup: (struct GENERAL_NAME_st*) => struct GENERAL_NAME_st* 		if True		at :-1:-1
	GENERAL_NAME_free: (struct GENERAL_NAME_st*) => void 		if True		at :-1:-1
	GENERAL_NAME_get0_otherName: (struct GENERAL_NAME_st*, struct asn1_object_st**, struct asn1_type_st**) => signed int 		if True		at :-1:-1
	GENERAL_NAME_get0_value: (struct GENERAL_NAME_st*, signed int*) => void* 		if True		at :-1:-1
	GENERAL_NAME_new: (void) => struct GENERAL_NAME_st* 		if True		at :-1:-1
	GENERAL_NAME_print: (struct bio_st*, struct GENERAL_NAME_st*) => signed int 		if True		at :-1:-1
	GENERAL_NAME_set0_othername: (struct GENERAL_NAME_st*, struct asn1_object_st*, struct asn1_type_st*) => signed int 		if True		at :-1:-1
	GENERAL_NAME_set0_value: (struct GENERAL_NAME_st*, signed int, void*) => void 		if True		at :-1:-1
	GENERAL_SUBTREE_free: (struct GENERAL_SUBTREE_st*) => void 		if True		at :-1:-1
	GENERAL_SUBTREE_new: (void) => struct GENERAL_SUBTREE_st* 		if True		at :-1:-1
	ISSUING_DIST_POINT_free: (struct ISSUING_DIST_POINT_st*) => void 		if True		at :-1:-1
	ISSUING_DIST_POINT_new: (void) => struct ISSUING_DIST_POINT_st* 		if True		at :-1:-1
	KRB5_APREQBODY_free: (struct krb5_ap_req_st*) => void 		if True		at :-1:-1
	KRB5_APREQBODY_new: (void) => struct krb5_ap_req_st* 		if True		at :-1:-1
	KRB5_APREQ_free: (struct stack_st_KRB5_APREQBODY*) => void 		if True		at :-1:-1
	KRB5_APREQ_new: (void) => struct stack_st_KRB5_APREQBODY* 		if True		at :-1:-1
	KRB5_AUTHDATA_free: (struct krb5_authorization_st*) => void 		if True		at :-1:-1
	KRB5_AUTHDATA_new: (void) => struct krb5_authorization_st* 		if True		at :-1:-1
	KRB5_AUTHENTBODY_free: (struct krb5_authenticator_st*) => void 		if True		at :-1:-1
	KRB5_AUTHENTBODY_new: (void) => struct krb5_authenticator_st* 		if True		at :-1:-1
	KRB5_AUTHENT_free: (struct stack_st_KRB5_AUTHENTBODY*) => void 		if True		at :-1:-1
	KRB5_AUTHENT_new: (void) => struct stack_st_KRB5_AUTHENTBODY* 		if True		at :-1:-1
	KRB5_CHECKSUM_free: (struct krb5_checksum_st*) => void 		if True		at :-1:-1
	KRB5_CHECKSUM_new: (void) => struct krb5_checksum_st* 		if True		at :-1:-1
	KRB5_ENCDATA_free: (struct krb5_encdata_st*) => void 		if True		at :-1:-1
	KRB5_ENCDATA_new: (void) => struct krb5_encdata_st* 		if True		at :-1:-1
	KRB5_ENCKEY_free: (struct krb5_encryptionkey_st*) => void 		if True		at :-1:-1
	KRB5_ENCKEY_new: (void) => struct krb5_encryptionkey_st* 		if True		at :-1:-1
	KRB5_PRINCNAME_free: (struct krb5_princname_st*) => void 		if True		at :-1:-1
	KRB5_PRINCNAME_new: (void) => struct krb5_princname_st* 		if True		at :-1:-1
	KRB5_TICKET_free: (struct stack_st_KRB5_TKTBODY*) => void 		if True		at :-1:-1
	KRB5_TICKET_new: (void) => struct stack_st_KRB5_TKTBODY* 		if True		at :-1:-1
	KRB5_TKTBODY_free: (struct krb5_tktbody_st*) => void 		if True		at :-1:-1
	KRB5_TKTBODY_new: (void) => struct krb5_tktbody_st* 		if True		at :-1:-1
	MD4: (const unsigned char*, unsigned long, unsigned char*) => unsigned char* 		if !def(OPENSSL_NO_MD4)		at :-1:-1
	MD4_Final: (unsigned char*, struct MD4state_st*) => signed int 		if !def(OPENSSL_NO_MD4)		at :-1:-1
	MD4_Init: (struct MD4state_st*) => signed int 		if !def(OPENSSL_NO_MD4)		at :-1:-1
	MD4_Transform: (struct MD4state_st*, const unsigned char*) => void 		if !def(OPENSSL_NO_MD4)		at :-1:-1
	MD4_Update: (struct MD4state_st*, const void*, unsigned long) => signed int 		if !def(OPENSSL_NO_MD4)		at :-1:-1
	MD5: (const unsigned char*, unsigned long, unsigned char*) => unsigned char* 		if True		at :-1:-1
	MD5_Final: (unsigned char*, struct MD5state_st*) => signed int 		if True		at :-1:-1
	MD5_Init: (struct MD5state_st*) => signed int 		if True		at :-1:-1
	MD5_Transform: (struct MD5state_st*, const unsigned char*) => void 		if True		at :-1:-1
	MD5_Update: (struct MD5state_st*, const void*, unsigned long) => signed int 		if True		at :-1:-1
	MDC2: (const unsigned char*, unsigned long, unsigned char*) => unsigned char* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	MDC2_Final: (unsigned char*, struct mdc2_ctx_st*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	MDC2_Init: (struct mdc2_ctx_st*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	MDC2_Update: (struct mdc2_ctx_st*, const unsigned char*, unsigned long) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	NAME_CONSTRAINTS_check: (struct x509_st*, struct NAME_CONSTRAINTS_st*) => signed int 		if True		at :-1:-1
	NAME_CONSTRAINTS_free: (struct NAME_CONSTRAINTS_st*) => void 		if True		at :-1:-1
	NAME_CONSTRAINTS_new: (void) => struct NAME_CONSTRAINTS_st* 		if True		at :-1:-1
	NCONF_WIN32: () => struct conf_method_st* 		if True		at :-1:-1
	NCONF_default: (void) => struct conf_method_st* 		if True		at :-1:-1
	NCONF_dump_bio: (const struct conf_st*, struct bio_st*) => signed int 		if True		at :-1:-1
	NCONF_dump_fp: (const struct conf_st*, struct _IO_FILE*) => signed int 		if True		at :-1:-1
	NCONF_free: (struct conf_st*) => void 		if True		at :-1:-1
	NCONF_free_data: (struct conf_st*) => void 		if True		at :-1:-1
	NCONF_get_number_e: (const struct conf_st*, const char*, const char*, signed long*) => signed int 		if True		at :-1:-1
	NCONF_get_section: (const struct conf_st*, const char*) => struct stack_st_CONF_VALUE* 		if True		at :-1:-1
	NCONF_get_string: (const struct conf_st*, const char*, const char*) => char* 		if True		at :-1:-1
	NCONF_load: (struct conf_st*, const char*, signed long*) => signed int 		if True		at :-1:-1
	NCONF_load_bio: (struct conf_st*, struct bio_st*, signed long*) => signed int 		if True		at :-1:-1
	NCONF_load_fp: (struct conf_st*, struct _IO_FILE*, signed long*) => signed int 		if True		at :-1:-1
	NCONF_new: (struct conf_method_st*) => struct conf_st* 		if True		at :-1:-1
	NETSCAPE_CERT_SEQUENCE_free: (struct Netscape_certificate_sequence*) => void 		if True		at :-1:-1
	NETSCAPE_CERT_SEQUENCE_new: (void) => struct Netscape_certificate_sequence* 		if True		at :-1:-1
	NETSCAPE_ENCRYPTED_PKEY_free: (struct netscape_encrypted_pkey_st*) => void 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	NETSCAPE_ENCRYPTED_PKEY_new: (void) => struct netscape_encrypted_pkey_st* 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	NETSCAPE_PKEY_free: (struct netscape_pkey_st*) => void 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	NETSCAPE_PKEY_new: (void) => struct netscape_pkey_st* 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	NETSCAPE_SPKAC_free: (struct Netscape_spkac_st*) => void 		if True		at :-1:-1
	NETSCAPE_SPKAC_new: (void) => struct Netscape_spkac_st* 		if True		at :-1:-1
	NETSCAPE_SPKI_b64_decode: (const char*, signed int) => struct Netscape_spki_st* 		if True		at :-1:-1
	NETSCAPE_SPKI_b64_encode: (struct Netscape_spki_st*) => char* 		if True		at :-1:-1
	NETSCAPE_SPKI_free: (struct Netscape_spki_st*) => void 		if True		at :-1:-1
	NETSCAPE_SPKI_get_pubkey: (struct Netscape_spki_st*) => struct evp_pkey_st* 		if True		at :-1:-1
	NETSCAPE_SPKI_new: (void) => struct Netscape_spki_st* 		if True		at :-1:-1
	NETSCAPE_SPKI_print: (struct bio_st*, struct Netscape_spki_st*) => signed int 		if True		at :-1:-1
	NETSCAPE_SPKI_set_pubkey: (struct Netscape_spki_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	NETSCAPE_SPKI_sign: (struct Netscape_spki_st*, struct evp_pkey_st*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	NETSCAPE_SPKI_verify: (struct Netscape_spki_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	NETSCAPE_X509_free: (struct NETSCAPE_X509_st*) => void 		if True		at :-1:-1
	NETSCAPE_X509_new: (void) => struct NETSCAPE_X509_st* 		if True		at :-1:-1
	NOTICEREF_free: (struct NOTICEREF_st*) => void 		if True		at :-1:-1
	NOTICEREF_new: (void) => struct NOTICEREF_st* 		if True		at :-1:-1
	OBJ_NAME_add: (const char*, signed int, const char*) => signed int 		if True		at :-1:-1
	OBJ_NAME_cleanup: (signed int) => void 		if True		at :-1:-1
	OBJ_NAME_do_all: (signed int, (const struct obj_name_st*, void*) => void*, void*) => void 		if True		at :-1:-1
	OBJ_NAME_do_all_sorted: (signed int, (const struct obj_name_st*, void*) => void*, void*) => void 		if True		at :-1:-1
	OBJ_NAME_get: (const char*, signed int) => const char* 		if True		at :-1:-1
	OBJ_NAME_init: (void) => signed int 		if True		at :-1:-1
	OBJ_NAME_new_index: ((const char*) => unsigned long*, (const char*, const char*) => signed int*, (const char*, signed int, const char*) => void*) => signed int 		if True		at :-1:-1
	OBJ_NAME_remove: (const char*, signed int) => signed int 		if True		at :-1:-1
	OBJ_add_object: (const struct asn1_object_st*) => signed int 		if True		at :-1:-1
	OBJ_add_sigid: (signed int, signed int, signed int) => signed int 		if True		at :-1:-1
	OBJ_bsearch_: (const void*, const void*, signed int, signed int, (const void*, const void*) => signed int*) => const void* 		if True		at :-1:-1
	OBJ_bsearch_ex_: (const void*, const void*, signed int, signed int, (const void*, const void*) => signed int*, signed int) => const void* 		if True		at :-1:-1
	OBJ_cleanup: (void) => void 		if True		at :-1:-1
	OBJ_cmp: (const struct asn1_object_st*, const struct asn1_object_st*) => signed int 		if True		at :-1:-1
	OBJ_create: (const char*, const char*, const char*) => signed int 		if True		at :-1:-1
	OBJ_create_objects: (struct bio_st*) => signed int 		if True		at :-1:-1
	OBJ_dup: (const struct asn1_object_st*) => struct asn1_object_st* 		if True		at :-1:-1
	OBJ_find_sigid_algs: (signed int, signed int*, signed int*) => signed int 		if True		at :-1:-1
	OBJ_find_sigid_by_algs: (signed int*, signed int, signed int) => signed int 		if True		at :-1:-1
	OBJ_ln2nid: (const char*) => signed int 		if True		at :-1:-1
	OBJ_new_nid: (signed int) => signed int 		if True		at :-1:-1
	OBJ_nid2ln: (signed int) => const char* 		if True		at :-1:-1
	OBJ_nid2obj: (signed int) => struct asn1_object_st* 		if True		at :-1:-1
	OBJ_nid2sn: (signed int) => const char* 		if True		at :-1:-1
	OBJ_obj2nid: (const struct asn1_object_st*) => signed int 		if True		at :-1:-1
	OBJ_obj2txt: (char*, signed int, const struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	OBJ_sigid_free: (void) => void 		if True		at :-1:-1
	OBJ_sn2nid: (const char*) => signed int 		if True		at :-1:-1
	OBJ_txt2nid: (const char*) => signed int 		if True		at :-1:-1
	OBJ_txt2obj: (const char*, signed int) => struct asn1_object_st* 		if True		at :-1:-1
	OCSP_BASICRESP_add1_ext_i2d: (struct ocsp_basic_response_st*, signed int, void*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	OCSP_BASICRESP_add_ext: (struct ocsp_basic_response_st*, struct X509_extension_st*, signed int) => signed int 		if True		at :-1:-1
	OCSP_BASICRESP_delete_ext: (struct ocsp_basic_response_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_BASICRESP_free: (struct ocsp_basic_response_st*) => void 		if True		at :-1:-1
	OCSP_BASICRESP_get1_ext_d2i: (struct ocsp_basic_response_st*, signed int, signed int*, signed int*) => void* 		if True		at :-1:-1
	OCSP_BASICRESP_get_ext: (struct ocsp_basic_response_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_BASICRESP_get_ext_by_NID: (struct ocsp_basic_response_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	OCSP_BASICRESP_get_ext_by_OBJ: (struct ocsp_basic_response_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	OCSP_BASICRESP_get_ext_by_critical: (struct ocsp_basic_response_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	OCSP_BASICRESP_get_ext_count: (struct ocsp_basic_response_st*) => signed int 		if True		at :-1:-1
	OCSP_BASICRESP_new: (void) => struct ocsp_basic_response_st* 		if True		at :-1:-1
	OCSP_CERTID_dup: (struct ocsp_cert_id_st*) => struct ocsp_cert_id_st* 		if True		at :-1:-1
	OCSP_CERTID_free: (struct ocsp_cert_id_st*) => void 		if True		at :-1:-1
	OCSP_CERTID_new: (void) => struct ocsp_cert_id_st* 		if True		at :-1:-1
	OCSP_CERTSTATUS_free: (struct ocsp_cert_status_st*) => void 		if True		at :-1:-1
	OCSP_CERTSTATUS_new: (void) => struct ocsp_cert_status_st* 		if True		at :-1:-1
	OCSP_CRLID_free: (struct ocsp_crl_id_st*) => void 		if True		at :-1:-1
	OCSP_CRLID_new: (void) => struct ocsp_crl_id_st* 		if True		at :-1:-1
	OCSP_ONEREQ_add1_ext_i2d: (struct ocsp_one_request_st*, signed int, void*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	OCSP_ONEREQ_add_ext: (struct ocsp_one_request_st*, struct X509_extension_st*, signed int) => signed int 		if True		at :-1:-1
	OCSP_ONEREQ_delete_ext: (struct ocsp_one_request_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_ONEREQ_free: (struct ocsp_one_request_st*) => void 		if True		at :-1:-1
	OCSP_ONEREQ_get1_ext_d2i: (struct ocsp_one_request_st*, signed int, signed int*, signed int*) => void* 		if True		at :-1:-1
	OCSP_ONEREQ_get_ext: (struct ocsp_one_request_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_ONEREQ_get_ext_by_NID: (struct ocsp_one_request_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	OCSP_ONEREQ_get_ext_by_OBJ: (struct ocsp_one_request_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	OCSP_ONEREQ_get_ext_by_critical: (struct ocsp_one_request_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	OCSP_ONEREQ_get_ext_count: (struct ocsp_one_request_st*) => signed int 		if True		at :-1:-1
	OCSP_ONEREQ_new: (void) => struct ocsp_one_request_st* 		if True		at :-1:-1
	OCSP_REQINFO_free: (struct ocsp_req_info_st*) => void 		if True		at :-1:-1
	OCSP_REQINFO_new: (void) => struct ocsp_req_info_st* 		if True		at :-1:-1
	OCSP_REQUEST_add1_ext_i2d: (struct ocsp_request_st*, signed int, void*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	OCSP_REQUEST_add_ext: (struct ocsp_request_st*, struct X509_extension_st*, signed int) => signed int 		if True		at :-1:-1
	OCSP_REQUEST_delete_ext: (struct ocsp_request_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_REQUEST_free: (struct ocsp_request_st*) => void 		if True		at :-1:-1
	OCSP_REQUEST_get1_ext_d2i: (struct ocsp_request_st*, signed int, signed int*, signed int*) => void* 		if True		at :-1:-1
	OCSP_REQUEST_get_ext: (struct ocsp_request_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_REQUEST_get_ext_by_NID: (struct ocsp_request_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	OCSP_REQUEST_get_ext_by_OBJ: (struct ocsp_request_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	OCSP_REQUEST_get_ext_by_critical: (struct ocsp_request_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	OCSP_REQUEST_get_ext_count: (struct ocsp_request_st*) => signed int 		if True		at :-1:-1
	OCSP_REQUEST_new: (void) => struct ocsp_request_st* 		if True		at :-1:-1
	OCSP_REQUEST_print: (struct bio_st*, struct ocsp_request_st*, unsigned long) => signed int 		if True		at :-1:-1
	OCSP_REQ_CTX_add1_header: (struct ocsp_req_ctx_st*, const char*, const char*) => signed int 		if True		at :-1:-1
	OCSP_REQ_CTX_free: (struct ocsp_req_ctx_st*) => void 		if True		at :-1:-1
	OCSP_REQ_CTX_set1_req: (struct ocsp_req_ctx_st*, struct ocsp_request_st*) => signed int 		if True		at :-1:-1
	OCSP_RESPBYTES_free: (struct ocsp_resp_bytes_st*) => void 		if True		at :-1:-1
	OCSP_RESPBYTES_new: (void) => struct ocsp_resp_bytes_st* 		if True		at :-1:-1
	OCSP_RESPDATA_free: (struct ocsp_response_data_st*) => void 		if True		at :-1:-1
	OCSP_RESPDATA_new: (void) => struct ocsp_response_data_st* 		if True		at :-1:-1
	OCSP_RESPID_free: (struct ocsp_responder_id_st*) => void 		if True		at :-1:-1
	OCSP_RESPID_new: (void) => struct ocsp_responder_id_st* 		if True		at :-1:-1
	OCSP_RESPONSE_free: (struct ocsp_response_st*) => void 		if True		at :-1:-1
	OCSP_RESPONSE_new: (void) => struct ocsp_response_st* 		if True		at :-1:-1
	OCSP_RESPONSE_print: (struct bio_st*, struct ocsp_response_st*, unsigned long) => signed int 		if True		at :-1:-1
	OCSP_REVOKEDINFO_free: (struct ocsp_revoked_info_st*) => void 		if True		at :-1:-1
	OCSP_REVOKEDINFO_new: (void) => struct ocsp_revoked_info_st* 		if True		at :-1:-1
	OCSP_SERVICELOC_free: (struct ocsp_service_locator_st*) => void 		if True		at :-1:-1
	OCSP_SERVICELOC_new: (void) => struct ocsp_service_locator_st* 		if True		at :-1:-1
	OCSP_SIGNATURE_free: (struct ocsp_signature_st*) => void 		if True		at :-1:-1
	OCSP_SIGNATURE_new: (void) => struct ocsp_signature_st* 		if True		at :-1:-1
	OCSP_SINGLERESP_add1_ext_i2d: (struct ocsp_single_response_st*, signed int, void*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	OCSP_SINGLERESP_add_ext: (struct ocsp_single_response_st*, struct X509_extension_st*, signed int) => signed int 		if True		at :-1:-1
	OCSP_SINGLERESP_delete_ext: (struct ocsp_single_response_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_SINGLERESP_free: (struct ocsp_single_response_st*) => void 		if True		at :-1:-1
	OCSP_SINGLERESP_get1_ext_d2i: (struct ocsp_single_response_st*, signed int, signed int*, signed int*) => void* 		if True		at :-1:-1
	OCSP_SINGLERESP_get_ext: (struct ocsp_single_response_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_SINGLERESP_get_ext_by_NID: (struct ocsp_single_response_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	OCSP_SINGLERESP_get_ext_by_OBJ: (struct ocsp_single_response_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	OCSP_SINGLERESP_get_ext_by_critical: (struct ocsp_single_response_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	OCSP_SINGLERESP_get_ext_count: (struct ocsp_single_response_st*) => signed int 		if True		at :-1:-1
	OCSP_SINGLERESP_new: (void) => struct ocsp_single_response_st* 		if True		at :-1:-1
	OCSP_accept_responses_new: (char**) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_archive_cutoff_new: (char*) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_basic_add1_cert: (struct ocsp_basic_response_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	OCSP_basic_add1_nonce: (struct ocsp_basic_response_st*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	OCSP_basic_add1_status: (struct ocsp_basic_response_st*, struct ocsp_cert_id_st*, signed int, signed int, struct asn1_string_st*, struct asn1_string_st*, struct asn1_string_st*) => struct ocsp_single_response_st* 		if True		at :-1:-1
	OCSP_basic_sign: (struct ocsp_basic_response_st*, struct x509_st*, struct evp_pkey_st*, const struct env_md_st*, struct stack_st_X509*, unsigned long) => signed int 		if True		at :-1:-1
	OCSP_basic_verify: (struct ocsp_basic_response_st*, struct stack_st_X509*, struct x509_store_st*, unsigned long) => signed int 		if True		at :-1:-1
	OCSP_cert_id_new: (const struct env_md_st*, struct X509_name_st*, struct asn1_string_st*, struct asn1_string_st*) => struct ocsp_cert_id_st* 		if True		at :-1:-1
	OCSP_cert_status_str: (signed long) => const char* 		if True		at :-1:-1
	OCSP_cert_to_id: (const struct env_md_st*, struct x509_st*, struct x509_st*) => struct ocsp_cert_id_st* 		if True		at :-1:-1
	OCSP_check_nonce: (struct ocsp_request_st*, struct ocsp_basic_response_st*) => signed int 		if True		at :-1:-1
	OCSP_check_validity: (struct asn1_string_st*, struct asn1_string_st*, signed long, signed long) => signed int 		if True		at :-1:-1
	OCSP_copy_nonce: (struct ocsp_basic_response_st*, struct ocsp_request_st*) => signed int 		if True		at :-1:-1
	OCSP_crlID_new: (char*, signed long*, char*) => struct X509_extension_st* 		if True		at :-1:-1
	OCSP_crl_reason_str: (signed long) => const char* 		if True		at :-1:-1
	OCSP_id_cmp: (struct ocsp_cert_id_st*, struct ocsp_cert_id_st*) => signed int 		if True		at :-1:-1
	OCSP_id_get0_info: (struct asn1_string_st**, struct asn1_object_st**, struct asn1_string_st**, struct asn1_string_st**, struct ocsp_cert_id_st*) => signed int 		if True		at :-1:-1
	OCSP_id_issuer_cmp: (struct ocsp_cert_id_st*, struct ocsp_cert_id_st*) => signed int 		if True		at :-1:-1
	OCSP_onereq_get0_id: (struct ocsp_one_request_st*) => struct ocsp_cert_id_st* 		if True		at :-1:-1
	OCSP_parse_url: (char*, char**, char**, char**, signed int*) => signed int 		if True		at :-1:-1
	OCSP_request_add0_id: (struct ocsp_request_st*, struct ocsp_cert_id_st*) => struct ocsp_one_request_st* 		if True		at :-1:-1
	OCSP_request_add1_cert: (struct ocsp_request_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	OCSP_request_add1_nonce: (struct ocsp_request_st*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	OCSP_request_is_signed: (struct ocsp_request_st*) => signed int 		if True		at :-1:-1
	OCSP_request_onereq_count: (struct ocsp_request_st*) => signed int 		if True		at :-1:-1
	OCSP_request_onereq_get0: (struct ocsp_request_st*, signed int) => struct ocsp_one_request_st* 		if True		at :-1:-1
	OCSP_request_set1_name: (struct ocsp_request_st*, struct X509_name_st*) => signed int 		if True		at :-1:-1
	OCSP_request_sign: (struct ocsp_request_st*, struct x509_st*, struct evp_pkey_st*, const struct env_md_st*, struct stack_st_X509*, unsigned long) => signed int 		if True		at :-1:-1
	OCSP_request_verify: (struct ocsp_request_st*, struct stack_st_X509*, struct x509_store_st*, unsigned long) => signed int 		if True		at :-1:-1
	OCSP_resp_count: (struct ocsp_basic_response_st*) => signed int 		if True		at :-1:-1
	OCSP_resp_find: (struct ocsp_basic_response_st*, struct ocsp_cert_id_st*, signed int) => signed int 		if True		at :-1:-1
	OCSP_resp_find_status: (struct ocsp_basic_response_st*, struct ocsp_cert_id_st*, signed int*, signed int*, struct asn1_string_st**, struct asn1_string_st**, struct asn1_string_st**) => signed int 		if True		at :-1:-1
	OCSP_resp_get0: (struct ocsp_basic_response_st*, signed int) => struct ocsp_single_response_st* 		if True		at :-1:-1
	OCSP_response_create: (signed int, struct ocsp_basic_response_st*) => struct ocsp_response_st* 		if True		at :-1:-1
	OCSP_response_get1_basic: (struct ocsp_response_st*) => struct ocsp_basic_response_st* 		if True		at :-1:-1
	OCSP_response_status: (struct ocsp_response_st*) => signed int 		if True		at :-1:-1
	OCSP_response_status_str: (signed long) => const char* 		if True		at :-1:-1
	OCSP_sendreq_bio: (struct bio_st*, char*, struct ocsp_request_st*) => struct ocsp_response_st* 		if True		at :-1:-1
	OCSP_sendreq_nbio: (struct ocsp_response_st**, struct ocsp_req_ctx_st*) => signed int 		if True		at :-1:-1
	OCSP_sendreq_new: (struct bio_st*, char*, struct ocsp_request_st*, signed int) => struct ocsp_req_ctx_st* 		if True		at :-1:-1
	OCSP_single_get0_status: (struct ocsp_single_response_st*, signed int*, struct asn1_string_st**, struct asn1_string_st**, struct asn1_string_st**) => signed int 		if True		at :-1:-1
	OCSP_url_svcloc_new: (struct X509_name_st*, char**) => struct X509_extension_st* 		if True		at :-1:-1
	OPENSSL_DIR_end: (struct OPENSSL_dir_context_st**) => signed int 		if True		at :-1:-1
	OPENSSL_DIR_read: (struct OPENSSL_dir_context_st**, const char*) => const char* 		if True		at :-1:-1
	OPENSSL_add_all_algorithms_conf: (void) => void 		if True		at :-1:-1
	OPENSSL_add_all_algorithms_noconf: (void) => void 		if True		at :-1:-1
	OPENSSL_asc2uni: (const char*, signed int, unsigned char**, signed int*) => unsigned char* 		if True		at :-1:-1
	OPENSSL_config: (const char*) => void 		if True		at :-1:-1
	OPENSSL_cpuid_setup: (void) => void 		if !def(OPENSSL_NO_ASM)		at :-1:-1
	OPENSSL_gmtime: (const signed long*, struct tm*) => struct tm* 		if True		at :-1:-1
	OPENSSL_gmtime_adj: (struct tm*, signed int, signed long) => signed int 		if True		at :-1:-1
	OPENSSL_ia32cap_loc: (void) => unsigned long* 		if True		at :-1:-1
	OPENSSL_init: (void) => void 		if True		at :-1:-1
	OPENSSL_isservice: (void) => signed int 		if True		at :-1:-1
	OPENSSL_issetugid: (void) => signed int 		if True		at :-1:-1
	OPENSSL_load_builtin_modules: (void) => void 		if True		at :-1:-1
	OPENSSL_memcmp: (const void*, const void*, unsigned long) => signed int 		if True		at :-1:-1
	OPENSSL_no_config: () => void 		if True		at :-1:-1
	OPENSSL_showfatal: (const char*, ...) => void 		if True		at :-1:-1
	OPENSSL_stderr: (void) => void* 		if True		at :-1:-1
	OPENSSL_strcasecmp: (const char*, const char*) => signed int 		if True		at :-1:-1
	OPENSSL_strncasecmp: (const char*, const char*, unsigned long) => signed int 		if True		at :-1:-1
	OPENSSL_uni2asc: (unsigned char*, signed int) => char* 		if True		at :-1:-1
	OTHERNAME_cmp: (struct otherName_st*, struct otherName_st*) => signed int 		if True		at :-1:-1
	OTHERNAME_free: (struct otherName_st*) => void 		if True		at :-1:-1
	OTHERNAME_new: (void) => struct otherName_st* 		if True		at :-1:-1
	OpenSSLDie: (const char*, signed int, const char*) => void 		if True		at :-1:-1
	OpenSSL_add_all_ciphers: (void) => void 		if True		at :-1:-1
	OpenSSL_add_all_digests: (void) => void 		if True		at :-1:-1
	PBE2PARAM_free: (struct PBE2PARAM_st*) => void 		if True		at :-1:-1
	PBE2PARAM_new: (void) => struct PBE2PARAM_st* 		if True		at :-1:-1
	PBEPARAM_free: (struct PBEPARAM_st*) => void 		if True		at :-1:-1
	PBEPARAM_new: (void) => struct PBEPARAM_st* 		if True		at :-1:-1
	PBKDF2PARAM_free: (struct PBKDF2PARAM_st*) => void 		if True		at :-1:-1
	PBKDF2PARAM_new: (void) => struct PBKDF2PARAM_st* 		if True		at :-1:-1
	PEM_ASN1_read: ((void**, const unsigned char**, signed long) => void**, const char*, struct _IO_FILE*, void**, (char*, signed int, signed int, void*) => signed int*, void*) => void* 		if True		at :-1:-1
	PEM_ASN1_read_bio: ((void**, const unsigned char**, signed long) => void**, const char*, struct bio_st*, void**, (char*, signed int, signed int, void*) => signed int*, void*) => void* 		if True		at :-1:-1
	PEM_ASN1_write: ((void*, unsigned char**) => signed int*, const char*, struct _IO_FILE*, void*, const struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_ASN1_write_bio: ((void*, unsigned char**) => signed int*, const char*, struct bio_st*, void*, const struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_SealFinal: (struct PEM_Encode_Seal_st*, unsigned char*, signed int*, unsigned char*, signed int*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	PEM_SealInit: (struct PEM_Encode_Seal_st*, struct evp_cipher_st*, struct env_md_st*, unsigned char**, signed int*, unsigned char*, struct evp_pkey_st**, signed int) => signed int 		if True		at :-1:-1
	PEM_SealUpdate: (struct PEM_Encode_Seal_st*, unsigned char*, signed int*, unsigned char*, signed int) => void 		if True		at :-1:-1
	PEM_SignFinal: (struct env_md_ctx_st*, unsigned char*, unsigned int*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	PEM_SignInit: (struct env_md_ctx_st*, struct env_md_st*) => void 		if True		at :-1:-1
	PEM_SignUpdate: (struct env_md_ctx_st*, unsigned char*, unsigned int) => void 		if True		at :-1:-1
	PEM_X509_INFO_read: (struct _IO_FILE*, struct stack_st_X509_INFO*, (char*, signed int, signed int, void*) => signed int*, void*) => struct stack_st_X509_INFO* 		if True		at :-1:-1
	PEM_X509_INFO_read_bio: (struct bio_st*, struct stack_st_X509_INFO*, (char*, signed int, signed int, void*) => signed int*, void*) => struct stack_st_X509_INFO* 		if True		at :-1:-1
	PEM_X509_INFO_write_bio: (struct bio_st*, struct X509_info_st*, struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_bytes_read_bio: (unsigned char**, signed long*, char**, const char*, struct bio_st*, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_def_callback: (char*, signed int, signed int, void*) => signed int 		if True		at :-1:-1
	PEM_dek_info: (char*, const char*, signed int, char*) => void 		if True		at :-1:-1
	PEM_do_header: (struct evp_cipher_info_st*, unsigned char*, signed long*, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_get_EVP_CIPHER_INFO: (char*, struct evp_cipher_info_st*) => signed int 		if True		at :-1:-1
	PEM_proc_type: (char*, signed int) => void 		if True		at :-1:-1
	PEM_read: (struct _IO_FILE*, char**, char**, unsigned char**, signed long*) => signed int 		if True		at :-1:-1
	PEM_read_CMS: (struct _IO_FILE*, struct CMS_ContentInfo_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	PEM_read_DHparams: (struct _IO_FILE*, struct dh_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct dh_st* 		if True		at :-1:-1
	PEM_read_DSAPrivateKey: (struct _IO_FILE*, struct dsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct dsa_st* 		if True		at :-1:-1
	PEM_read_DSA_PUBKEY: (struct _IO_FILE*, struct dsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct dsa_st* 		if True		at :-1:-1
	PEM_read_DSAparams: (struct _IO_FILE*, struct dsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct dsa_st* 		if True		at :-1:-1
	PEM_read_ECPKParameters: (struct _IO_FILE*, struct ec_group_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct ec_group_st* 		if True		at :-1:-1
	PEM_read_ECPrivateKey: (struct _IO_FILE*, struct ec_key_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct ec_key_st* 		if True		at :-1:-1
	PEM_read_EC_PUBKEY: (struct _IO_FILE*, struct ec_key_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct ec_key_st* 		if True		at :-1:-1
	PEM_read_NETSCAPE_CERT_SEQUENCE: (struct _IO_FILE*, struct Netscape_certificate_sequence**, (char*, signed int, signed int, void*) => signed int*, void*) => struct Netscape_certificate_sequence* 		if True		at :-1:-1
	PEM_read_PKCS7: (struct _IO_FILE*, struct pkcs7_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct pkcs7_st* 		if True		at :-1:-1
	PEM_read_PKCS8: (struct _IO_FILE*, struct X509_sig_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct X509_sig_st* 		if True		at :-1:-1
	PEM_read_PKCS8_PRIV_KEY_INFO: (struct _IO_FILE*, struct pkcs8_priv_key_info_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	PEM_read_PUBKEY: (struct _IO_FILE*, struct evp_pkey_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct evp_pkey_st* 		if True		at :-1:-1
	PEM_read_PrivateKey: (struct _IO_FILE*, struct evp_pkey_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct evp_pkey_st* 		if True		at :-1:-1
	PEM_read_RSAPrivateKey: (struct _IO_FILE*, struct rsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct rsa_st* 		if True		at :-1:-1
	PEM_read_RSAPublicKey: (struct _IO_FILE*, struct rsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct rsa_st* 		if True		at :-1:-1
	PEM_read_RSA_PUBKEY: (struct _IO_FILE*, struct rsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct rsa_st* 		if True		at :-1:-1
	PEM_read_X509: (struct _IO_FILE*, struct x509_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct x509_st* 		if True		at :-1:-1
	PEM_read_X509_AUX: (struct _IO_FILE*, struct x509_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct x509_st* 		if True		at :-1:-1
	PEM_read_X509_CERT_PAIR: (struct _IO_FILE*, struct x509_cert_pair_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct x509_cert_pair_st* 		if True		at :-1:-1
	PEM_read_X509_CRL: (struct _IO_FILE*, struct X509_crl_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct X509_crl_st* 		if True		at :-1:-1
	PEM_read_X509_REQ: (struct _IO_FILE*, struct X509_req_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct X509_req_st* 		if True		at :-1:-1
	PEM_read_bio: (struct bio_st*, char**, char**, unsigned char**, signed long*) => signed int 		if True		at :-1:-1
	PEM_read_bio_CMS: (struct bio_st*, struct CMS_ContentInfo_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	PEM_read_bio_DHparams: (struct bio_st*, struct dh_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct dh_st* 		if True		at :-1:-1
	PEM_read_bio_DSAPrivateKey: (struct bio_st*, struct dsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct dsa_st* 		if True		at :-1:-1
	PEM_read_bio_DSA_PUBKEY: (struct bio_st*, struct dsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct dsa_st* 		if True		at :-1:-1
	PEM_read_bio_DSAparams: (struct bio_st*, struct dsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct dsa_st* 		if True		at :-1:-1
	PEM_read_bio_ECPKParameters: (struct bio_st*, struct ec_group_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct ec_group_st* 		if True		at :-1:-1
	PEM_read_bio_ECPrivateKey: (struct bio_st*, struct ec_key_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct ec_key_st* 		if True		at :-1:-1
	PEM_read_bio_EC_PUBKEY: (struct bio_st*, struct ec_key_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct ec_key_st* 		if True		at :-1:-1
	PEM_read_bio_NETSCAPE_CERT_SEQUENCE: (struct bio_st*, struct Netscape_certificate_sequence**, (char*, signed int, signed int, void*) => signed int*, void*) => struct Netscape_certificate_sequence* 		if True		at :-1:-1
	PEM_read_bio_PKCS7: (struct bio_st*, struct pkcs7_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct pkcs7_st* 		if True		at :-1:-1
	PEM_read_bio_PKCS8: (struct bio_st*, struct X509_sig_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct X509_sig_st* 		if True		at :-1:-1
	PEM_read_bio_PKCS8_PRIV_KEY_INFO: (struct bio_st*, struct pkcs8_priv_key_info_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	PEM_read_bio_PUBKEY: (struct bio_st*, struct evp_pkey_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct evp_pkey_st* 		if True		at :-1:-1
	PEM_read_bio_Parameters: (struct bio_st*, struct evp_pkey_st**) => struct evp_pkey_st* 		if True		at :-1:-1
	PEM_read_bio_PrivateKey: (struct bio_st*, struct evp_pkey_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct evp_pkey_st* 		if True		at :-1:-1
	PEM_read_bio_RSAPrivateKey: (struct bio_st*, struct rsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct rsa_st* 		if True		at :-1:-1
	PEM_read_bio_RSAPublicKey: (struct bio_st*, struct rsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct rsa_st* 		if True		at :-1:-1
	PEM_read_bio_RSA_PUBKEY: (struct bio_st*, struct rsa_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct rsa_st* 		if True		at :-1:-1
	PEM_read_bio_X509: (struct bio_st*, struct x509_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct x509_st* 		if True		at :-1:-1
	PEM_read_bio_X509_AUX: (struct bio_st*, struct x509_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct x509_st* 		if True		at :-1:-1
	PEM_read_bio_X509_CERT_PAIR: (struct bio_st*, struct x509_cert_pair_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct x509_cert_pair_st* 		if True		at :-1:-1
	PEM_read_bio_X509_CRL: (struct bio_st*, struct X509_crl_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct X509_crl_st* 		if True		at :-1:-1
	PEM_read_bio_X509_REQ: (struct bio_st*, struct X509_req_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct X509_req_st* 		if True		at :-1:-1
	PEM_write: (struct _IO_FILE*, char*, char*, unsigned char*, signed long) => signed int 		if True		at :-1:-1
	PEM_write_CMS: (struct _IO_FILE*, const struct CMS_ContentInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	PEM_write_DHparams: (struct _IO_FILE*, const struct dh_st*) => signed int 		if True		at :-1:-1
	PEM_write_DSAPrivateKey: (struct _IO_FILE*, struct dsa_st*, const struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_DSA_PUBKEY: (struct _IO_FILE*, struct dsa_st*) => signed int 		if True		at :-1:-1
	PEM_write_DSAparams: (struct _IO_FILE*, const struct dsa_st*) => signed int 		if True		at :-1:-1
	PEM_write_ECPKParameters: (struct _IO_FILE*, const struct ec_group_st*) => signed int 		if True		at :-1:-1
	PEM_write_ECPrivateKey: (struct _IO_FILE*, struct ec_key_st*, const struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_EC_PUBKEY: (struct _IO_FILE*, struct ec_key_st*) => signed int 		if True		at :-1:-1
	PEM_write_NETSCAPE_CERT_SEQUENCE: (struct _IO_FILE*, struct Netscape_certificate_sequence*) => signed int 		if True		at :-1:-1
	PEM_write_PKCS7: (struct _IO_FILE*, struct pkcs7_st*) => signed int 		if True		at :-1:-1
	PEM_write_PKCS8: (struct _IO_FILE*, struct X509_sig_st*) => signed int 		if True		at :-1:-1
	PEM_write_PKCS8PrivateKey: (struct _IO_FILE*, struct evp_pkey_st*, const struct evp_cipher_st*, char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_PKCS8PrivateKey_nid: (struct _IO_FILE*, struct evp_pkey_st*, signed int, char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_PKCS8_PRIV_KEY_INFO: (struct _IO_FILE*, struct pkcs8_priv_key_info_st*) => signed int 		if True		at :-1:-1
	PEM_write_PUBKEY: (struct _IO_FILE*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	PEM_write_PrivateKey: (struct _IO_FILE*, struct evp_pkey_st*, const struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_RSAPrivateKey: (struct _IO_FILE*, struct rsa_st*, const struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_RSAPublicKey: (struct _IO_FILE*, const struct rsa_st*) => signed int 		if True		at :-1:-1
	PEM_write_RSA_PUBKEY: (struct _IO_FILE*, struct rsa_st*) => signed int 		if True		at :-1:-1
	PEM_write_X509: (struct _IO_FILE*, struct x509_st*) => signed int 		if True		at :-1:-1
	PEM_write_X509_AUX: (struct _IO_FILE*, struct x509_st*) => signed int 		if True		at :-1:-1
	PEM_write_X509_CERT_PAIR: (struct _IO_FILE*, struct x509_cert_pair_st*) => signed int 		if True		at :-1:-1
	PEM_write_X509_CRL: (struct _IO_FILE*, struct X509_crl_st*) => signed int 		if True		at :-1:-1
	PEM_write_X509_REQ: (struct _IO_FILE*, struct X509_req_st*) => signed int 		if True		at :-1:-1
	PEM_write_X509_REQ_NEW: (struct _IO_FILE*, struct X509_req_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio: (struct bio_st*, const char*, char*, unsigned char*, signed long) => signed int 		if True		at :-1:-1
	PEM_write_bio_ASN1_stream: (struct bio_st*, struct ASN1_VALUE_st*, struct bio_st*, signed int, const char*, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_CMS: (struct bio_st*, const struct CMS_ContentInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	PEM_write_bio_CMS_stream: (struct bio_st*, struct CMS_ContentInfo_st*, struct bio_st*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	PEM_write_bio_DHparams: (struct bio_st*, const struct dh_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_DSAPrivateKey: (struct bio_st*, struct dsa_st*, const struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_bio_DSA_PUBKEY: (struct bio_st*, struct dsa_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_DSAparams: (struct bio_st*, const struct dsa_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_ECPKParameters: (struct bio_st*, const struct ec_group_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_ECPrivateKey: (struct bio_st*, struct ec_key_st*, const struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_bio_EC_PUBKEY: (struct bio_st*, struct ec_key_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_NETSCAPE_CERT_SEQUENCE: (struct bio_st*, struct Netscape_certificate_sequence*) => signed int 		if True		at :-1:-1
	PEM_write_bio_PKCS7: (struct bio_st*, struct pkcs7_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_PKCS7_stream: (struct bio_st*, struct pkcs7_st*, struct bio_st*, signed int) => signed int 		if True		at :-1:-1
	PEM_write_bio_PKCS8: (struct bio_st*, struct X509_sig_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_PKCS8PrivateKey: (struct bio_st*, struct evp_pkey_st*, const struct evp_cipher_st*, char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_bio_PKCS8PrivateKey_nid: (struct bio_st*, struct evp_pkey_st*, signed int, char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_bio_PKCS8_PRIV_KEY_INFO: (struct bio_st*, struct pkcs8_priv_key_info_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_PUBKEY: (struct bio_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_Parameters: (struct bio_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_PrivateKey: (struct bio_st*, struct evp_pkey_st*, const struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_bio_RSAPrivateKey: (struct bio_st*, struct rsa_st*, const struct evp_cipher_st*, unsigned char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	PEM_write_bio_RSAPublicKey: (struct bio_st*, const struct rsa_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_RSA_PUBKEY: (struct bio_st*, struct rsa_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_X509: (struct bio_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_X509_AUX: (struct bio_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_X509_CERT_PAIR: (struct bio_st*, struct x509_cert_pair_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_X509_CRL: (struct bio_st*, struct X509_crl_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_X509_REQ: (struct bio_st*, struct X509_req_st*) => signed int 		if True		at :-1:-1
	PEM_write_bio_X509_REQ_NEW: (struct bio_st*, struct X509_req_st*) => signed int 		if True		at :-1:-1
	PKCS12_BAGS_free: (struct pkcs12_bag_st*) => void 		if True		at :-1:-1
	PKCS12_BAGS_new: (void) => struct pkcs12_bag_st* 		if True		at :-1:-1
	PKCS12_MAC_DATA_free: (struct {Map()}*) => void 		if True		at :-1:-1
	PKCS12_MAC_DATA_new: (void) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_MAKE_KEYBAG: (struct pkcs8_priv_key_info_st*) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_MAKE_SHKEYBAG: (signed int, const char*, signed int, unsigned char*, signed int, signed int, struct pkcs8_priv_key_info_st*) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_PBE_add: (void) => void 		if True		at :-1:-1
	PKCS12_PBE_keyivgen: (struct evp_cipher_ctx_st*, const char*, signed int, struct asn1_type_st*, const struct evp_cipher_st*, const struct env_md_st*, signed int) => signed int 		if True		at :-1:-1
	PKCS12_SAFEBAG_free: (struct {Map()}*) => void 		if True		at :-1:-1
	PKCS12_SAFEBAG_new: (void) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_add_CSPName_asc: (struct {Map()}*, const char*, signed int) => signed int 		if True		at :-1:-1
	PKCS12_add_cert: (struct stack_st_PKCS12_SAFEBAG**, struct x509_st*) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_add_friendlyname_asc: (struct {Map()}*, const char*, signed int) => signed int 		if True		at :-1:-1
	PKCS12_add_friendlyname_uni: (struct {Map()}*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	PKCS12_add_key: (struct stack_st_PKCS12_SAFEBAG**, struct evp_pkey_st*, signed int, signed int, signed int, char*) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_add_localkeyid: (struct {Map()}*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	PKCS12_add_safe: (struct stack_st_PKCS7**, struct stack_st_PKCS12_SAFEBAG*, signed int, signed int, char*) => signed int 		if True		at :-1:-1
	PKCS12_add_safes: (struct stack_st_PKCS7*, signed int) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_certbag2x509: (struct {Map()}*) => struct x509_st* 		if True		at :-1:-1
	PKCS12_certbag2x509crl: (struct {Map()}*) => struct X509_crl_st* 		if True		at :-1:-1
	PKCS12_create: (char*, char*, struct evp_pkey_st*, struct x509_st*, struct stack_st_X509*, signed int, signed int, signed int, signed int, signed int) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_decrypt_skey: (struct {Map()}*, const char*, signed int) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	PKCS12_free: (struct {Map()}*) => void 		if True		at :-1:-1
	PKCS12_get_attr_gen: (struct stack_st_X509_ATTRIBUTE*, signed int) => struct asn1_type_st* 		if True		at :-1:-1
	PKCS12_get_friendlyname: (struct {Map()}*) => char* 		if True		at :-1:-1
	PKCS12_init: (signed int) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_item_decrypt_d2i: (struct X509_algor_st*, const struct ASN1_ITEM_st*, const char*, signed int, struct asn1_string_st*, signed int) => void* 		if True		at :-1:-1
	PKCS12_item_i2d_encrypt: (struct X509_algor_st*, const struct ASN1_ITEM_st*, const char*, signed int, void*, signed int) => struct asn1_string_st* 		if True		at :-1:-1
	PKCS12_item_pack_safebag: (void*, const struct ASN1_ITEM_st*, signed int, signed int) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_key_gen_asc: (const char*, signed int, unsigned char*, signed int, signed int, signed int, signed int, unsigned char*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	PKCS12_key_gen_uni: (unsigned char*, signed int, unsigned char*, signed int, signed int, signed int, signed int, unsigned char*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	PKCS12_new: (void) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_newpass: (struct {Map()}*, char*, char*) => signed int 		if True		at :-1:-1
	PKCS12_pack_authsafes: (struct {Map()}*, struct stack_st_PKCS7*) => signed int 		if True		at :-1:-1
	PKCS12_pack_p7data: (struct stack_st_PKCS12_SAFEBAG*) => struct pkcs7_st* 		if True		at :-1:-1
	PKCS12_pack_p7encdata: (signed int, const char*, signed int, unsigned char*, signed int, signed int, struct stack_st_PKCS12_SAFEBAG*) => struct pkcs7_st* 		if True		at :-1:-1
	PKCS12_parse: (struct {Map()}*, const char*, struct evp_pkey_st**, struct x509_st**, struct stack_st_X509**) => signed int 		if True		at :-1:-1
	PKCS12_pbe_crypt: (struct X509_algor_st*, const char*, signed int, unsigned char*, signed int, unsigned char**, signed int*, signed int) => unsigned char* 		if True		at :-1:-1
	PKCS12_unpack_authsafes: (struct {Map()}*) => struct stack_st_PKCS7* 		if True		at :-1:-1
	PKCS12_unpack_p7data: (struct pkcs7_st*) => struct stack_st_PKCS12_SAFEBAG* 		if True		at :-1:-1
	PKCS12_unpack_p7encdata: (struct pkcs7_st*, const char*, signed int) => struct stack_st_PKCS12_SAFEBAG* 		if True		at :-1:-1
	PKCS12_x5092certbag: (struct x509_st*) => struct {Map()}* 		if True		at :-1:-1
	PKCS12_x509crl2certbag: (struct X509_crl_st*) => struct {Map()}* 		if True		at :-1:-1
	PKCS1_MGF1: (unsigned char*, signed long, const unsigned char*, signed long, const struct env_md_st*) => signed int 		if True		at :-1:-1
	PKCS5_PBE_add: (void) => void 		if True		at :-1:-1
	PKCS5_PBE_keyivgen: (struct evp_cipher_ctx_st*, const char*, signed int, struct asn1_type_st*, const struct evp_cipher_st*, const struct env_md_st*, signed int) => signed int 		if True		at :-1:-1
	PKCS5_pbe2_set: (const struct evp_cipher_st*, signed int, unsigned char*, signed int) => struct X509_algor_st* 		if True		at :-1:-1
	PKCS5_pbe2_set_iv: (const struct evp_cipher_st*, signed int, unsigned char*, signed int, unsigned char*, signed int) => struct X509_algor_st* 		if True		at :-1:-1
	PKCS5_pbe_set0_algor: (struct X509_algor_st*, signed int, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	PKCS5_pbe_set: (signed int, signed int, const unsigned char*, signed int) => struct X509_algor_st* 		if True		at :-1:-1
	PKCS5_pbkdf2_set: (signed int, unsigned char*, signed int, signed int, signed int) => struct X509_algor_st* 		if True		at :-1:-1
	PKCS7_DIGEST_free: (struct pkcs7_digest_st*) => void 		if True		at :-1:-1
	PKCS7_DIGEST_new: (void) => struct pkcs7_digest_st* 		if True		at :-1:-1
	PKCS7_ENCRYPT_free: (struct pkcs7_encrypted_st*) => void 		if True		at :-1:-1
	PKCS7_ENCRYPT_new: (void) => struct pkcs7_encrypted_st* 		if True		at :-1:-1
	PKCS7_ENC_CONTENT_free: (struct pkcs7_enc_content_st*) => void 		if True		at :-1:-1
	PKCS7_ENC_CONTENT_new: (void) => struct pkcs7_enc_content_st* 		if True		at :-1:-1
	PKCS7_ENVELOPE_free: (struct pkcs7_enveloped_st*) => void 		if True		at :-1:-1
	PKCS7_ENVELOPE_new: (void) => struct pkcs7_enveloped_st* 		if True		at :-1:-1
	PKCS7_ISSUER_AND_SERIAL_digest: (struct pkcs7_issuer_and_serial_st*, const struct env_md_st*, unsigned char*, unsigned int*) => signed int 		if True		at :-1:-1
	PKCS7_ISSUER_AND_SERIAL_free: (struct pkcs7_issuer_and_serial_st*) => void 		if True		at :-1:-1
	PKCS7_ISSUER_AND_SERIAL_new: (void) => struct pkcs7_issuer_and_serial_st* 		if True		at :-1:-1
	PKCS7_RECIP_INFO_free: (struct pkcs7_recip_info_st*) => void 		if True		at :-1:-1
	PKCS7_RECIP_INFO_get0_alg: (struct pkcs7_recip_info_st*, struct X509_algor_st**) => void 		if True		at :-1:-1
	PKCS7_RECIP_INFO_new: (void) => struct pkcs7_recip_info_st* 		if True		at :-1:-1
	PKCS7_RECIP_INFO_set: (struct pkcs7_recip_info_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	PKCS7_SIGNED_free: (struct pkcs7_signed_st*) => void 		if True		at :-1:-1
	PKCS7_SIGNED_new: (void) => struct pkcs7_signed_st* 		if True		at :-1:-1
	PKCS7_SIGNER_INFO_free: (struct pkcs7_signer_info_st*) => void 		if True		at :-1:-1
	PKCS7_SIGNER_INFO_get0_algs: (struct pkcs7_signer_info_st*, struct evp_pkey_st**, struct X509_algor_st**, struct X509_algor_st**) => void 		if True		at :-1:-1
	PKCS7_SIGNER_INFO_new: (void) => struct pkcs7_signer_info_st* 		if True		at :-1:-1
	PKCS7_SIGNER_INFO_set: (struct pkcs7_signer_info_st*, struct x509_st*, struct evp_pkey_st*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	PKCS7_SIGNER_INFO_sign: (struct pkcs7_signer_info_st*) => signed int 		if True		at :-1:-1
	PKCS7_SIGN_ENVELOPE_free: (struct pkcs7_signedandenveloped_st*) => void 		if True		at :-1:-1
	PKCS7_SIGN_ENVELOPE_new: (void) => struct pkcs7_signedandenveloped_st* 		if True		at :-1:-1
	PKCS7_add0_attrib_signing_time: (struct pkcs7_signer_info_st*, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	PKCS7_add1_attrib_digest: (struct pkcs7_signer_info_st*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	PKCS7_add_attrib_content_type: (struct pkcs7_signer_info_st*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	PKCS7_add_attrib_smimecap: (struct pkcs7_signer_info_st*, struct stack_st_X509_ALGOR*) => signed int 		if True		at :-1:-1
	PKCS7_add_attribute: (struct pkcs7_signer_info_st*, signed int, signed int, void*) => signed int 		if True		at :-1:-1
	PKCS7_add_certificate: (struct pkcs7_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	PKCS7_add_crl: (struct pkcs7_st*, struct X509_crl_st*) => signed int 		if True		at :-1:-1
	PKCS7_add_recipient: (struct pkcs7_st*, struct x509_st*) => struct pkcs7_recip_info_st* 		if True		at :-1:-1
	PKCS7_add_recipient_info: (struct pkcs7_st*, struct pkcs7_recip_info_st*) => signed int 		if True		at :-1:-1
	PKCS7_add_signature: (struct pkcs7_st*, struct x509_st*, struct evp_pkey_st*, const struct env_md_st*) => struct pkcs7_signer_info_st* 		if True		at :-1:-1
	PKCS7_add_signed_attribute: (struct pkcs7_signer_info_st*, signed int, signed int, void*) => signed int 		if True		at :-1:-1
	PKCS7_add_signer: (struct pkcs7_st*, struct pkcs7_signer_info_st*) => signed int 		if True		at :-1:-1
	PKCS7_cert_from_signer_info: (struct pkcs7_st*, struct pkcs7_signer_info_st*) => struct x509_st* 		if True		at :-1:-1
	PKCS7_content_new: (struct pkcs7_st*, signed int) => signed int 		if True		at :-1:-1
	PKCS7_ctrl: (struct pkcs7_st*, signed int, signed long, char*) => signed long 		if True		at :-1:-1
	PKCS7_dataDecode: (struct pkcs7_st*, struct evp_pkey_st*, struct bio_st*, struct x509_st*) => struct bio_st* 		if True		at :-1:-1
	PKCS7_dataFinal: (struct pkcs7_st*, struct bio_st*) => signed int 		if True		at :-1:-1
	PKCS7_dataInit: (struct pkcs7_st*, struct bio_st*) => struct bio_st* 		if True		at :-1:-1
	PKCS7_dataVerify: (struct x509_store_st*, struct x509_store_ctx_st*, struct bio_st*, struct pkcs7_st*, struct pkcs7_signer_info_st*) => signed int 		if True		at :-1:-1
	PKCS7_decrypt: (struct pkcs7_st*, struct evp_pkey_st*, struct x509_st*, struct bio_st*, signed int) => signed int 		if True		at :-1:-1
	PKCS7_digest_from_attributes: (struct stack_st_X509_ATTRIBUTE*) => struct asn1_string_st* 		if True		at :-1:-1
	PKCS7_dup: (struct pkcs7_st*) => struct pkcs7_st* 		if True		at :-1:-1
	PKCS7_encrypt: (struct stack_st_X509*, struct bio_st*, const struct evp_cipher_st*, signed int) => struct pkcs7_st* 		if True		at :-1:-1
	PKCS7_final: (struct pkcs7_st*, struct bio_st*, signed int) => signed int 		if True		at :-1:-1
	PKCS7_free: (struct pkcs7_st*) => void 		if True		at :-1:-1
	PKCS7_get0_signers: (struct pkcs7_st*, struct stack_st_X509*, signed int) => struct stack_st_X509* 		if True		at :-1:-1
	PKCS7_get_attribute: (struct pkcs7_signer_info_st*, signed int) => struct asn1_type_st* 		if True		at :-1:-1
	PKCS7_get_issuer_and_serial: (struct pkcs7_st*, signed int) => struct pkcs7_issuer_and_serial_st* 		if True		at :-1:-1
	PKCS7_get_signed_attribute: (struct pkcs7_signer_info_st*, signed int) => struct asn1_type_st* 		if True		at :-1:-1
	PKCS7_get_signer_info: (struct pkcs7_st*) => struct stack_st_PKCS7_SIGNER_INFO* 		if True		at :-1:-1
	PKCS7_get_smimecap: (struct pkcs7_signer_info_st*) => struct stack_st_X509_ALGOR* 		if True		at :-1:-1
	PKCS7_new: (void) => struct pkcs7_st* 		if True		at :-1:-1
	PKCS7_print_ctx: (struct bio_st*, struct pkcs7_st*, signed int, const struct asn1_pctx_st*) => signed int 		if True		at :-1:-1
	PKCS7_set0_type_other: (struct pkcs7_st*, signed int, struct asn1_type_st*) => signed int 		if True		at :-1:-1
	PKCS7_set_attributes: (struct pkcs7_signer_info_st*, struct stack_st_X509_ATTRIBUTE*) => signed int 		if True		at :-1:-1
	PKCS7_set_cipher: (struct pkcs7_st*, const struct evp_cipher_st*) => signed int 		if True		at :-1:-1
	PKCS7_set_content: (struct pkcs7_st*, struct pkcs7_st*) => signed int 		if True		at :-1:-1
	PKCS7_set_digest: (struct pkcs7_st*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	PKCS7_set_signed_attributes: (struct pkcs7_signer_info_st*, struct stack_st_X509_ATTRIBUTE*) => signed int 		if True		at :-1:-1
	PKCS7_set_type: (struct pkcs7_st*, signed int) => signed int 		if True		at :-1:-1
	PKCS7_sign: (struct x509_st*, struct evp_pkey_st*, struct stack_st_X509*, struct bio_st*, signed int) => struct pkcs7_st* 		if True		at :-1:-1
	PKCS7_sign_add_signer: (struct pkcs7_st*, struct x509_st*, struct evp_pkey_st*, const struct env_md_st*, signed int) => struct pkcs7_signer_info_st* 		if True		at :-1:-1
	PKCS7_signatureVerify: (struct bio_st*, struct pkcs7_st*, struct pkcs7_signer_info_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	PKCS7_simple_smimecap: (struct stack_st_X509_ALGOR*, signed int, signed int) => signed int 		if True		at :-1:-1
	PKCS7_stream: (unsigned char***, struct pkcs7_st*) => signed int 		if True		at :-1:-1
	PKCS7_to_TS_TST_INFO: (struct pkcs7_st*) => struct TS_tst_info_st* 		if True		at :-1:-1
	PKCS7_verify: (struct pkcs7_st*, struct stack_st_X509*, struct x509_store_st*, struct bio_st*, struct bio_st*, signed int) => signed int 		if True		at :-1:-1
	PKCS8_PRIV_KEY_INFO_free: (struct pkcs8_priv_key_info_st*) => void 		if True		at :-1:-1
	PKCS8_PRIV_KEY_INFO_new: (void) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	PKCS8_add_keyusage: (struct pkcs8_priv_key_info_st*, signed int) => signed int 		if True		at :-1:-1
	PKCS8_decrypt: (struct X509_sig_st*, const char*, signed int) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	PKCS8_encrypt: (signed int, const struct evp_cipher_st*, const char*, signed int, unsigned char*, signed int, signed int, struct pkcs8_priv_key_info_st*) => struct X509_sig_st* 		if True		at :-1:-1
	PKCS8_pkey_get0: (struct asn1_object_st**, const unsigned char**, signed int*, struct X509_algor_st**, struct pkcs8_priv_key_info_st*) => signed int 		if True		at :-1:-1
	PKCS8_pkey_set0: (struct pkcs8_priv_key_info_st*, struct asn1_object_st*, signed int, signed int, void*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	PKCS8_set_broken: (struct pkcs8_priv_key_info_st*, signed int) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	PKEY_USAGE_PERIOD_free: (struct PKEY_USAGE_PERIOD_st*) => void 		if True		at :-1:-1
	PKEY_USAGE_PERIOD_new: (void) => struct PKEY_USAGE_PERIOD_st* 		if True		at :-1:-1
	POLICYINFO_free: (struct POLICYINFO_st*) => void 		if True		at :-1:-1
	POLICYINFO_new: (void) => struct POLICYINFO_st* 		if True		at :-1:-1
	POLICYQUALINFO_free: (struct POLICYQUALINFO_st*) => void 		if True		at :-1:-1
	POLICYQUALINFO_new: (void) => struct POLICYQUALINFO_st* 		if True		at :-1:-1
	POLICY_CONSTRAINTS_free: (struct POLICY_CONSTRAINTS_st*) => void 		if True		at :-1:-1
	POLICY_CONSTRAINTS_new: (void) => struct POLICY_CONSTRAINTS_st* 		if True		at :-1:-1
	POLICY_MAPPING_free: (struct POLICY_MAPPING_st*) => void 		if True		at :-1:-1
	POLICY_MAPPING_new: (void) => struct POLICY_MAPPING_st* 		if True		at :-1:-1
	PROXY_CERT_INFO_EXTENSION_free: (struct PROXY_CERT_INFO_EXTENSION_st*) => void 		if True		at :-1:-1
	PROXY_CERT_INFO_EXTENSION_new: (void) => struct PROXY_CERT_INFO_EXTENSION_st* 		if True		at :-1:-1
	PROXY_POLICY_free: (struct PROXY_POLICY_st*) => void 		if True		at :-1:-1
	PROXY_POLICY_new: (void) => struct PROXY_POLICY_st* 		if True		at :-1:-1
	RAND_SSLeay: (void) => struct rand_meth_st* 		if (def(USE_MD5_RAND)|!def(OPENSSL_NO_DES)|!def(USE_MDC2_RAND)|def(USE_SHA1_RAND))		at :-1:-1
	RAND_add: (const void*, signed int, double) => void 		if True		at :-1:-1
	RAND_bytes: (unsigned char*, signed int) => signed int 		if True		at :-1:-1
	RAND_cleanup: (void) => void 		if True		at :-1:-1
	RAND_egd: (const char*) => signed int 		if !def(OPENSSL_SYS_VOS)		at :-1:-1
	RAND_egd: (const char*) => signed int 		if def(OPENSSL_SYS_VOS)		at :-1:-1
	RAND_egd_bytes: (const char*, signed int) => signed int 		if !def(OPENSSL_SYS_VOS)		at :-1:-1
	RAND_egd_bytes: (const char*, signed int) => signed int 		if def(OPENSSL_SYS_VOS)		at :-1:-1
	RAND_file_name: (char*, unsigned long) => const char* 		if True		at :-1:-1
	RAND_get_rand_method: (void) => const struct rand_meth_st* 		if True		at :-1:-1
	RAND_load_file: (const char*, signed long) => signed int 		if True		at :-1:-1
	RAND_poll: (void) => signed int 		if ((def(OPENSSL_NO_DES)&((def(USE_MD5_RAND)&!def(OPENSSL_SYS_VOS))|(!def(USE_MD5_RAND)&((def(USE_SHA1_RAND)&!def(OPENSSL_SYS_VOS))|(!def(OPENSSL_SYS_VOS)&!def(USE_SHA1_RAND)&!def(USE_MDC2_RAND))))))|(!def(OPENSSL_NO_DES)&!def(OPENSSL_SYS_VOS)))		at :-1:-1
	RAND_poll: (void) => signed int 		if ((def(OPENSSL_NO_DES)&((def(USE_MD5_RAND)&(def(OPENSSL_SYS_VOS_HPPA)|def(OPENSSL_SYS_VOS_IA32))&def(OPENSSL_SYS_VOS))|(!def(USE_MD5_RAND)&((def(USE_SHA1_RAND)&(def(OPENSSL_SYS_VOS_HPPA)|def(OPENSSL_SYS_VOS_IA32))&def(OPENSSL_SYS_VOS))|(!def(USE_MDC2_RAND)&!def(USE_SHA1_RAND)&(def(OPENSSL_SYS_VOS_HPPA)|def(OPENSSL_SYS_VOS_IA32))&def(OPENSSL_SYS_VOS))))))|(!def(OPENSSL_NO_DES)&(def(OPENSSL_SYS_VOS_HPPA)|def(OPENSSL_SYS_VOS_IA32))&def(OPENSSL_SYS_VOS)))		at :-1:-1
	RAND_pseudo_bytes: (unsigned char*, signed int) => signed int 		if True		at :-1:-1
	RAND_query_egd_bytes: (const char*, unsigned char*, signed int) => signed int 		if !def(OPENSSL_SYS_VOS)		at :-1:-1
	RAND_query_egd_bytes: (const char*, unsigned char*, signed int) => signed int 		if def(OPENSSL_SYS_VOS)		at :-1:-1
	RAND_seed: (const void*, signed int) => void 		if True		at :-1:-1
	RAND_set_rand_method: (const struct rand_meth_st*) => signed int 		if True		at :-1:-1
	RAND_status: (void) => signed int 		if True		at :-1:-1
	RAND_write_file: (const char*) => signed int 		if True		at :-1:-1
	RC2_cbc_encrypt: (const unsigned char*, unsigned char*, signed long, struct rc2_key_st*, unsigned char*, signed int) => void 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	RC2_cfb64_encrypt: (const unsigned char*, unsigned char*, signed long, struct rc2_key_st*, unsigned char*, signed int*, signed int) => void 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	RC2_decrypt: (unsigned long*, struct rc2_key_st*) => void 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	RC2_ecb_encrypt: (const unsigned char*, unsigned char*, struct rc2_key_st*, signed int) => void 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	RC2_encrypt: (unsigned long*, struct rc2_key_st*) => void 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	RC2_ofb64_encrypt: (const unsigned char*, unsigned char*, signed long, struct rc2_key_st*, unsigned char*, signed int*) => void 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	RC2_set_key: (struct rc2_key_st*, signed int, const unsigned char*, signed int) => void 		if !def(OPENSSL_NO_RC2)		at :-1:-1
	RC4_set_key: (struct rc4_key_st*, signed int, const unsigned char*) => void 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	RIPEMD160: (const unsigned char*, unsigned long, unsigned char*) => unsigned char* 		if !def(OPENSSL_NO_RIPEMD)		at :-1:-1
	RIPEMD160_Final: (unsigned char*, struct RIPEMD160state_st*) => signed int 		if !def(OPENSSL_NO_RIPEMD)		at :-1:-1
	RIPEMD160_Init: (struct RIPEMD160state_st*) => signed int 		if !def(OPENSSL_NO_RIPEMD)		at :-1:-1
	RIPEMD160_Transform: (struct RIPEMD160state_st*, const unsigned char*) => void 		if !def(OPENSSL_NO_RIPEMD)		at :-1:-1
	RIPEMD160_Update: (struct RIPEMD160state_st*, const void*, unsigned long) => signed int 		if !def(OPENSSL_NO_RIPEMD)		at :-1:-1
	RSAPrivateKey_dup: (struct rsa_st*) => struct rsa_st* 		if True		at :-1:-1
	RSAPublicKey_dup: (struct rsa_st*) => struct rsa_st* 		if True		at :-1:-1
	RSA_PKCS1_SSLeay: (void) => const struct rsa_meth_st* 		if !def(RSA_NULL)		at :-1:-1
	RSA_PSS_PARAMS_free: (struct rsa_pss_params_st*) => void 		if True		at :-1:-1
	RSA_PSS_PARAMS_new: (void) => struct rsa_pss_params_st* 		if True		at :-1:-1
	RSA_X931_hash_id: (signed int) => signed int 		if True		at :-1:-1
	RSA_blinding_off: (struct rsa_st*) => void 		if True		at :-1:-1
	RSA_blinding_on: (struct rsa_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	RSA_check_key: (const struct rsa_st*) => signed int 		if True		at :-1:-1
	RSA_flags: (const struct rsa_st*) => signed int 		if True		at :-1:-1
	RSA_free: (struct rsa_st*) => void 		if True		at :-1:-1
	RSA_generate_key: (signed int, unsigned long, (signed int, signed int, void*) => void*, void*) => struct rsa_st* 		if True		at :-1:-1
	RSA_generate_key_ex: (struct rsa_st*, signed int, struct bignum_st*, struct bn_gencb_st*) => signed int 		if True		at :-1:-1
	RSA_get_default_method: (void) => const struct rsa_meth_st* 		if True		at :-1:-1
	RSA_get_ex_data: (const struct rsa_st*, signed int) => void* 		if True		at :-1:-1
	RSA_get_ex_new_index: (signed long, void*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => signed int*, (struct crypto_ex_data_st*, struct crypto_ex_data_st*, void*, signed int, signed long, void*) => signed int*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => void*) => signed int 		if True		at :-1:-1
	RSA_get_method: (const struct rsa_st*) => const struct rsa_meth_st* 		if True		at :-1:-1
	RSA_memory_lock: (struct rsa_st*) => signed int 		if True		at :-1:-1
	RSA_new: (void) => struct rsa_st* 		if True		at :-1:-1
	RSA_new_method: (struct engine_st*) => struct rsa_st* 		if True		at :-1:-1
	RSA_null_method: (void) => const struct rsa_meth_st* 		if True		at :-1:-1
	RSA_padding_add_PKCS1_OAEP: (unsigned char*, signed int, const unsigned char*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_add_PKCS1_PSS: (struct rsa_st*, unsigned char*, const unsigned char*, const struct env_md_st*, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_add_PKCS1_PSS_mgf1: (struct rsa_st*, unsigned char*, const unsigned char*, const struct env_md_st*, const struct env_md_st*, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_add_PKCS1_type_1: (unsigned char*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_add_PKCS1_type_2: (unsigned char*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_add_SSLv23: (unsigned char*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_add_X931: (unsigned char*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_add_none: (unsigned char*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_check_PKCS1_OAEP: (unsigned char*, signed int, const unsigned char*, signed int, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_check_PKCS1_type_1: (unsigned char*, signed int, const unsigned char*, signed int, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_check_PKCS1_type_2: (unsigned char*, signed int, const unsigned char*, signed int, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_check_SSLv23: (unsigned char*, signed int, const unsigned char*, signed int, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_check_X931: (unsigned char*, signed int, const unsigned char*, signed int, signed int) => signed int 		if True		at :-1:-1
	RSA_padding_check_none: (unsigned char*, signed int, const unsigned char*, signed int, signed int) => signed int 		if True		at :-1:-1
	RSA_print: (struct bio_st*, const struct rsa_st*, signed int) => signed int 		if True		at :-1:-1
	RSA_print_fp: (struct _IO_FILE*, const struct rsa_st*, signed int) => signed int 		if True		at :-1:-1
	RSA_private_decrypt: (signed int, const unsigned char*, unsigned char*, struct rsa_st*, signed int) => signed int 		if True		at :-1:-1
	RSA_private_encrypt: (signed int, const unsigned char*, unsigned char*, struct rsa_st*, signed int) => signed int 		if True		at :-1:-1
	RSA_public_decrypt: (signed int, const unsigned char*, unsigned char*, struct rsa_st*, signed int) => signed int 		if True		at :-1:-1
	RSA_public_encrypt: (signed int, const unsigned char*, unsigned char*, struct rsa_st*, signed int) => signed int 		if True		at :-1:-1
	RSA_set_default_method: (const struct rsa_meth_st*) => void 		if True		at :-1:-1
	RSA_set_ex_data: (struct rsa_st*, signed int, void*) => signed int 		if True		at :-1:-1
	RSA_set_method: (struct rsa_st*, const struct rsa_meth_st*) => signed int 		if True		at :-1:-1
	RSA_setup_blinding: (struct rsa_st*, struct bignum_ctx*) => struct bn_blinding_st* 		if True		at :-1:-1
	RSA_sign: (signed int, const unsigned char*, unsigned int, unsigned char*, unsigned int*, struct rsa_st*) => signed int 		if True		at :-1:-1
	RSA_sign_ASN1_OCTET_STRING: (signed int, const unsigned char*, unsigned int, unsigned char*, unsigned int*, struct rsa_st*) => signed int 		if True		at :-1:-1
	RSA_size: (const struct rsa_st*) => signed int 		if True		at :-1:-1
	RSA_up_ref: (struct rsa_st*) => signed int 		if True		at :-1:-1
	RSA_verify: (signed int, const unsigned char*, unsigned int, const unsigned char*, unsigned int, struct rsa_st*) => signed int 		if True		at :-1:-1
	RSA_verify_ASN1_OCTET_STRING: (signed int, const unsigned char*, unsigned int, unsigned char*, unsigned int, struct rsa_st*) => signed int 		if True		at :-1:-1
	RSA_verify_PKCS1_PSS: (struct rsa_st*, const unsigned char*, const struct env_md_st*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	RSA_verify_PKCS1_PSS_mgf1: (struct rsa_st*, const unsigned char*, const struct env_md_st*, const struct env_md_st*, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	SEED_cbc_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct seed_key_st*, unsigned char[], signed int) => void 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	SEED_cfb128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct seed_key_st*, unsigned char[], signed int*, signed int) => void 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	SEED_decrypt: (const unsigned char[], unsigned char[], const struct seed_key_st*) => void 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	SEED_ecb_encrypt: (const unsigned char*, unsigned char*, const struct seed_key_st*, signed int) => void 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	SEED_encrypt: (const unsigned char[], unsigned char[], const struct seed_key_st*) => void 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	SEED_ofb128_encrypt: (const unsigned char*, unsigned char*, unsigned long, const struct seed_key_st*, unsigned char[], signed int*) => void 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	SEED_set_key: (const unsigned char[], struct seed_key_st*) => void 		if !def(OPENSSL_NO_SEED)		at :-1:-1
	SHA1: (const unsigned char*, unsigned long, unsigned char*) => unsigned char* 		if True		at :-1:-1
	SHA1_Final: (unsigned char*, struct SHAstate_st*) => signed int 		if True		at :-1:-1
	SHA1_Init: (struct SHAstate_st*) => signed int 		if True		at :-1:-1
	SHA1_Transform: (struct SHAstate_st*, const unsigned char*) => void 		if True		at :-1:-1
	SHA1_Update: (struct SHAstate_st*, const void*, unsigned long) => signed int 		if True		at :-1:-1
	SHA224: (const unsigned char*, unsigned long, unsigned char*) => unsigned char* 		if True		at :-1:-1
	SHA224_Final: (unsigned char*, struct SHA256state_st*) => signed int 		if True		at :-1:-1
	SHA224_Init: (struct SHA256state_st*) => signed int 		if True		at :-1:-1
	SHA224_Update: (struct SHA256state_st*, const void*, unsigned long) => signed int 		if True		at :-1:-1
	SHA256: (const unsigned char*, unsigned long, unsigned char*) => unsigned char* 		if True		at :-1:-1
	SHA256_Final: (unsigned char*, struct SHA256state_st*) => signed int 		if True		at :-1:-1
	SHA256_Init: (struct SHA256state_st*) => signed int 		if True		at :-1:-1
	SHA256_Transform: (struct SHA256state_st*, const unsigned char*) => void 		if True		at :-1:-1
	SHA256_Update: (struct SHA256state_st*, const void*, unsigned long) => signed int 		if True		at :-1:-1
	SHA384: (const unsigned char*, unsigned long, unsigned char*) => unsigned char* 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	SHA384_Final: (unsigned char*, struct SHA512state_st*) => signed int 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	SHA384_Init: (struct SHA512state_st*) => signed int 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	SHA384_Update: (struct SHA512state_st*, const void*, unsigned long) => signed int 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	SHA512: (const unsigned char*, unsigned long, unsigned char*) => unsigned char* 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	SHA512_Final: (unsigned char*, struct SHA512state_st*) => signed int 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	SHA512_Init: (struct SHA512state_st*) => signed int 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	SHA512_Transform: (struct SHA512state_st*, const unsigned char*) => void 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	SHA512_Update: (struct SHA512state_st*, const void*, unsigned long) => signed int 		if !def(OPENSSL_NO_SHA512)		at :-1:-1
	SHA: (const unsigned char*, unsigned long, unsigned char*) => unsigned char* 		if !def(OPENSSL_NO_SHA0)		at :-1:-1
	SHA_Final: (unsigned char*, struct SHAstate_st*) => signed int 		if !def(OPENSSL_NO_SHA0)		at :-1:-1
	SHA_Init: (struct SHAstate_st*) => signed int 		if !def(OPENSSL_NO_SHA0)		at :-1:-1
	SHA_Transform: (struct SHAstate_st*, const unsigned char*) => void 		if !def(OPENSSL_NO_SHA0)		at :-1:-1
	SHA_Update: (struct SHAstate_st*, const void*, unsigned long) => signed int 		if !def(OPENSSL_NO_SHA0)		at :-1:-1
	SMIME_crlf_copy: (struct bio_st*, struct bio_st*, signed int) => signed int 		if True		at :-1:-1
	SMIME_read_ASN1: (struct bio_st*, struct bio_st**, const struct ASN1_ITEM_st*) => struct ASN1_VALUE_st* 		if True		at :-1:-1
	SMIME_read_CMS: (struct bio_st*, struct bio_st**) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	SMIME_read_PKCS7: (struct bio_st*, struct bio_st**) => struct pkcs7_st* 		if True		at :-1:-1
	SMIME_text: (struct bio_st*, struct bio_st*) => signed int 		if True		at :-1:-1
	SMIME_write_ASN1: (struct bio_st*, struct ASN1_VALUE_st*, struct bio_st*, signed int, signed int, signed int, struct stack_st_X509_ALGOR*, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	SMIME_write_CMS: (struct bio_st*, struct CMS_ContentInfo_st*, struct bio_st*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	SMIME_write_PKCS7: (struct bio_st*, struct pkcs7_st*, struct bio_st*, signed int) => signed int 		if True		at :-1:-1
	SRP_Calc_A: (struct bignum_st*, struct bignum_st*, struct bignum_st*) => struct bignum_st* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_Calc_B: (struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*) => struct bignum_st* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_Calc_client_key: (struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*) => struct bignum_st* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_Calc_server_key: (struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*) => struct bignum_st* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_Calc_u: (struct bignum_st*, struct bignum_st*, struct bignum_st*) => struct bignum_st* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_Calc_x: (struct bignum_st*, const char*, const char*) => struct bignum_st* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_VBASE_free: (struct SRP_VBASE_st*) => signed int 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_VBASE_get_by_user: (struct SRP_VBASE_st*, char*) => struct SRP_user_pwd_st* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_VBASE_init: (struct SRP_VBASE_st*, char*) => signed int 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_VBASE_new: (char*) => struct SRP_VBASE_st* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_Verify_A_mod_N: (struct bignum_st*, struct bignum_st*) => signed int 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_Verify_B_mod_N: (struct bignum_st*, struct bignum_st*) => signed int 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_check_known_gN_param: (struct bignum_st*, struct bignum_st*) => char* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_create_verifier: (const char*, const char*, char**, char**, const char*, const char*) => char* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_create_verifier_BN: (const char*, const char*, struct bignum_st**, struct bignum_st**, struct bignum_st*, struct bignum_st*) => signed int 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SRP_get_default_gN: (const char*) => struct SRP_gN_st* 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	SSLeay: (void) => unsigned long 		if True		at :-1:-1
	SSLeay_version: (signed int) => const char* 		if True		at :-1:-1
	SXNETID_free: (struct SXNET_ID_st*) => void 		if True		at :-1:-1
	SXNETID_new: (void) => struct SXNET_ID_st* 		if True		at :-1:-1
	SXNET_add_id_INTEGER: (struct SXNET_st**, struct asn1_string_st*, char*, signed int) => signed int 		if True		at :-1:-1
	SXNET_add_id_asc: (struct SXNET_st**, char*, char*, signed int) => signed int 		if True		at :-1:-1
	SXNET_add_id_ulong: (struct SXNET_st**, unsigned long, char*, signed int) => signed int 		if True		at :-1:-1
	SXNET_free: (struct SXNET_st*) => void 		if True		at :-1:-1
	SXNET_get_id_INTEGER: (struct SXNET_st*, struct asn1_string_st*) => struct asn1_string_st* 		if True		at :-1:-1
	SXNET_get_id_asc: (struct SXNET_st*, char*) => struct asn1_string_st* 		if True		at :-1:-1
	SXNET_get_id_ulong: (struct SXNET_st*, unsigned long) => struct asn1_string_st* 		if True		at :-1:-1
	SXNET_new: (void) => struct SXNET_st* 		if True		at :-1:-1
	TS_ACCURACY_dup: (struct TS_accuracy_st*) => struct TS_accuracy_st* 		if True		at :-1:-1
	TS_ACCURACY_free: (struct TS_accuracy_st*) => void 		if True		at :-1:-1
	TS_ACCURACY_get_micros: (const struct TS_accuracy_st*) => const struct asn1_string_st* 		if True		at :-1:-1
	TS_ACCURACY_get_millis: (const struct TS_accuracy_st*) => const struct asn1_string_st* 		if True		at :-1:-1
	TS_ACCURACY_get_seconds: (const struct TS_accuracy_st*) => const struct asn1_string_st* 		if True		at :-1:-1
	TS_ACCURACY_new: (void) => struct TS_accuracy_st* 		if True		at :-1:-1
	TS_ACCURACY_set_micros: (struct TS_accuracy_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	TS_ACCURACY_set_millis: (struct TS_accuracy_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	TS_ACCURACY_set_seconds: (struct TS_accuracy_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	TS_ASN1_INTEGER_print_bio: (struct bio_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	TS_CONF_get_tsa_section: (struct conf_st*, const char*) => const char* 		if True		at :-1:-1
	TS_CONF_load_cert: (const char*) => struct x509_st* 		if True		at :-1:-1
	TS_CONF_load_certs: (const char*) => struct stack_st_X509* 		if True		at :-1:-1
	TS_CONF_load_key: (const char*, const char*) => struct evp_pkey_st* 		if True		at :-1:-1
	TS_CONF_set_accuracy: (struct conf_st*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_certs: (struct conf_st*, const char*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_clock_precision_digits: (struct conf_st*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_def_policy: (struct conf_st*, const char*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_digests: (struct conf_st*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_ess_cert_id_chain: (struct conf_st*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_ordering: (struct conf_st*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_policies: (struct conf_st*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_serial: (struct conf_st*, const char*, (struct TS_resp_ctx*, void*) => struct asn1_string_st**, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_signer_cert: (struct conf_st*, const char*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_signer_key: (struct conf_st*, const char*, const char*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_CONF_set_tsa_name: (struct conf_st*, const char*, struct TS_resp_ctx*) => signed int 		if True		at :-1:-1
	TS_MSG_IMPRINT_dup: (struct TS_msg_imprint_st*) => struct TS_msg_imprint_st* 		if True		at :-1:-1
	TS_MSG_IMPRINT_free: (struct TS_msg_imprint_st*) => void 		if True		at :-1:-1
	TS_MSG_IMPRINT_get_algo: (struct TS_msg_imprint_st*) => struct X509_algor_st* 		if True		at :-1:-1
	TS_MSG_IMPRINT_get_msg: (struct TS_msg_imprint_st*) => struct asn1_string_st* 		if True		at :-1:-1
	TS_MSG_IMPRINT_new: (void) => struct TS_msg_imprint_st* 		if True		at :-1:-1
	TS_MSG_IMPRINT_print_bio: (struct bio_st*, struct TS_msg_imprint_st*) => signed int 		if True		at :-1:-1
	TS_MSG_IMPRINT_set_algo: (struct TS_msg_imprint_st*, struct X509_algor_st*) => signed int 		if True		at :-1:-1
	TS_MSG_IMPRINT_set_msg: (struct TS_msg_imprint_st*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	TS_OBJ_print_bio: (struct bio_st*, const struct asn1_object_st*) => signed int 		if True		at :-1:-1
	TS_REQ_add_ext: (struct TS_req_st*, struct X509_extension_st*, signed int) => signed int 		if True		at :-1:-1
	TS_REQ_delete_ext: (struct TS_req_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	TS_REQ_dup: (struct TS_req_st*) => struct TS_req_st* 		if True		at :-1:-1
	TS_REQ_ext_free: (struct TS_req_st*) => void 		if True		at :-1:-1
	TS_REQ_free: (struct TS_req_st*) => void 		if True		at :-1:-1
	TS_REQ_get_cert_req: (const struct TS_req_st*) => signed int 		if True		at :-1:-1
	TS_REQ_get_ext: (struct TS_req_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	TS_REQ_get_ext_by_NID: (struct TS_req_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	TS_REQ_get_ext_by_OBJ: (struct TS_req_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	TS_REQ_get_ext_by_critical: (struct TS_req_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	TS_REQ_get_ext_count: (struct TS_req_st*) => signed int 		if True		at :-1:-1
	TS_REQ_get_ext_d2i: (struct TS_req_st*, signed int, signed int*, signed int*) => void* 		if True		at :-1:-1
	TS_REQ_get_exts: (struct TS_req_st*) => struct stack_st_X509_EXTENSION* 		if True		at :-1:-1
	TS_REQ_get_msg_imprint: (struct TS_req_st*) => struct TS_msg_imprint_st* 		if True		at :-1:-1
	TS_REQ_get_nonce: (const struct TS_req_st*) => const struct asn1_string_st* 		if True		at :-1:-1
	TS_REQ_get_policy_id: (struct TS_req_st*) => struct asn1_object_st* 		if True		at :-1:-1
	TS_REQ_get_version: (const struct TS_req_st*) => signed long 		if True		at :-1:-1
	TS_REQ_new: (void) => struct TS_req_st* 		if True		at :-1:-1
	TS_REQ_print_bio: (struct bio_st*, struct TS_req_st*) => signed int 		if True		at :-1:-1
	TS_REQ_set_cert_req: (struct TS_req_st*, signed int) => signed int 		if True		at :-1:-1
	TS_REQ_set_msg_imprint: (struct TS_req_st*, struct TS_msg_imprint_st*) => signed int 		if True		at :-1:-1
	TS_REQ_set_nonce: (struct TS_req_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	TS_REQ_set_policy_id: (struct TS_req_st*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	TS_REQ_set_version: (struct TS_req_st*, signed long) => signed int 		if True		at :-1:-1
	TS_REQ_to_TS_VERIFY_CTX: (struct TS_req_st*, struct TS_verify_ctx*) => struct TS_verify_ctx* 		if True		at :-1:-1
	TS_RESP_CTX_add_failure_info: (struct TS_resp_ctx*, signed int) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_add_flags: (struct TS_resp_ctx*, signed int) => void 		if True		at :-1:-1
	TS_RESP_CTX_add_md: (struct TS_resp_ctx*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_add_policy: (struct TS_resp_ctx*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_free: (struct TS_resp_ctx*) => void 		if True		at :-1:-1
	TS_RESP_CTX_get_request: (struct TS_resp_ctx*) => struct TS_req_st* 		if True		at :-1:-1
	TS_RESP_CTX_get_tst_info: (struct TS_resp_ctx*) => struct TS_tst_info_st* 		if True		at :-1:-1
	TS_RESP_CTX_new: (void) => struct TS_resp_ctx* 		if True		at :-1:-1
	TS_RESP_CTX_set_accuracy: (struct TS_resp_ctx*, signed int, signed int, signed int) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_set_certs: (struct TS_resp_ctx*, struct stack_st_X509*) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_set_clock_precision_digits: (struct TS_resp_ctx*, unsigned int) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_set_def_policy: (struct TS_resp_ctx*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_set_extension_cb: (struct TS_resp_ctx*, (struct TS_resp_ctx*, struct X509_extension_st*, void*) => signed int*, void*) => void 		if True		at :-1:-1
	TS_RESP_CTX_set_serial_cb: (struct TS_resp_ctx*, (struct TS_resp_ctx*, void*) => struct asn1_string_st**, void*) => void 		if True		at :-1:-1
	TS_RESP_CTX_set_signer_cert: (struct TS_resp_ctx*, struct x509_st*) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_set_signer_key: (struct TS_resp_ctx*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_set_status_info: (struct TS_resp_ctx*, signed int, const char*) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_set_status_info_cond: (struct TS_resp_ctx*, signed int, const char*) => signed int 		if True		at :-1:-1
	TS_RESP_CTX_set_time_cb: (struct TS_resp_ctx*, (struct TS_resp_ctx*, void*, signed long*, signed long*) => signed int*, void*) => void 		if True		at :-1:-1
	TS_RESP_create_response: (struct TS_resp_ctx*, struct bio_st*) => struct TS_resp_st* 		if True		at :-1:-1
	TS_RESP_dup: (struct TS_resp_st*) => struct TS_resp_st* 		if True		at :-1:-1
	TS_RESP_free: (struct TS_resp_st*) => void 		if True		at :-1:-1
	TS_RESP_get_status_info: (struct TS_resp_st*) => struct TS_status_info_st* 		if True		at :-1:-1
	TS_RESP_get_token: (struct TS_resp_st*) => struct pkcs7_st* 		if True		at :-1:-1
	TS_RESP_get_tst_info: (struct TS_resp_st*) => struct TS_tst_info_st* 		if True		at :-1:-1
	TS_RESP_new: (void) => struct TS_resp_st* 		if True		at :-1:-1
	TS_RESP_print_bio: (struct bio_st*, struct TS_resp_st*) => signed int 		if True		at :-1:-1
	TS_RESP_set_status_info: (struct TS_resp_st*, struct TS_status_info_st*) => signed int 		if True		at :-1:-1
	TS_RESP_set_tst_info: (struct TS_resp_st*, struct pkcs7_st*, struct TS_tst_info_st*) => void 		if True		at :-1:-1
	TS_RESP_verify_response: (struct TS_verify_ctx*, struct TS_resp_st*) => signed int 		if True		at :-1:-1
	TS_RESP_verify_signature: (struct pkcs7_st*, struct stack_st_X509*, struct x509_store_st*, struct x509_st**) => signed int 		if True		at :-1:-1
	TS_RESP_verify_token: (struct TS_verify_ctx*, struct pkcs7_st*) => signed int 		if True		at :-1:-1
	TS_STATUS_INFO_dup: (struct TS_status_info_st*) => struct TS_status_info_st* 		if True		at :-1:-1
	TS_STATUS_INFO_free: (struct TS_status_info_st*) => void 		if True		at :-1:-1
	TS_STATUS_INFO_new: (void) => struct TS_status_info_st* 		if True		at :-1:-1
	TS_STATUS_INFO_print_bio: (struct bio_st*, struct TS_status_info_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_add_ext: (struct TS_tst_info_st*, struct X509_extension_st*, signed int) => signed int 		if True		at :-1:-1
	TS_TST_INFO_delete_ext: (struct TS_tst_info_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	TS_TST_INFO_dup: (struct TS_tst_info_st*) => struct TS_tst_info_st* 		if True		at :-1:-1
	TS_TST_INFO_ext_free: (struct TS_tst_info_st*) => void 		if True		at :-1:-1
	TS_TST_INFO_free: (struct TS_tst_info_st*) => void 		if True		at :-1:-1
	TS_TST_INFO_get_accuracy: (struct TS_tst_info_st*) => struct TS_accuracy_st* 		if True		at :-1:-1
	TS_TST_INFO_get_ext: (struct TS_tst_info_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	TS_TST_INFO_get_ext_by_NID: (struct TS_tst_info_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	TS_TST_INFO_get_ext_by_OBJ: (struct TS_tst_info_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	TS_TST_INFO_get_ext_by_critical: (struct TS_tst_info_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	TS_TST_INFO_get_ext_count: (struct TS_tst_info_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_get_ext_d2i: (struct TS_tst_info_st*, signed int, signed int*, signed int*) => void* 		if True		at :-1:-1
	TS_TST_INFO_get_exts: (struct TS_tst_info_st*) => struct stack_st_X509_EXTENSION* 		if True		at :-1:-1
	TS_TST_INFO_get_msg_imprint: (struct TS_tst_info_st*) => struct TS_msg_imprint_st* 		if True		at :-1:-1
	TS_TST_INFO_get_nonce: (const struct TS_tst_info_st*) => const struct asn1_string_st* 		if True		at :-1:-1
	TS_TST_INFO_get_ordering: (const struct TS_tst_info_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_get_policy_id: (struct TS_tst_info_st*) => struct asn1_object_st* 		if True		at :-1:-1
	TS_TST_INFO_get_serial: (const struct TS_tst_info_st*) => const struct asn1_string_st* 		if True		at :-1:-1
	TS_TST_INFO_get_time: (const struct TS_tst_info_st*) => const struct asn1_string_st* 		if True		at :-1:-1
	TS_TST_INFO_get_tsa: (struct TS_tst_info_st*) => struct GENERAL_NAME_st* 		if True		at :-1:-1
	TS_TST_INFO_get_version: (const struct TS_tst_info_st*) => signed long 		if True		at :-1:-1
	TS_TST_INFO_new: (void) => struct TS_tst_info_st* 		if True		at :-1:-1
	TS_TST_INFO_print_bio: (struct bio_st*, struct TS_tst_info_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_set_accuracy: (struct TS_tst_info_st*, struct TS_accuracy_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_set_msg_imprint: (struct TS_tst_info_st*, struct TS_msg_imprint_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_set_nonce: (struct TS_tst_info_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_set_ordering: (struct TS_tst_info_st*, signed int) => signed int 		if True		at :-1:-1
	TS_TST_INFO_set_policy_id: (struct TS_tst_info_st*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_set_serial: (struct TS_tst_info_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_set_time: (struct TS_tst_info_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_set_tsa: (struct TS_tst_info_st*, struct GENERAL_NAME_st*) => signed int 		if True		at :-1:-1
	TS_TST_INFO_set_version: (struct TS_tst_info_st*, signed long) => signed int 		if True		at :-1:-1
	TS_VERIFY_CTX_cleanup: (struct TS_verify_ctx*) => void 		if True		at :-1:-1
	TS_VERIFY_CTX_free: (struct TS_verify_ctx*) => void 		if True		at :-1:-1
	TS_VERIFY_CTX_init: (struct TS_verify_ctx*) => void 		if True		at :-1:-1
	TS_VERIFY_CTX_new: (void) => struct TS_verify_ctx* 		if True		at :-1:-1
	TS_X509_ALGOR_print_bio: (struct bio_st*, const struct X509_algor_st*) => signed int 		if True		at :-1:-1
	TS_ext_print_bio: (struct bio_st*, const struct stack_st_X509_EXTENSION*) => signed int 		if True		at :-1:-1
	TXT_DB_create_index: (struct txt_db_st*, signed int, (char**) => signed int*, (const void*) => unsigned long*, (const void*, const void*) => signed int*) => signed int 		if True		at :-1:-1
	TXT_DB_free: (struct txt_db_st*) => void 		if True		at :-1:-1
	TXT_DB_get_by_index: (struct txt_db_st*, signed int, char**) => char** 		if True		at :-1:-1
	TXT_DB_insert: (struct txt_db_st*, char**) => signed int 		if True		at :-1:-1
	TXT_DB_read: (struct bio_st*, signed int) => struct txt_db_st* 		if True		at :-1:-1
	TXT_DB_write: (struct bio_st*, struct txt_db_st*) => signed long 		if True		at :-1:-1
	UI_OpenSSL: (void) => struct ui_method_st* 		if True		at :-1:-1
	UI_UTIL_read_pw: (char*, char*, signed int, const char*, signed int) => signed int 		if True		at :-1:-1
	UI_UTIL_read_pw_string: (char*, signed int, const char*, signed int) => signed int 		if True		at :-1:-1
	UI_add_error_string: (struct ui_st*, const char*) => signed int 		if True		at :-1:-1
	UI_add_info_string: (struct ui_st*, const char*) => signed int 		if True		at :-1:-1
	UI_add_input_boolean: (struct ui_st*, const char*, const char*, const char*, const char*, signed int, char*) => signed int 		if True		at :-1:-1
	UI_add_input_string: (struct ui_st*, const char*, signed int, char*, signed int, signed int) => signed int 		if True		at :-1:-1
	UI_add_user_data: (struct ui_st*, void*) => void* 		if True		at :-1:-1
	UI_add_verify_string: (struct ui_st*, const char*, signed int, char*, signed int, signed int, const char*) => signed int 		if True		at :-1:-1
	UI_construct_prompt: (struct ui_st*, const char*, const char*) => char* 		if True		at :-1:-1
	UI_create_method: (char*) => struct ui_method_st* 		if True		at :-1:-1
	UI_ctrl: (struct ui_st*, signed int, signed long, void*, (void) => void*) => signed int 		if True		at :-1:-1
	UI_destroy_method: (struct ui_method_st*) => void 		if True		at :-1:-1
	UI_dup_error_string: (struct ui_st*, const char*) => signed int 		if True		at :-1:-1
	UI_dup_info_string: (struct ui_st*, const char*) => signed int 		if True		at :-1:-1
	UI_dup_input_boolean: (struct ui_st*, const char*, const char*, const char*, const char*, signed int, char*) => signed int 		if True		at :-1:-1
	UI_dup_input_string: (struct ui_st*, const char*, signed int, char*, signed int, signed int) => signed int 		if True		at :-1:-1
	UI_dup_verify_string: (struct ui_st*, const char*, signed int, char*, signed int, signed int, const char*) => signed int 		if True		at :-1:-1
	UI_free: (struct ui_st*) => void 		if True		at :-1:-1
	UI_get0_action_string: (struct ui_string_st*) => const char* 		if True		at :-1:-1
	UI_get0_output_string: (struct ui_string_st*) => const char* 		if True		at :-1:-1
	UI_get0_result: (struct ui_st*, signed int) => const char* 		if True		at :-1:-1
	UI_get0_result_string: (struct ui_string_st*) => const char* 		if True		at :-1:-1
	UI_get0_test_string: (struct ui_string_st*) => const char* 		if True		at :-1:-1
	UI_get0_user_data: (struct ui_st*) => void* 		if True		at :-1:-1
	UI_get_default_method: (void) => const struct ui_method_st* 		if True		at :-1:-1
	UI_get_ex_data: (struct ui_st*, signed int) => void* 		if True		at :-1:-1
	UI_get_ex_new_index: (signed long, void*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => signed int*, (struct crypto_ex_data_st*, struct crypto_ex_data_st*, void*, signed int, signed long, void*) => signed int*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => void*) => signed int 		if True		at :-1:-1
	UI_get_input_flags: (struct ui_string_st*) => signed int 		if True		at :-1:-1
	UI_get_method: (struct ui_st*) => const struct ui_method_st* 		if True		at :-1:-1
	UI_get_result_maxsize: (struct ui_string_st*) => signed int 		if True		at :-1:-1
	UI_get_result_minsize: (struct ui_string_st*) => signed int 		if True		at :-1:-1
	UI_get_string_type: (struct ui_string_st*) => unsigned int 		if True		at :-1:-1
	UI_method_get_closer: (struct ui_method_st*) => (struct ui_st*) => signed int* 		if True		at :-1:-1
	UI_method_get_flusher: (struct ui_method_st*) => (struct ui_st*) => signed int* 		if True		at :-1:-1
	UI_method_get_opener: (struct ui_method_st*) => (struct ui_st*) => signed int* 		if True		at :-1:-1
	UI_method_get_prompt_constructor: (struct ui_method_st*) => (struct ui_st*, const char*, const char*) => char** 		if True		at :-1:-1
	UI_method_get_reader: (struct ui_method_st*) => (struct ui_st*, struct ui_string_st*) => signed int* 		if True		at :-1:-1
	UI_method_get_writer: (struct ui_method_st*) => (struct ui_st*, struct ui_string_st*) => signed int* 		if True		at :-1:-1
	UI_method_set_closer: (struct ui_method_st*, (struct ui_st*) => signed int*) => signed int 		if True		at :-1:-1
	UI_method_set_flusher: (struct ui_method_st*, (struct ui_st*) => signed int*) => signed int 		if True		at :-1:-1
	UI_method_set_opener: (struct ui_method_st*, (struct ui_st*) => signed int*) => signed int 		if True		at :-1:-1
	UI_method_set_prompt_constructor: (struct ui_method_st*, (struct ui_st*, const char*, const char*) => char**) => signed int 		if True		at :-1:-1
	UI_method_set_reader: (struct ui_method_st*, (struct ui_st*, struct ui_string_st*) => signed int*) => signed int 		if True		at :-1:-1
	UI_method_set_writer: (struct ui_method_st*, (struct ui_st*, struct ui_string_st*) => signed int*) => signed int 		if True		at :-1:-1
	UI_new: (void) => struct ui_st* 		if True		at :-1:-1
	UI_new_method: (const struct ui_method_st*) => struct ui_st* 		if True		at :-1:-1
	UI_process: (struct ui_st*) => signed int 		if True		at :-1:-1
	UI_set_default_method: (const struct ui_method_st*) => void 		if True		at :-1:-1
	UI_set_ex_data: (struct ui_st*, signed int, void*) => signed int 		if True		at :-1:-1
	UI_set_method: (struct ui_st*, const struct ui_method_st*) => const struct ui_method_st* 		if True		at :-1:-1
	UI_set_result: (struct ui_st*, struct ui_string_st*, const char*) => signed int 		if True		at :-1:-1
	USERNOTICE_free: (struct USERNOTICE_st*) => void 		if True		at :-1:-1
	USERNOTICE_new: (void) => struct USERNOTICE_st* 		if True		at :-1:-1
	UTF8_getc: (const unsigned char*, signed int, unsigned long*) => signed int 		if True		at :-1:-1
	UTF8_putc: (unsigned char*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	WHIRLPOOL: (const void*, unsigned long, unsigned char*) => unsigned char* 		if True		at :-1:-1
	WHIRLPOOL_BitUpdate: (struct {Map()}*, const void*, unsigned long) => void 		if True		at :-1:-1
	WHIRLPOOL_Final: (unsigned char*, struct {Map()}*) => signed int 		if True		at :-1:-1
	WHIRLPOOL_Init: (struct {Map()}*) => signed int 		if True		at :-1:-1
	WHIRLPOOL_Update: (struct {Map()}*, const void*, unsigned long) => signed int 		if True		at :-1:-1
	X509V3_EXT_CRL_add_conf: (struct lhash_st_CONF_VALUE*, struct v3_ext_ctx*, char*, struct X509_crl_st*) => signed int 		if True		at :-1:-1
	X509V3_EXT_CRL_add_nconf: (struct conf_st*, struct v3_ext_ctx*, char*, struct X509_crl_st*) => signed int 		if True		at :-1:-1
	X509V3_EXT_REQ_add_conf: (struct lhash_st_CONF_VALUE*, struct v3_ext_ctx*, char*, struct X509_req_st*) => signed int 		if True		at :-1:-1
	X509V3_EXT_REQ_add_nconf: (struct conf_st*, struct v3_ext_ctx*, char*, struct X509_req_st*) => signed int 		if True		at :-1:-1
	X509V3_EXT_add: (struct v3_ext_method*) => signed int 		if True		at :-1:-1
	X509V3_EXT_add_alias: (signed int, signed int) => signed int 		if True		at :-1:-1
	X509V3_EXT_add_conf: (struct lhash_st_CONF_VALUE*, struct v3_ext_ctx*, char*, struct x509_st*) => signed int 		if True		at :-1:-1
	X509V3_EXT_add_list: (struct v3_ext_method*) => signed int 		if True		at :-1:-1
	X509V3_EXT_add_nconf: (struct conf_st*, struct v3_ext_ctx*, char*, struct x509_st*) => signed int 		if True		at :-1:-1
	X509V3_EXT_add_nconf_sk: (struct conf_st*, struct v3_ext_ctx*, char*, struct stack_st_X509_EXTENSION**) => signed int 		if True		at :-1:-1
	X509V3_EXT_cleanup: (void) => void 		if True		at :-1:-1
	X509V3_EXT_conf: (struct lhash_st_CONF_VALUE*, struct v3_ext_ctx*, char*, char*) => struct X509_extension_st* 		if True		at :-1:-1
	X509V3_EXT_conf_nid: (struct lhash_st_CONF_VALUE*, struct v3_ext_ctx*, signed int, char*) => struct X509_extension_st* 		if True		at :-1:-1
	X509V3_EXT_d2i: (struct X509_extension_st*) => void* 		if True		at :-1:-1
	X509V3_EXT_get: (struct X509_extension_st*) => const struct v3_ext_method* 		if True		at :-1:-1
	X509V3_EXT_get_nid: (signed int) => const struct v3_ext_method* 		if True		at :-1:-1
	X509V3_EXT_i2d: (signed int, signed int, void*) => struct X509_extension_st* 		if True		at :-1:-1
	X509V3_EXT_nconf: (struct conf_st*, struct v3_ext_ctx*, char*, char*) => struct X509_extension_st* 		if True		at :-1:-1
	X509V3_EXT_nconf_nid: (struct conf_st*, struct v3_ext_ctx*, signed int, char*) => struct X509_extension_st* 		if True		at :-1:-1
	X509V3_EXT_print: (struct bio_st*, struct X509_extension_st*, unsigned long, signed int) => signed int 		if True		at :-1:-1
	X509V3_EXT_print_fp: (struct _IO_FILE*, struct X509_extension_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509V3_EXT_val_prn: (struct bio_st*, struct stack_st_CONF_VALUE*, signed int, signed int) => void 		if True		at :-1:-1
	X509V3_NAME_from_section: (struct X509_name_st*, struct stack_st_CONF_VALUE*, unsigned long) => signed int 		if True		at :-1:-1
	X509V3_add1_i2d: (struct stack_st_X509_EXTENSION**, signed int, void*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	X509V3_add_standard_extensions: (void) => signed int 		if True		at :-1:-1
	X509V3_add_value: (const char*, const char*, struct stack_st_CONF_VALUE**) => signed int 		if True		at :-1:-1
	X509V3_add_value_bool: (const char*, signed int, struct stack_st_CONF_VALUE**) => signed int 		if True		at :-1:-1
	X509V3_add_value_bool_nf: (char*, signed int, struct stack_st_CONF_VALUE**) => signed int 		if True		at :-1:-1
	X509V3_add_value_int: (const char*, struct asn1_string_st*, struct stack_st_CONF_VALUE**) => signed int 		if True		at :-1:-1
	X509V3_add_value_uchar: (const char*, const unsigned char*, struct stack_st_CONF_VALUE**) => signed int 		if True		at :-1:-1
	X509V3_conf_free: (struct {Map()}*) => void 		if True		at :-1:-1
	X509V3_extensions_print: (struct bio_st*, char*, struct stack_st_X509_EXTENSION*, unsigned long, signed int) => signed int 		if True		at :-1:-1
	X509V3_get_d2i: (struct stack_st_X509_EXTENSION*, signed int, signed int*, signed int*) => void* 		if True		at :-1:-1
	X509V3_get_section: (struct v3_ext_ctx*, char*) => struct stack_st_CONF_VALUE* 		if True		at :-1:-1
	X509V3_get_string: (struct v3_ext_ctx*, char*, char*) => char* 		if True		at :-1:-1
	X509V3_get_value_bool: (struct {Map()}*, signed int*) => signed int 		if True		at :-1:-1
	X509V3_get_value_int: (struct {Map()}*, struct asn1_string_st**) => signed int 		if True		at :-1:-1
	X509V3_parse_list: (const char*) => struct stack_st_CONF_VALUE* 		if True		at :-1:-1
	X509V3_section_free: (struct v3_ext_ctx*, struct stack_st_CONF_VALUE*) => void 		if True		at :-1:-1
	X509V3_set_conf_lhash: (struct v3_ext_ctx*, struct lhash_st_CONF_VALUE*) => void 		if True		at :-1:-1
	X509V3_set_ctx: (struct v3_ext_ctx*, struct x509_st*, struct x509_st*, struct X509_req_st*, struct X509_crl_st*, signed int) => void 		if True		at :-1:-1
	X509V3_set_nconf: (struct v3_ext_ctx*, struct conf_st*) => void 		if True		at :-1:-1
	X509V3_string_free: (struct v3_ext_ctx*, char*) => void 		if True		at :-1:-1
	X509_ALGOR_dup: (struct X509_algor_st*) => struct X509_algor_st* 		if True		at :-1:-1
	X509_ALGOR_free: (struct X509_algor_st*) => void 		if True		at :-1:-1
	X509_ALGOR_get0: (struct asn1_object_st**, signed int*, void**, struct X509_algor_st*) => void 		if True		at :-1:-1
	X509_ALGOR_new: (void) => struct X509_algor_st* 		if True		at :-1:-1
	X509_ALGOR_set0: (struct X509_algor_st*, struct asn1_object_st*, signed int, void*) => signed int 		if True		at :-1:-1
	X509_ALGOR_set_md: (struct X509_algor_st*, const struct env_md_st*) => void 		if True		at :-1:-1
	X509_ATTRIBUTE_count: (struct x509_attributes_st*) => signed int 		if True		at :-1:-1
	X509_ATTRIBUTE_create: (signed int, signed int, void*) => struct x509_attributes_st* 		if True		at :-1:-1
	X509_ATTRIBUTE_create_by_NID: (struct x509_attributes_st**, signed int, signed int, const void*, signed int) => struct x509_attributes_st* 		if True		at :-1:-1
	X509_ATTRIBUTE_create_by_OBJ: (struct x509_attributes_st**, const struct asn1_object_st*, signed int, const void*, signed int) => struct x509_attributes_st* 		if True		at :-1:-1
	X509_ATTRIBUTE_create_by_txt: (struct x509_attributes_st**, const char*, signed int, const unsigned char*, signed int) => struct x509_attributes_st* 		if True		at :-1:-1
	X509_ATTRIBUTE_dup: (struct x509_attributes_st*) => struct x509_attributes_st* 		if True		at :-1:-1
	X509_ATTRIBUTE_free: (struct x509_attributes_st*) => void 		if True		at :-1:-1
	X509_ATTRIBUTE_get0_data: (struct x509_attributes_st*, signed int, signed int, void*) => void* 		if True		at :-1:-1
	X509_ATTRIBUTE_get0_object: (struct x509_attributes_st*) => struct asn1_object_st* 		if True		at :-1:-1
	X509_ATTRIBUTE_get0_type: (struct x509_attributes_st*, signed int) => struct asn1_type_st* 		if True		at :-1:-1
	X509_ATTRIBUTE_new: (void) => struct x509_attributes_st* 		if True		at :-1:-1
	X509_ATTRIBUTE_set1_data: (struct x509_attributes_st*, signed int, const void*, signed int) => signed int 		if True		at :-1:-1
	X509_ATTRIBUTE_set1_object: (struct x509_attributes_st*, const struct asn1_object_st*) => signed int 		if True		at :-1:-1
	X509_CERT_AUX_free: (struct x509_cert_aux_st*) => void 		if True		at :-1:-1
	X509_CERT_AUX_new: (void) => struct x509_cert_aux_st* 		if True		at :-1:-1
	X509_CERT_AUX_print: (struct bio_st*, struct x509_cert_aux_st*, signed int) => signed int 		if True		at :-1:-1
	X509_CERT_PAIR_free: (struct x509_cert_pair_st*) => void 		if True		at :-1:-1
	X509_CERT_PAIR_new: (void) => struct x509_cert_pair_st* 		if True		at :-1:-1
	X509_CINF_free: (struct x509_cinf_st*) => void 		if True		at :-1:-1
	X509_CINF_new: (void) => struct x509_cinf_st* 		if True		at :-1:-1
	X509_CRL_INFO_free: (struct X509_crl_info_st*) => void 		if True		at :-1:-1
	X509_CRL_INFO_new: (void) => struct X509_crl_info_st* 		if True		at :-1:-1
	X509_CRL_METHOD_free: (struct x509_crl_method_st*) => void 		if True		at :-1:-1
	X509_CRL_METHOD_new: ((struct X509_crl_st*) => signed int*, (struct X509_crl_st*) => signed int*, (struct X509_crl_st*, struct x509_revoked_st**, struct asn1_string_st*, struct X509_name_st*) => signed int*, (struct X509_crl_st*, struct evp_pkey_st*) => signed int*) => struct x509_crl_method_st* 		if True		at :-1:-1
	X509_CRL_add0_revoked: (struct X509_crl_st*, struct x509_revoked_st*) => signed int 		if True		at :-1:-1
	X509_CRL_add1_ext_i2d: (struct X509_crl_st*, signed int, void*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	X509_CRL_add_ext: (struct X509_crl_st*, struct X509_extension_st*, signed int) => signed int 		if True		at :-1:-1
	X509_CRL_cmp: (const struct X509_crl_st*, const struct X509_crl_st*) => signed int 		if True		at :-1:-1
	X509_CRL_delete_ext: (struct X509_crl_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	X509_CRL_digest: (const struct X509_crl_st*, const struct env_md_st*, unsigned char*, unsigned int*) => signed int 		if True		at :-1:-1
	X509_CRL_dup: (struct X509_crl_st*) => struct X509_crl_st* 		if True		at :-1:-1
	X509_CRL_free: (struct X509_crl_st*) => void 		if True		at :-1:-1
	X509_CRL_get0_by_cert: (struct X509_crl_st*, struct x509_revoked_st**, struct x509_st*) => signed int 		if True		at :-1:-1
	X509_CRL_get0_by_serial: (struct X509_crl_st*, struct x509_revoked_st**, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_CRL_get_ext: (struct X509_crl_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	X509_CRL_get_ext_by_NID: (struct X509_crl_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_CRL_get_ext_by_OBJ: (struct X509_crl_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	X509_CRL_get_ext_by_critical: (struct X509_crl_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_CRL_get_ext_count: (struct X509_crl_st*) => signed int 		if True		at :-1:-1
	X509_CRL_get_ext_d2i: (struct X509_crl_st*, signed int, signed int*, signed int*) => void* 		if True		at :-1:-1
	X509_CRL_get_meth_data: (struct X509_crl_st*) => void* 		if True		at :-1:-1
	X509_CRL_match: (const struct X509_crl_st*, const struct X509_crl_st*) => signed int 		if True		at :-1:-1
	X509_CRL_new: (void) => struct X509_crl_st* 		if True		at :-1:-1
	X509_CRL_print: (struct bio_st*, struct X509_crl_st*) => signed int 		if True		at :-1:-1
	X509_CRL_print_fp: (struct _IO_FILE*, struct X509_crl_st*) => signed int 		if True		at :-1:-1
	X509_CRL_set_default_method: (const struct x509_crl_method_st*) => void 		if True		at :-1:-1
	X509_CRL_set_issuer_name: (struct X509_crl_st*, struct X509_name_st*) => signed int 		if True		at :-1:-1
	X509_CRL_set_lastUpdate: (struct X509_crl_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_CRL_set_meth_data: (struct X509_crl_st*, void*) => void 		if True		at :-1:-1
	X509_CRL_set_nextUpdate: (struct X509_crl_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_CRL_set_version: (struct X509_crl_st*, signed long) => signed int 		if True		at :-1:-1
	X509_CRL_sign: (struct X509_crl_st*, struct evp_pkey_st*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	X509_CRL_sign_ctx: (struct X509_crl_st*, struct env_md_ctx_st*) => signed int 		if True		at :-1:-1
	X509_CRL_sort: (struct X509_crl_st*) => signed int 		if True		at :-1:-1
	X509_CRL_verify: (struct X509_crl_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	X509_EXTENSION_create_by_NID: (struct X509_extension_st**, signed int, signed int, struct asn1_string_st*) => struct X509_extension_st* 		if True		at :-1:-1
	X509_EXTENSION_create_by_OBJ: (struct X509_extension_st**, struct asn1_object_st*, signed int, struct asn1_string_st*) => struct X509_extension_st* 		if True		at :-1:-1
	X509_EXTENSION_dup: (struct X509_extension_st*) => struct X509_extension_st* 		if True		at :-1:-1
	X509_EXTENSION_free: (struct X509_extension_st*) => void 		if True		at :-1:-1
	X509_EXTENSION_get_critical: (struct X509_extension_st*) => signed int 		if True		at :-1:-1
	X509_EXTENSION_get_data: (struct X509_extension_st*) => struct asn1_string_st* 		if True		at :-1:-1
	X509_EXTENSION_get_object: (struct X509_extension_st*) => struct asn1_object_st* 		if True		at :-1:-1
	X509_EXTENSION_new: (void) => struct X509_extension_st* 		if True		at :-1:-1
	X509_EXTENSION_set_critical: (struct X509_extension_st*, signed int) => signed int 		if True		at :-1:-1
	X509_EXTENSION_set_data: (struct X509_extension_st*, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_EXTENSION_set_object: (struct X509_extension_st*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	X509_INFO_free: (struct X509_info_st*) => void 		if True		at :-1:-1
	X509_INFO_new: (void) => struct X509_info_st* 		if True		at :-1:-1
	X509_LOOKUP_by_alias: (struct x509_lookup_st*, signed int, char*, signed int, struct x509_object_st*) => signed int 		if True		at :-1:-1
	X509_LOOKUP_by_fingerprint: (struct x509_lookup_st*, signed int, unsigned char*, signed int, struct x509_object_st*) => signed int 		if True		at :-1:-1
	X509_LOOKUP_by_issuer_serial: (struct x509_lookup_st*, signed int, struct X509_name_st*, struct asn1_string_st*, struct x509_object_st*) => signed int 		if True		at :-1:-1
	X509_LOOKUP_by_subject: (struct x509_lookup_st*, signed int, struct X509_name_st*, struct x509_object_st*) => signed int 		if True		at :-1:-1
	X509_LOOKUP_ctrl: (struct x509_lookup_st*, signed int, const char*, signed long, char**) => signed int 		if True		at :-1:-1
	X509_LOOKUP_file: (void) => struct x509_lookup_method_st* 		if True		at :-1:-1
	X509_LOOKUP_free: (struct x509_lookup_st*) => void 		if True		at :-1:-1
	X509_LOOKUP_hash_dir: (void) => struct x509_lookup_method_st* 		if True		at :-1:-1
	X509_LOOKUP_init: (struct x509_lookup_st*) => signed int 		if True		at :-1:-1
	X509_LOOKUP_new: (struct x509_lookup_method_st*) => struct x509_lookup_st* 		if True		at :-1:-1
	X509_LOOKUP_shutdown: (struct x509_lookup_st*) => signed int 		if True		at :-1:-1
	X509_NAME_ENTRY_create_by_NID: (struct X509_name_entry_st**, signed int, signed int, unsigned char*, signed int) => struct X509_name_entry_st* 		if True		at :-1:-1
	X509_NAME_ENTRY_create_by_OBJ: (struct X509_name_entry_st**, struct asn1_object_st*, signed int, const unsigned char*, signed int) => struct X509_name_entry_st* 		if True		at :-1:-1
	X509_NAME_ENTRY_create_by_txt: (struct X509_name_entry_st**, const char*, signed int, const unsigned char*, signed int) => struct X509_name_entry_st* 		if True		at :-1:-1
	X509_NAME_ENTRY_dup: (struct X509_name_entry_st*) => struct X509_name_entry_st* 		if True		at :-1:-1
	X509_NAME_ENTRY_free: (struct X509_name_entry_st*) => void 		if True		at :-1:-1
	X509_NAME_ENTRY_get_data: (struct X509_name_entry_st*) => struct asn1_string_st* 		if True		at :-1:-1
	X509_NAME_ENTRY_get_object: (struct X509_name_entry_st*) => struct asn1_object_st* 		if True		at :-1:-1
	X509_NAME_ENTRY_new: (void) => struct X509_name_entry_st* 		if True		at :-1:-1
	X509_NAME_ENTRY_set_data: (struct X509_name_entry_st*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	X509_NAME_ENTRY_set_object: (struct X509_name_entry_st*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	X509_NAME_add_entry: (struct X509_name_st*, struct X509_name_entry_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_NAME_add_entry_by_NID: (struct X509_name_st*, signed int, signed int, unsigned char*, signed int, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_NAME_add_entry_by_OBJ: (struct X509_name_st*, struct asn1_object_st*, signed int, unsigned char*, signed int, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_NAME_add_entry_by_txt: (struct X509_name_st*, const char*, signed int, const unsigned char*, signed int, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_NAME_cmp: (const struct X509_name_st*, const struct X509_name_st*) => signed int 		if True		at :-1:-1
	X509_NAME_delete_entry: (struct X509_name_st*, signed int) => struct X509_name_entry_st* 		if True		at :-1:-1
	X509_NAME_digest: (const struct X509_name_st*, const struct env_md_st*, unsigned char*, unsigned int*) => signed int 		if True		at :-1:-1
	X509_NAME_dup: (struct X509_name_st*) => struct X509_name_st* 		if True		at :-1:-1
	X509_NAME_entry_count: (struct X509_name_st*) => signed int 		if True		at :-1:-1
	X509_NAME_free: (struct X509_name_st*) => void 		if True		at :-1:-1
	X509_NAME_get_entry: (struct X509_name_st*, signed int) => struct X509_name_entry_st* 		if True		at :-1:-1
	X509_NAME_get_index_by_NID: (struct X509_name_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_NAME_get_index_by_OBJ: (struct X509_name_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	X509_NAME_get_text_by_NID: (struct X509_name_st*, signed int, char*, signed int) => signed int 		if True		at :-1:-1
	X509_NAME_get_text_by_OBJ: (struct X509_name_st*, struct asn1_object_st*, char*, signed int) => signed int 		if True		at :-1:-1
	X509_NAME_hash: (struct X509_name_st*) => unsigned long 		if True		at :-1:-1
	X509_NAME_hash_old: (struct X509_name_st*) => unsigned long 		if True		at :-1:-1
	X509_NAME_new: (void) => struct X509_name_st* 		if True		at :-1:-1
	X509_NAME_oneline: (struct X509_name_st*, char*, signed int) => char* 		if True		at :-1:-1
	X509_NAME_print: (struct bio_st*, struct X509_name_st*, signed int) => signed int 		if True		at :-1:-1
	X509_NAME_print_ex: (struct bio_st*, struct X509_name_st*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	X509_NAME_print_ex_fp: (struct _IO_FILE*, struct X509_name_st*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	X509_NAME_set: (struct X509_name_st**, struct X509_name_st*) => signed int 		if True		at :-1:-1
	X509_OBJECT_free_contents: (struct x509_object_st*) => void 		if True		at :-1:-1
	X509_OBJECT_idx_by_subject: (struct stack_st_X509_OBJECT*, signed int, struct X509_name_st*) => signed int 		if True		at :-1:-1
	X509_OBJECT_retrieve_by_subject: (struct stack_st_X509_OBJECT*, signed int, struct X509_name_st*) => struct x509_object_st* 		if True		at :-1:-1
	X509_OBJECT_retrieve_match: (struct stack_st_X509_OBJECT*, struct x509_object_st*) => struct x509_object_st* 		if True		at :-1:-1
	X509_OBJECT_up_ref_count: (struct x509_object_st*) => void 		if True		at :-1:-1
	X509_PKEY_free: (struct private_key_st*) => void 		if True		at :-1:-1
	X509_PKEY_new: (void) => struct private_key_st* 		if True		at :-1:-1
	X509_POLICY_NODE_print: (struct bio_st*, struct X509_POLICY_NODE_st*, signed int) => void 		if True		at :-1:-1
	X509_PUBKEY_free: (struct X509_pubkey_st*) => void 		if True		at :-1:-1
	X509_PUBKEY_get0_param: (struct asn1_object_st**, const unsigned char**, signed int*, struct X509_algor_st**, struct X509_pubkey_st*) => signed int 		if True		at :-1:-1
	X509_PUBKEY_get: (struct X509_pubkey_st*) => struct evp_pkey_st* 		if True		at :-1:-1
	X509_PUBKEY_new: (void) => struct X509_pubkey_st* 		if True		at :-1:-1
	X509_PUBKEY_set0_param: (struct X509_pubkey_st*, struct asn1_object_st*, signed int, void*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	X509_PUBKEY_set: (struct X509_pubkey_st**, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	X509_PURPOSE_add: (signed int, signed int, signed int, (const struct x509_purpose_st*, const struct x509_st*, signed int) => signed int*, char*, char*, void*) => signed int 		if True		at :-1:-1
	X509_PURPOSE_cleanup: (void) => void 		if True		at :-1:-1
	X509_PURPOSE_get0: (signed int) => struct x509_purpose_st* 		if True		at :-1:-1
	X509_PURPOSE_get0_name: (struct x509_purpose_st*) => char* 		if True		at :-1:-1
	X509_PURPOSE_get0_sname: (struct x509_purpose_st*) => char* 		if True		at :-1:-1
	X509_PURPOSE_get_by_id: (signed int) => signed int 		if True		at :-1:-1
	X509_PURPOSE_get_by_sname: (char*) => signed int 		if True		at :-1:-1
	X509_PURPOSE_get_count: (void) => signed int 		if True		at :-1:-1
	X509_PURPOSE_get_id: (struct x509_purpose_st*) => signed int 		if True		at :-1:-1
	X509_PURPOSE_get_trust: (struct x509_purpose_st*) => signed int 		if True		at :-1:-1
	X509_PURPOSE_set: (signed int*, signed int) => signed int 		if True		at :-1:-1
	X509_REQ_INFO_free: (struct X509_req_info_st*) => void 		if True		at :-1:-1
	X509_REQ_INFO_new: (void) => struct X509_req_info_st* 		if True		at :-1:-1
	X509_REQ_add1_attr: (struct X509_req_st*, struct x509_attributes_st*) => signed int 		if True		at :-1:-1
	X509_REQ_add1_attr_by_NID: (struct X509_req_st*, signed int, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	X509_REQ_add1_attr_by_OBJ: (struct X509_req_st*, const struct asn1_object_st*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	X509_REQ_add1_attr_by_txt: (struct X509_req_st*, const char*, signed int, const unsigned char*, signed int) => signed int 		if True		at :-1:-1
	X509_REQ_add_extensions: (struct X509_req_st*, struct stack_st_X509_EXTENSION*) => signed int 		if True		at :-1:-1
	X509_REQ_add_extensions_nid: (struct X509_req_st*, struct stack_st_X509_EXTENSION*, signed int) => signed int 		if True		at :-1:-1
	X509_REQ_check_private_key: (struct X509_req_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	X509_REQ_delete_attr: (struct X509_req_st*, signed int) => struct x509_attributes_st* 		if True		at :-1:-1
	X509_REQ_digest: (const struct X509_req_st*, const struct env_md_st*, unsigned char*, unsigned int*) => signed int 		if True		at :-1:-1
	X509_REQ_dup: (struct X509_req_st*) => struct X509_req_st* 		if True		at :-1:-1
	X509_REQ_extension_nid: (signed int) => signed int 		if True		at :-1:-1
	X509_REQ_free: (struct X509_req_st*) => void 		if True		at :-1:-1
	X509_REQ_get1_email: (struct X509_req_st*) => struct stack_st_OPENSSL_STRING* 		if True		at :-1:-1
	X509_REQ_get_attr: (const struct X509_req_st*, signed int) => struct x509_attributes_st* 		if True		at :-1:-1
	X509_REQ_get_attr_by_NID: (const struct X509_req_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_REQ_get_attr_by_OBJ: (const struct X509_req_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	X509_REQ_get_attr_count: (const struct X509_req_st*) => signed int 		if True		at :-1:-1
	X509_REQ_get_extension_nids: (void) => signed int* 		if True		at :-1:-1
	X509_REQ_get_extensions: (struct X509_req_st*) => struct stack_st_X509_EXTENSION* 		if True		at :-1:-1
	X509_REQ_get_pubkey: (struct X509_req_st*) => struct evp_pkey_st* 		if True		at :-1:-1
	X509_REQ_new: (void) => struct X509_req_st* 		if True		at :-1:-1
	X509_REQ_print: (struct bio_st*, struct X509_req_st*) => signed int 		if True		at :-1:-1
	X509_REQ_print_ex: (struct bio_st*, struct X509_req_st*, unsigned long, unsigned long) => signed int 		if True		at :-1:-1
	X509_REQ_print_fp: (struct _IO_FILE*, struct X509_req_st*) => signed int 		if True		at :-1:-1
	X509_REQ_set_extension_nids: (signed int*) => void 		if True		at :-1:-1
	X509_REQ_set_pubkey: (struct X509_req_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	X509_REQ_set_subject_name: (struct X509_req_st*, struct X509_name_st*) => signed int 		if True		at :-1:-1
	X509_REQ_set_version: (struct X509_req_st*, signed long) => signed int 		if True		at :-1:-1
	X509_REQ_sign: (struct X509_req_st*, struct evp_pkey_st*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	X509_REQ_sign_ctx: (struct X509_req_st*, struct env_md_ctx_st*) => signed int 		if True		at :-1:-1
	X509_REQ_to_X509: (struct X509_req_st*, signed int, struct evp_pkey_st*) => struct x509_st* 		if True		at :-1:-1
	X509_REQ_verify: (struct X509_req_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	X509_REVOKED_add1_ext_i2d: (struct x509_revoked_st*, signed int, void*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	X509_REVOKED_add_ext: (struct x509_revoked_st*, struct X509_extension_st*, signed int) => signed int 		if True		at :-1:-1
	X509_REVOKED_delete_ext: (struct x509_revoked_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	X509_REVOKED_free: (struct x509_revoked_st*) => void 		if True		at :-1:-1
	X509_REVOKED_get_ext: (struct x509_revoked_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	X509_REVOKED_get_ext_by_NID: (struct x509_revoked_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_REVOKED_get_ext_by_OBJ: (struct x509_revoked_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	X509_REVOKED_get_ext_by_critical: (struct x509_revoked_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_REVOKED_get_ext_count: (struct x509_revoked_st*) => signed int 		if True		at :-1:-1
	X509_REVOKED_get_ext_d2i: (struct x509_revoked_st*, signed int, signed int*, signed int*) => void* 		if True		at :-1:-1
	X509_REVOKED_new: (void) => struct x509_revoked_st* 		if True		at :-1:-1
	X509_REVOKED_set_revocationDate: (struct x509_revoked_st*, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_REVOKED_set_serialNumber: (struct x509_revoked_st*, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_SIG_free: (struct X509_sig_st*) => void 		if True		at :-1:-1
	X509_SIG_new: (void) => struct X509_sig_st* 		if True		at :-1:-1
	X509_STORE_CTX_cleanup: (struct x509_store_ctx_st*) => void 		if True		at :-1:-1
	X509_STORE_CTX_free: (struct x509_store_ctx_st*) => void 		if True		at :-1:-1
	X509_STORE_CTX_get0_current_crl: (struct x509_store_ctx_st*) => struct X509_crl_st* 		if True		at :-1:-1
	X509_STORE_CTX_get0_current_issuer: (struct x509_store_ctx_st*) => struct x509_st* 		if True		at :-1:-1
	X509_STORE_CTX_get0_param: (struct x509_store_ctx_st*) => struct X509_VERIFY_PARAM_st* 		if True		at :-1:-1
	X509_STORE_CTX_get0_parent_ctx: (struct x509_store_ctx_st*) => struct x509_store_ctx_st* 		if True		at :-1:-1
	X509_STORE_CTX_get0_policy_tree: (struct x509_store_ctx_st*) => struct X509_POLICY_TREE_st* 		if True		at :-1:-1
	X509_STORE_CTX_get1_chain: (struct x509_store_ctx_st*) => struct stack_st_X509* 		if True		at :-1:-1
	X509_STORE_CTX_get1_issuer: (struct x509_st**, struct x509_store_ctx_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_get_chain: (struct x509_store_ctx_st*) => struct stack_st_X509* 		if True		at :-1:-1
	X509_STORE_CTX_get_current_cert: (struct x509_store_ctx_st*) => struct x509_st* 		if True		at :-1:-1
	X509_STORE_CTX_get_error: (struct x509_store_ctx_st*) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_get_error_depth: (struct x509_store_ctx_st*) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_get_ex_data: (struct x509_store_ctx_st*, signed int) => void* 		if True		at :-1:-1
	X509_STORE_CTX_get_ex_new_index: (signed long, void*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => signed int*, (struct crypto_ex_data_st*, struct crypto_ex_data_st*, void*, signed int, signed long, void*) => signed int*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => void*) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_get_explicit_policy: (struct x509_store_ctx_st*) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_init: (struct x509_store_ctx_st*, struct x509_store_st*, struct x509_st*, struct stack_st_X509*) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_new: (void) => struct x509_store_ctx_st* 		if True		at :-1:-1
	X509_STORE_CTX_purpose_inherit: (struct x509_store_ctx_st*, signed int, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_set0_crls: (struct x509_store_ctx_st*, struct stack_st_X509_CRL*) => void 		if True		at :-1:-1
	X509_STORE_CTX_set0_param: (struct x509_store_ctx_st*, struct X509_VERIFY_PARAM_st*) => void 		if True		at :-1:-1
	X509_STORE_CTX_set_cert: (struct x509_store_ctx_st*, struct x509_st*) => void 		if True		at :-1:-1
	X509_STORE_CTX_set_chain: (struct x509_store_ctx_st*, struct stack_st_X509*) => void 		if True		at :-1:-1
	X509_STORE_CTX_set_default: (struct x509_store_ctx_st*, const char*) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_set_depth: (struct x509_store_ctx_st*, signed int) => void 		if True		at :-1:-1
	X509_STORE_CTX_set_error: (struct x509_store_ctx_st*, signed int) => void 		if True		at :-1:-1
	X509_STORE_CTX_set_ex_data: (struct x509_store_ctx_st*, signed int, void*) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_set_flags: (struct x509_store_ctx_st*, unsigned long) => void 		if True		at :-1:-1
	X509_STORE_CTX_set_purpose: (struct x509_store_ctx_st*, signed int) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_set_time: (struct x509_store_ctx_st*, unsigned long, signed long) => void 		if True		at :-1:-1
	X509_STORE_CTX_set_trust: (struct x509_store_ctx_st*, signed int) => signed int 		if True		at :-1:-1
	X509_STORE_CTX_set_verify_cb: (struct x509_store_ctx_st*, (signed int, struct x509_store_ctx_st*) => signed int*) => void 		if True		at :-1:-1
	X509_STORE_CTX_trusted_stack: (struct x509_store_ctx_st*, struct stack_st_X509*) => void 		if True		at :-1:-1
	X509_STORE_add_cert: (struct x509_store_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	X509_STORE_add_crl: (struct x509_store_st*, struct X509_crl_st*) => signed int 		if True		at :-1:-1
	X509_STORE_add_lookup: (struct x509_store_st*, struct x509_lookup_method_st*) => struct x509_lookup_st* 		if True		at :-1:-1
	X509_STORE_free: (struct x509_store_st*) => void 		if True		at :-1:-1
	X509_STORE_get1_certs: (struct x509_store_ctx_st*, struct X509_name_st*) => struct stack_st_X509* 		if True		at :-1:-1
	X509_STORE_get1_crls: (struct x509_store_ctx_st*, struct X509_name_st*) => struct stack_st_X509_CRL* 		if True		at :-1:-1
	X509_STORE_get_by_subject: (struct x509_store_ctx_st*, signed int, struct X509_name_st*, struct x509_object_st*) => signed int 		if True		at :-1:-1
	X509_STORE_load_locations: (struct x509_store_st*, const char*, const char*) => signed int 		if True		at :-1:-1
	X509_STORE_new: (void) => struct x509_store_st* 		if True		at :-1:-1
	X509_STORE_set1_param: (struct x509_store_st*, struct X509_VERIFY_PARAM_st*) => signed int 		if True		at :-1:-1
	X509_STORE_set_default_paths: (struct x509_store_st*) => signed int 		if True		at :-1:-1
	X509_STORE_set_depth: (struct x509_store_st*, signed int) => signed int 		if True		at :-1:-1
	X509_STORE_set_flags: (struct x509_store_st*, unsigned long) => signed int 		if True		at :-1:-1
	X509_STORE_set_purpose: (struct x509_store_st*, signed int) => signed int 		if True		at :-1:-1
	X509_STORE_set_trust: (struct x509_store_st*, signed int) => signed int 		if True		at :-1:-1
	X509_STORE_set_verify_cb: (struct x509_store_st*, (signed int, struct x509_store_ctx_st*) => signed int*) => void 		if True		at :-1:-1
	X509_TRUST_add: (signed int, signed int, (struct x509_trust_st*, struct x509_st*, signed int) => signed int*, char*, signed int, void*) => signed int 		if True		at :-1:-1
	X509_TRUST_cleanup: (void) => void 		if True		at :-1:-1
	X509_TRUST_get0: (signed int) => struct x509_trust_st* 		if True		at :-1:-1
	X509_TRUST_get0_name: (struct x509_trust_st*) => char* 		if True		at :-1:-1
	X509_TRUST_get_by_id: (signed int) => signed int 		if True		at :-1:-1
	X509_TRUST_get_count: (void) => signed int 		if True		at :-1:-1
	X509_TRUST_get_flags: (struct x509_trust_st*) => signed int 		if True		at :-1:-1
	X509_TRUST_get_trust: (struct x509_trust_st*) => signed int 		if True		at :-1:-1
	X509_TRUST_set: (signed int*, signed int) => signed int 		if True		at :-1:-1
	X509_TRUST_set_default: ((signed int, struct x509_st*, signed int) => signed int*) => (signed int, struct x509_st*, signed int) => signed int* 		if True		at :-1:-1
	X509_VAL_free: (struct X509_val_st*) => void 		if True		at :-1:-1
	X509_VAL_new: (void) => struct X509_val_st* 		if True		at :-1:-1
	X509_VERIFY_PARAM_add0_policy: (struct X509_VERIFY_PARAM_st*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_add0_table: (struct X509_VERIFY_PARAM_st*) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_clear_flags: (struct X509_VERIFY_PARAM_st*, unsigned long) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_free: (struct X509_VERIFY_PARAM_st*) => void 		if True		at :-1:-1
	X509_VERIFY_PARAM_get_depth: (const struct X509_VERIFY_PARAM_st*) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_get_flags: (struct X509_VERIFY_PARAM_st*) => unsigned long 		if True		at :-1:-1
	X509_VERIFY_PARAM_inherit: (struct X509_VERIFY_PARAM_st*, const struct X509_VERIFY_PARAM_st*) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_lookup: (const char*) => const struct X509_VERIFY_PARAM_st* 		if True		at :-1:-1
	X509_VERIFY_PARAM_new: (void) => struct X509_VERIFY_PARAM_st* 		if True		at :-1:-1
	X509_VERIFY_PARAM_set1: (struct X509_VERIFY_PARAM_st*, const struct X509_VERIFY_PARAM_st*) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_set1_name: (struct X509_VERIFY_PARAM_st*, const char*) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_set1_policies: (struct X509_VERIFY_PARAM_st*, struct stack_st_ASN1_OBJECT*) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_set_depth: (struct X509_VERIFY_PARAM_st*, signed int) => void 		if True		at :-1:-1
	X509_VERIFY_PARAM_set_flags: (struct X509_VERIFY_PARAM_st*, unsigned long) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_set_purpose: (struct X509_VERIFY_PARAM_st*, signed int) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_set_time: (struct X509_VERIFY_PARAM_st*, signed long) => void 		if True		at :-1:-1
	X509_VERIFY_PARAM_set_trust: (struct X509_VERIFY_PARAM_st*, signed int) => signed int 		if True		at :-1:-1
	X509_VERIFY_PARAM_table_cleanup: (void) => void 		if True		at :-1:-1
	X509_add1_ext_i2d: (struct x509_st*, signed int, void*, signed int, unsigned long) => signed int 		if True		at :-1:-1
	X509_add1_reject_object: (struct x509_st*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	X509_add1_trust_object: (struct x509_st*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	X509_add_ext: (struct x509_st*, struct X509_extension_st*, signed int) => signed int 		if True		at :-1:-1
	X509_alias_get0: (struct x509_st*, signed int*) => unsigned char* 		if True		at :-1:-1
	X509_alias_set1: (struct x509_st*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	X509_certificate_type: (struct x509_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	X509_check_akid: (struct x509_st*, struct AUTHORITY_KEYID_st*) => signed int 		if True		at :-1:-1
	X509_check_ca: (struct x509_st*) => signed int 		if True		at :-1:-1
	X509_check_issued: (struct x509_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	X509_check_private_key: (struct x509_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	X509_check_purpose: (struct x509_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_check_trust: (struct x509_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_cmp: (const struct x509_st*, const struct x509_st*) => signed int 		if True		at :-1:-1
	X509_cmp_current_time: (const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_cmp_time: (const struct asn1_string_st*, signed long*) => signed int 		if True		at :-1:-1
	X509_delete_ext: (struct x509_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	X509_digest: (const struct x509_st*, const struct env_md_st*, unsigned char*, unsigned int*) => signed int 		if True		at :-1:-1
	X509_dup: (struct x509_st*) => struct x509_st* 		if True		at :-1:-1
	X509_email_free: (struct stack_st_OPENSSL_STRING*) => void 		if True		at :-1:-1
	X509_find_by_issuer_and_serial: (struct stack_st_X509*, struct X509_name_st*, struct asn1_string_st*) => struct x509_st* 		if True		at :-1:-1
	X509_find_by_subject: (struct stack_st_X509*, struct X509_name_st*) => struct x509_st* 		if True		at :-1:-1
	X509_free: (struct x509_st*) => void 		if True		at :-1:-1
	X509_get0_pubkey_bitstr: (const struct x509_st*) => struct asn1_string_st* 		if True		at :-1:-1
	X509_get1_email: (struct x509_st*) => struct stack_st_OPENSSL_STRING* 		if True		at :-1:-1
	X509_get1_ocsp: (struct x509_st*) => struct stack_st_OPENSSL_STRING* 		if True		at :-1:-1
	X509_get_default_cert_area: (void) => const char* 		if True		at :-1:-1
	X509_get_default_cert_dir: (void) => const char* 		if True		at :-1:-1
	X509_get_default_cert_dir_env: (void) => const char* 		if True		at :-1:-1
	X509_get_default_cert_file: (void) => const char* 		if True		at :-1:-1
	X509_get_default_cert_file_env: (void) => const char* 		if True		at :-1:-1
	X509_get_default_private_dir: (void) => const char* 		if True		at :-1:-1
	X509_get_ex_data: (struct x509_st*, signed int) => void* 		if True		at :-1:-1
	X509_get_ex_new_index: (signed long, void*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => signed int*, (struct crypto_ex_data_st*, struct crypto_ex_data_st*, void*, signed int, signed long, void*) => signed int*, (void*, void*, struct crypto_ex_data_st*, signed int, signed long, void*) => void*) => signed int 		if True		at :-1:-1
	X509_get_ext: (struct x509_st*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	X509_get_ext_by_NID: (struct x509_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_get_ext_by_OBJ: (struct x509_st*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	X509_get_ext_by_critical: (struct x509_st*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509_get_ext_count: (struct x509_st*) => signed int 		if True		at :-1:-1
	X509_get_ext_d2i: (struct x509_st*, signed int, signed int*, signed int*) => void* 		if True		at :-1:-1
	X509_get_issuer_name: (struct x509_st*) => struct X509_name_st* 		if True		at :-1:-1
	X509_get_pubkey: (struct x509_st*) => struct evp_pkey_st* 		if True		at :-1:-1
	X509_get_pubkey_parameters: (struct evp_pkey_st*, struct stack_st_X509*) => signed int 		if True		at :-1:-1
	X509_get_serialNumber: (struct x509_st*) => struct asn1_string_st* 		if True		at :-1:-1
	X509_get_subject_name: (struct x509_st*) => struct X509_name_st* 		if True		at :-1:-1
	X509_gmtime_adj: (struct asn1_string_st*, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	X509_issuer_and_serial_cmp: (const struct x509_st*, const struct x509_st*) => signed int 		if True		at :-1:-1
	X509_issuer_and_serial_hash: (struct x509_st*) => unsigned long 		if True		at :-1:-1
	X509_issuer_name_cmp: (const struct x509_st*, const struct x509_st*) => signed int 		if True		at :-1:-1
	X509_issuer_name_hash: (struct x509_st*) => unsigned long 		if True		at :-1:-1
	X509_issuer_name_hash_old: (struct x509_st*) => unsigned long 		if True		at :-1:-1
	X509_keyid_get0: (struct x509_st*, signed int*) => unsigned char* 		if True		at :-1:-1
	X509_keyid_set1: (struct x509_st*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	X509_load_cert_crl_file: (struct x509_lookup_st*, const char*, signed int) => signed int 		if True		at :-1:-1
	X509_load_cert_file: (struct x509_lookup_st*, const char*, signed int) => signed int 		if True		at :-1:-1
	X509_load_crl_file: (struct x509_lookup_st*, const char*, signed int) => signed int 		if True		at :-1:-1
	X509_new: (void) => struct x509_st* 		if True		at :-1:-1
	X509_ocspid_print: (struct bio_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	X509_policy_check: (struct X509_POLICY_TREE_st**, signed int*, struct stack_st_X509*, struct stack_st_ASN1_OBJECT*, unsigned int) => signed int 		if True		at :-1:-1
	X509_policy_level_get0_node: (struct X509_POLICY_LEVEL_st*, signed int) => struct X509_POLICY_NODE_st* 		if True		at :-1:-1
	X509_policy_level_node_count: (struct X509_POLICY_LEVEL_st*) => signed int 		if True		at :-1:-1
	X509_policy_node_get0_parent: (const struct X509_POLICY_NODE_st*) => const struct X509_POLICY_NODE_st* 		if True		at :-1:-1
	X509_policy_node_get0_policy: (const struct X509_POLICY_NODE_st*) => const struct asn1_object_st* 		if True		at :-1:-1
	X509_policy_node_get0_qualifiers: (const struct X509_POLICY_NODE_st*) => struct stack_st_POLICYQUALINFO* 		if True		at :-1:-1
	X509_policy_tree_free: (struct X509_POLICY_TREE_st*) => void 		if True		at :-1:-1
	X509_policy_tree_get0_level: (const struct X509_POLICY_TREE_st*, signed int) => struct X509_POLICY_LEVEL_st* 		if True		at :-1:-1
	X509_policy_tree_get0_policies: (const struct X509_POLICY_TREE_st*) => struct stack_st_X509_POLICY_NODE* 		if True		at :-1:-1
	X509_policy_tree_get0_user_policies: (const struct X509_POLICY_TREE_st*) => struct stack_st_X509_POLICY_NODE* 		if True		at :-1:-1
	X509_policy_tree_level_count: (const struct X509_POLICY_TREE_st*) => signed int 		if True		at :-1:-1
	X509_print: (struct bio_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	X509_print_ex: (struct bio_st*, struct x509_st*, unsigned long, unsigned long) => signed int 		if True		at :-1:-1
	X509_print_ex_fp: (struct _IO_FILE*, struct x509_st*, unsigned long, unsigned long) => signed int 		if True		at :-1:-1
	X509_print_fp: (struct _IO_FILE*, struct x509_st*) => signed int 		if True		at :-1:-1
	X509_pubkey_digest: (const struct x509_st*, const struct env_md_st*, unsigned char*, unsigned int*) => signed int 		if True		at :-1:-1
	X509_reject_clear: (struct x509_st*) => void 		if True		at :-1:-1
	X509_set_ex_data: (struct x509_st*, signed int, void*) => signed int 		if True		at :-1:-1
	X509_set_issuer_name: (struct x509_st*, struct X509_name_st*) => signed int 		if True		at :-1:-1
	X509_set_notAfter: (struct x509_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_set_notBefore: (struct x509_st*, const struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_set_pubkey: (struct x509_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	X509_set_serialNumber: (struct x509_st*, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_set_subject_name: (struct x509_st*, struct X509_name_st*) => signed int 		if True		at :-1:-1
	X509_set_version: (struct x509_st*, signed long) => signed int 		if True		at :-1:-1
	X509_sign: (struct x509_st*, struct evp_pkey_st*, const struct env_md_st*) => signed int 		if True		at :-1:-1
	X509_sign_ctx: (struct x509_st*, struct env_md_ctx_st*) => signed int 		if True		at :-1:-1
	X509_signature_dump: (struct bio_st*, const struct asn1_string_st*, signed int) => signed int 		if True		at :-1:-1
	X509_signature_print: (struct bio_st*, struct X509_algor_st*, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	X509_subject_name_cmp: (const struct x509_st*, const struct x509_st*) => signed int 		if True		at :-1:-1
	X509_subject_name_hash: (struct x509_st*) => unsigned long 		if True		at :-1:-1
	X509_subject_name_hash_old: (struct x509_st*) => unsigned long 		if True		at :-1:-1
	X509_supported_extension: (struct X509_extension_st*) => signed int 		if True		at :-1:-1
	X509_time_adj: (struct asn1_string_st*, signed long, signed long*) => struct asn1_string_st* 		if True		at :-1:-1
	X509_time_adj_ex: (struct asn1_string_st*, signed int, signed long, signed long*) => struct asn1_string_st* 		if True		at :-1:-1
	X509_to_X509_REQ: (struct x509_st*, struct evp_pkey_st*, const struct env_md_st*) => struct X509_req_st* 		if True		at :-1:-1
	X509_trust_clear: (struct x509_st*) => void 		if True		at :-1:-1
	X509_verify: (struct x509_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	X509_verify_cert: (struct x509_store_ctx_st*) => signed int 		if True		at :-1:-1
	X509_verify_cert_error_string: (signed long) => const char* 		if True		at :-1:-1
	X509at_add1_attr: (struct stack_st_X509_ATTRIBUTE**, struct x509_attributes_st*) => struct stack_st_X509_ATTRIBUTE* 		if True		at :-1:-1
	X509at_add1_attr_by_NID: (struct stack_st_X509_ATTRIBUTE**, signed int, signed int, const unsigned char*, signed int) => struct stack_st_X509_ATTRIBUTE* 		if True		at :-1:-1
	X509at_add1_attr_by_OBJ: (struct stack_st_X509_ATTRIBUTE**, const struct asn1_object_st*, signed int, const unsigned char*, signed int) => struct stack_st_X509_ATTRIBUTE* 		if True		at :-1:-1
	X509at_add1_attr_by_txt: (struct stack_st_X509_ATTRIBUTE**, const char*, signed int, const unsigned char*, signed int) => struct stack_st_X509_ATTRIBUTE* 		if True		at :-1:-1
	X509at_delete_attr: (struct stack_st_X509_ATTRIBUTE*, signed int) => struct x509_attributes_st* 		if True		at :-1:-1
	X509at_get0_data_by_OBJ: (struct stack_st_X509_ATTRIBUTE*, struct asn1_object_st*, signed int, signed int) => void* 		if True		at :-1:-1
	X509at_get_attr: (const struct stack_st_X509_ATTRIBUTE*, signed int) => struct x509_attributes_st* 		if True		at :-1:-1
	X509at_get_attr_by_NID: (const struct stack_st_X509_ATTRIBUTE*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509at_get_attr_by_OBJ: (const struct stack_st_X509_ATTRIBUTE*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	X509at_get_attr_count: (const struct stack_st_X509_ATTRIBUTE*) => signed int 		if True		at :-1:-1
	X509v3_add_ext: (struct stack_st_X509_EXTENSION**, struct X509_extension_st*, signed int) => struct stack_st_X509_EXTENSION* 		if True		at :-1:-1
	X509v3_delete_ext: (struct stack_st_X509_EXTENSION*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	X509v3_get_ext: (const struct stack_st_X509_EXTENSION*, signed int) => struct X509_extension_st* 		if True		at :-1:-1
	X509v3_get_ext_by_NID: (const struct stack_st_X509_EXTENSION*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509v3_get_ext_by_OBJ: (const struct stack_st_X509_EXTENSION*, struct asn1_object_st*, signed int) => signed int 		if True		at :-1:-1
	X509v3_get_ext_by_critical: (const struct stack_st_X509_EXTENSION*, signed int, signed int) => signed int 		if True		at :-1:-1
	X509v3_get_ext_count: (const struct stack_st_X509_EXTENSION*) => signed int 		if True		at :-1:-1
	X9_62_CHARACTERISTIC_TWO_free: (struct x9_62_characteristic_two_st*) => void 		if True		at :-1:-1
	X9_62_CHARACTERISTIC_TWO_new: (void) => struct x9_62_characteristic_two_st* 		if True		at :-1:-1
	X9_62_PENTANOMIAL_free: (struct x9_62_pentanomial_st*) => void 		if True		at :-1:-1
	X9_62_PENTANOMIAL_new: (void) => struct x9_62_pentanomial_st* 		if True		at :-1:-1
	_CONF_add_string: (struct conf_st*, struct {Map()}*, struct {Map()}*) => signed int 		if True		at :-1:-1
	_CONF_free_data: (struct conf_st*) => void 		if True		at :-1:-1
	_CONF_get_section: (const struct conf_st*, const char*) => struct {Map()}* 		if True		at :-1:-1
	_CONF_get_section_values: (const struct conf_st*, const char*) => struct stack_st_CONF_VALUE* 		if True		at :-1:-1
	_CONF_get_string: (const struct conf_st*, const char*, const char*) => char* 		if True		at :-1:-1
	_CONF_new_data: (struct conf_st*) => signed int 		if True		at :-1:-1
	_CONF_new_section: (struct conf_st*, const char*) => struct {Map()}* 		if True		at :-1:-1
	_des_crypt: (char*, signed int, struct desparams*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_096_des_random_seed: (unsigned char[]*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_crypt: (const char*, const char*) => char* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_cbc_cksum: (unsigned char[]*, unsigned char[]*, signed long, struct _ossl_old_des_ks_struct[], unsigned char[]*) => unsigned int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_cbc_encrypt: (unsigned char[]*, unsigned char[]*, signed long, struct _ossl_old_des_ks_struct[], unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_cfb64_encrypt: (unsigned char*, unsigned char*, signed long, struct _ossl_old_des_ks_struct[], unsigned char[]*, signed int*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_cfb_encrypt: (unsigned char*, unsigned char*, signed int, signed long, struct _ossl_old_des_ks_struct[], unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_crypt: (const char*, const char*) => char* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_decrypt3: (unsigned int*, struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[]) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_ecb3_encrypt: (unsigned char[]*, unsigned char[]*, struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[], signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_ecb_encrypt: (unsigned char[]*, unsigned char[]*, struct _ossl_old_des_ks_struct[], signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_ede3_cbc_encrypt: (unsigned char[]*, unsigned char[]*, signed long, struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[], unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_ede3_cfb64_encrypt: (unsigned char*, unsigned char*, signed long, struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[], unsigned char[]*, signed int*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_ede3_ofb64_encrypt: (unsigned char*, unsigned char*, signed long, struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[], unsigned char[]*, signed int*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_enc_read: (signed int, char*, signed int, struct _ossl_old_des_ks_struct[], unsigned char[]*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_enc_write: (signed int, char*, signed int, struct _ossl_old_des_ks_struct[], unsigned char[]*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_encrypt2: (unsigned int*, struct _ossl_old_des_ks_struct[], signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_encrypt3: (unsigned int*, struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[], struct _ossl_old_des_ks_struct[]) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_encrypt: (unsigned int*, struct _ossl_old_des_ks_struct[], signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_fcrypt: (const char*, const char*, char*) => char* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_is_weak_key: (unsigned char[]*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_key_sched: (unsigned char[]*, struct _ossl_old_des_ks_struct[]) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_ncbc_encrypt: (unsigned char[]*, unsigned char[]*, signed long, struct _ossl_old_des_ks_struct[], unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_ofb64_encrypt: (unsigned char*, unsigned char*, signed long, struct _ossl_old_des_ks_struct[], unsigned char[]*, signed int*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_ofb_encrypt: (unsigned char*, unsigned char*, signed int, signed long, struct _ossl_old_des_ks_struct[], unsigned char[]*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_options: (void) => const char* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_pcbc_encrypt: (unsigned char[]*, unsigned char[]*, signed long, struct _ossl_old_des_ks_struct[], unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_quad_cksum: (unsigned char[]*, unsigned char[]*, signed long, signed int, unsigned char[]*) => unsigned int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_random_key: (unsigned char[]) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_random_seed: (unsigned char[]) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_read_2passwords: (unsigned char[]*, unsigned char[]*, const char*, signed int) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_read_password: (unsigned char[]*, const char*, signed int) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_read_pw: (char*, char*, signed int, const char*, signed int) => signed int 		if True		at :-1:-1
	_ossl_old_des_read_pw_string: (char*, signed int, const char*, signed int) => signed int 		if True		at :-1:-1
	_ossl_old_des_set_key: (unsigned char[]*, struct _ossl_old_des_ks_struct[]) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_set_odd_parity: (unsigned char[]*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_string_to_2keys: (char*, unsigned char[]*, unsigned char[]*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_string_to_key: (char*, unsigned char[]*) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	_ossl_old_des_xcbc_encrypt: (unsigned char[]*, unsigned char[]*, signed long, struct _ossl_old_des_ks_struct[], unsigned char[]*, unsigned char[]*, unsigned char[]*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	a2d_ASN1_OBJECT: (unsigned char*, signed int, const char*, signed int) => signed int 		if True		at :-1:-1
	a2i_ASN1_ENUMERATED: (struct bio_st*, struct asn1_string_st*, char*, signed int) => signed int 		if True		at :-1:-1
	a2i_ASN1_INTEGER: (struct bio_st*, struct asn1_string_st*, char*, signed int) => signed int 		if True		at :-1:-1
	a2i_ASN1_STRING: (struct bio_st*, struct asn1_string_st*, char*, signed int) => signed int 		if True		at :-1:-1
	a2i_GENERAL_NAME: (struct GENERAL_NAME_st*, const struct v3_ext_method*, struct v3_ext_ctx*, signed int, char*, signed int) => struct GENERAL_NAME_st* 		if True		at :-1:-1
	a2i_IPADDRESS: (const char*) => struct asn1_string_st* 		if True		at :-1:-1
	a2i_IPADDRESS_NC: (const char*) => struct asn1_string_st* 		if True		at :-1:-1
	a2i_ipadd: (unsigned char*, const char*) => signed int 		if True		at :-1:-1
	add_oid_section: (struct bio_st*, struct conf_st*) => signed int 		if True		at :-1:-1
	alg_print: (struct bio_st*, struct X509_algor_st*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	app_RAND_allow_write_file: (void) => void 		if True		at :-1:-1
	app_RAND_load_file: (const char*, struct bio_st*, signed int) => signed int 		if True		at :-1:-1
	app_RAND_load_files: (char*) => signed long 		if True		at :-1:-1
	app_RAND_write_file: (const char*, struct bio_st*) => signed int 		if True		at :-1:-1
	app_init: (signed long) => signed int 		if !def(APP_INIT)		at :-1:-1
	app_isdir: (const char*) => signed int 		if True		at :-1:-1
	app_passwd: (struct bio_st*, char*, char*, char**, char**) => signed int 		if True		at :-1:-1
	app_tminterval: (signed int, signed int) => double 		if True		at :-1:-1
	args_verify: (char***, signed int*, signed int*, struct bio_st*, struct X509_VERIFY_PARAM_st**) => signed int 		if True		at :-1:-1
	asn1_Finish: (struct asn1_ctx_st*) => signed int 		if True		at :-1:-1
	asn1_GetSequence: (struct asn1_const_ctx_st*, signed long*) => signed int 		if True		at :-1:-1
	asn1_add_error: (const unsigned char*, signed int) => void 		if True		at :-1:-1
	asn1_const_Finish: (struct asn1_const_ctx_st*) => signed int 		if True		at :-1:-1
	asn1_do_adb: (struct ASN1_VALUE_st**, const struct ASN1_TEMPLATE_st*, signed int) => const struct ASN1_TEMPLATE_st* 		if True		at :-1:-1
	asn1_do_lock: (struct ASN1_VALUE_st**, signed int, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	asn1_enc_free: (struct ASN1_VALUE_st**, const struct ASN1_ITEM_st*) => void 		if True		at :-1:-1
	asn1_enc_init: (struct ASN1_VALUE_st**, const struct ASN1_ITEM_st*) => void 		if True		at :-1:-1
	asn1_enc_restore: (signed int*, unsigned char**, struct ASN1_VALUE_st**, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	asn1_enc_save: (struct ASN1_VALUE_st**, const unsigned char*, signed int, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	asn1_ex_c2i: (struct ASN1_VALUE_st**, const unsigned char*, signed int, signed int, char*, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	asn1_ex_i2c: (struct ASN1_VALUE_st**, unsigned char*, signed int*, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	asn1_get_choice_selector: (struct ASN1_VALUE_st**, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	asn1_get_field_ptr: (struct ASN1_VALUE_st**, const struct ASN1_TEMPLATE_st*) => struct ASN1_VALUE_st** 		if True		at :-1:-1
	asn1_set_choice_selector: (struct ASN1_VALUE_st**, signed int, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	asn1_template_print_ctx: (struct bio_st*, struct ASN1_VALUE_st**, signed int, const struct ASN1_TEMPLATE_st*, const struct asn1_pctx_st*) => signed int 		if True		at :-1:-1
	asn1parse_main: (signed int, char**) => signed int 		if True		at :-1:-1
	b2i_PVK_bio: (struct bio_st*, (char*, signed int, signed int, void*) => signed int*, void*) => struct evp_pkey_st* 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	b2i_PrivateKey: (const unsigned char**, signed long) => struct evp_pkey_st* 		if True		at :-1:-1
	b2i_PrivateKey_bio: (struct bio_st*) => struct evp_pkey_st* 		if True		at :-1:-1
	b2i_PublicKey: (const unsigned char**, signed long) => struct evp_pkey_st* 		if True		at :-1:-1
	b2i_PublicKey_bio: (struct bio_st*) => struct evp_pkey_st* 		if True		at :-1:-1
	bio_to_mem: (unsigned char**, signed int, struct bio_st*) => signed int 		if True		at :-1:-1
	bn_add_part_words: (unsigned long*, const unsigned long*, const unsigned long*, signed int, signed int) => unsigned long 		if True		at :-1:-1
	bn_add_words: (unsigned long*, const unsigned long*, const unsigned long*, signed int) => unsigned long 		if True		at :-1:-1
	bn_cmp_part_words: (const unsigned long*, const unsigned long*, signed int, signed int) => signed int 		if True		at :-1:-1
	bn_cmp_words: (const unsigned long*, const unsigned long*, signed int) => signed int 		if True		at :-1:-1
	bn_div_words: (unsigned long, unsigned long, unsigned long) => unsigned long 		if True		at :-1:-1
	bn_dup_expand: (const struct bignum_st*, signed int) => struct bignum_st* 		if True		at :-1:-1
	bn_expand2: (struct bignum_st*, signed int) => struct bignum_st* 		if True		at :-1:-1
	bn_mul_add_words: (unsigned long*, const unsigned long*, signed int, unsigned long) => unsigned long 		if True		at :-1:-1
	bn_mul_comba4: (unsigned long*, unsigned long*, unsigned long*) => void 		if True		at :-1:-1
	bn_mul_comba8: (unsigned long*, unsigned long*, unsigned long*) => void 		if True		at :-1:-1
	bn_mul_high: (unsigned long*, unsigned long*, unsigned long*, unsigned long*, signed int, unsigned long*) => void 		if (!def(OPENSSL_SMALL_FOOTPRINT)|def(BN_RECURSION))		at :-1:-1
	bn_mul_low_normal: (unsigned long*, unsigned long*, unsigned long*, signed int) => void 		if True		at :-1:-1
	bn_mul_low_recursive: (unsigned long*, unsigned long*, unsigned long*, signed int, unsigned long*) => void 		if (!def(OPENSSL_SMALL_FOOTPRINT)|def(BN_RECURSION))		at :-1:-1
	bn_mul_normal: (unsigned long*, unsigned long*, signed int, unsigned long*, signed int) => void 		if True		at :-1:-1
	bn_mul_part_recursive: (unsigned long*, unsigned long*, unsigned long*, signed int, signed int, signed int, unsigned long*) => void 		if (!def(OPENSSL_SMALL_FOOTPRINT)|def(BN_RECURSION))		at :-1:-1
	bn_mul_recursive: (unsigned long*, unsigned long*, unsigned long*, signed int, signed int, signed int, unsigned long*) => void 		if (!def(OPENSSL_SMALL_FOOTPRINT)|def(BN_RECURSION))		at :-1:-1
	bn_mul_words: (unsigned long*, const unsigned long*, signed int, unsigned long) => unsigned long 		if True		at :-1:-1
	bn_sqr_comba4: (unsigned long*, const unsigned long*) => void 		if True		at :-1:-1
	bn_sqr_comba8: (unsigned long*, const unsigned long*) => void 		if True		at :-1:-1
	bn_sqr_normal: (unsigned long*, const unsigned long*, signed int, unsigned long*) => void 		if True		at :-1:-1
	bn_sqr_recursive: (unsigned long*, const unsigned long*, signed int, unsigned long*) => void 		if (!def(OPENSSL_SMALL_FOOTPRINT)|def(BN_RECURSION))		at :-1:-1
	bn_sqr_words: (unsigned long*, const unsigned long*, signed int) => void 		if True		at :-1:-1
	bn_sub_part_words: (unsigned long*, const unsigned long*, const unsigned long*, signed int, signed int) => unsigned long 		if (def(OPENSSL_NO_ASM)|!def(OPENSSL_BN_ASM_PART_WORDS))		at :-1:-1
	bn_sub_words: (unsigned long*, const unsigned long*, const unsigned long*, signed int) => unsigned long 		if !def(SIMICS)		at :-1:-1
	bn_sub_words: (unsigned long*, unsigned long*, unsigned long*, signed int) => unsigned long 		if def(SIMICS)		at :-1:-1
	c2i_ASN1_BIT_STRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	c2i_ASN1_INTEGER: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	c2i_ASN1_OBJECT: (struct asn1_object_st**, const unsigned char**, signed long) => struct asn1_object_st* 		if True		at :-1:-1
	ca_main: (signed int, char**) => signed int 		if True		at :-1:-1
	cert_load: (struct bio_st*, struct stack_st_X509*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	check_defer: (signed int) => void 		if True		at :-1:-1
	chopup_args: (struct args_st*, char*, signed int*, char**[]) => signed int 		if True		at :-1:-1
	cms_CompressedData_create: (signed int) => struct CMS_ContentInfo_st* 		if (!def(OPENSSL_NO_CMS)&def(ZLIB))		at :-1:-1
	cms_CompressedData_init_bio: (struct CMS_ContentInfo_st*) => struct bio_st* 		if (!def(OPENSSL_NO_CMS)&def(ZLIB))		at :-1:-1
	cms_Data_create: (void) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_DigestAlgorithm_find_ctx: (struct env_md_ctx_st*, struct bio_st*, struct X509_algor_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_DigestAlgorithm_init_bio: (struct X509_algor_st*) => struct bio_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_DigestAlgorithm_set: (struct X509_algor_st*, const struct env_md_st*) => void 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_DigestedData_create: (const struct env_md_st*) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_DigestedData_do_final: (struct CMS_ContentInfo_st*, struct bio_st*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_DigestedData_init_bio: (struct CMS_ContentInfo_st*) => struct bio_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_EncryptedContent_init: (struct CMS_EncryptedContentInfo_st*, const struct evp_cipher_st*, const unsigned char*, unsigned long) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_EncryptedContent_init_bio: (struct CMS_EncryptedContentInfo_st*) => struct bio_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_EncryptedData_init_bio: (struct CMS_ContentInfo_st*) => struct bio_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_EnvelopedData_init_bio: (struct CMS_ContentInfo_st*) => struct bio_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_Receipt_verify: (struct CMS_ContentInfo_st*, struct CMS_ContentInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_RecipientInfo_pwri_crypt: (struct CMS_ContentInfo_st*, struct CMS_RecipientInfo_st*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_SignedData_final: (struct CMS_ContentInfo_st*, struct bio_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_SignedData_init_bio: (struct CMS_ContentInfo_st*) => struct bio_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_SignerIdentifier_cert_cmp: (struct CMS_SignerIdentifier_st*, struct x509_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_SignerIdentifier_get0_signer_id: (struct CMS_SignerIdentifier_st*, struct asn1_string_st**, struct X509_name_st**, struct asn1_string_st**) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_content_bio: (struct CMS_ContentInfo_st*) => struct bio_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_encode_Receipt: (struct CMS_SignerInfo_st*) => struct asn1_string_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_get0_enveloped: (struct CMS_ContentInfo_st*) => struct CMS_EnvelopedData_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_main: (signed int, char**) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_msgSigDigest_add1: (struct CMS_SignerInfo_st*, struct CMS_SignerInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	cms_set1_SignerIdentifier: (struct CMS_SignerIdentifier_st*, struct x509_st*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	copy_extensions: (struct x509_st*, struct X509_req_st*, signed int) => signed int 		if True		at :-1:-1
	crl2pkcs7_main: (signed int, char**) => signed int 		if True		at :-1:-1
	crl_main: (signed int, char**) => signed int 		if True		at :-1:-1
	cryptopro_key_meshing: (struct {Map()}*, unsigned char*) => void 		if True		at :-1:-1
	d2i_ACCESS_DESCRIPTION: (struct ACCESS_DESCRIPTION_st**, const unsigned char**, signed long) => struct ACCESS_DESCRIPTION_st* 		if True		at :-1:-1
	d2i_ASN1_BIT_STRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_BMPSTRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_BOOLEAN: (signed int*, const unsigned char**, signed long) => signed int 		if True		at :-1:-1
	d2i_ASN1_ENUMERATED: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_GENERALIZEDTIME: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_GENERALSTRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_IA5STRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_INTEGER: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_NULL: (signed int**, const unsigned char**, signed long) => signed int* 		if True		at :-1:-1
	d2i_ASN1_OBJECT: (struct asn1_object_st**, const unsigned char**, signed long) => struct asn1_object_st* 		if True		at :-1:-1
	d2i_ASN1_OCTET_STRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_PRINTABLE: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_PRINTABLESTRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_SEQUENCE_ANY: (struct stack_st_ASN1_TYPE**, const unsigned char**, signed long) => struct stack_st_ASN1_TYPE* 		if True		at :-1:-1
	d2i_ASN1_SET: (struct stack_st_OPENSSL_BLOCK**, const unsigned char**, signed long, (void**, const unsigned char**, signed long) => void**, (void*) => void*, signed int, signed int) => struct stack_st_OPENSSL_BLOCK* 		if !def(NO_ASN1_OLD)		at :-1:-1
	d2i_ASN1_SET_ANY: (struct stack_st_ASN1_TYPE**, const unsigned char**, signed long) => struct stack_st_ASN1_TYPE* 		if True		at :-1:-1
	d2i_ASN1_T61STRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_TIME: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_TYPE: (struct asn1_type_st**, const unsigned char**, signed long) => struct asn1_type_st* 		if True		at :-1:-1
	d2i_ASN1_UINTEGER: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_UNIVERSALSTRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_UTCTIME: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_UTF8STRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_VISIBLESTRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_bytes: (struct asn1_string_st**, const unsigned char**, signed long, signed int, signed int) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_ASN1_type_bytes: (struct asn1_string_st**, const unsigned char**, signed long, signed int) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_AUTHORITY_INFO_ACCESS: (struct stack_st_ACCESS_DESCRIPTION**, const unsigned char**, signed long) => struct stack_st_ACCESS_DESCRIPTION* 		if True		at :-1:-1
	d2i_AUTHORITY_KEYID: (struct AUTHORITY_KEYID_st**, const unsigned char**, signed long) => struct AUTHORITY_KEYID_st* 		if True		at :-1:-1
	d2i_AutoPrivateKey: (struct evp_pkey_st**, const unsigned char**, signed long) => struct evp_pkey_st* 		if True		at :-1:-1
	d2i_BASIC_CONSTRAINTS: (struct BASIC_CONSTRAINTS_st**, const unsigned char**, signed long) => struct BASIC_CONSTRAINTS_st* 		if True		at :-1:-1
	d2i_CERTIFICATEPOLICIES: (struct stack_st_POLICYINFO**, const unsigned char**, signed long) => struct stack_st_POLICYINFO* 		if True		at :-1:-1
	d2i_CMS_ContentInfo: (struct CMS_ContentInfo_st**, const unsigned char**, signed long) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	d2i_CMS_ReceiptRequest: (struct CMS_ReceiptRequest_st**, const unsigned char**, signed long) => struct CMS_ReceiptRequest_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	d2i_CMS_bio: (struct bio_st*, struct CMS_ContentInfo_st**) => struct CMS_ContentInfo_st* 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	d2i_CRL_DIST_POINTS: (struct stack_st_DIST_POINT**, const unsigned char**, signed long) => struct stack_st_DIST_POINT* 		if True		at :-1:-1
	d2i_DHparams: (struct dh_st**, const unsigned char**, signed long) => struct dh_st* 		if True		at :-1:-1
	d2i_DIRECTORYSTRING: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_DISPLAYTEXT: (struct asn1_string_st**, const unsigned char**, signed long) => struct asn1_string_st* 		if True		at :-1:-1
	d2i_DIST_POINT: (struct DIST_POINT_st**, const unsigned char**, signed long) => struct DIST_POINT_st* 		if True		at :-1:-1
	d2i_DIST_POINT_NAME: (struct DIST_POINT_NAME_st**, const unsigned char**, signed long) => struct DIST_POINT_NAME_st* 		if True		at :-1:-1
	d2i_DSAPrivateKey: (struct dsa_st**, const unsigned char**, signed long) => struct dsa_st* 		if True		at :-1:-1
	d2i_DSAPrivateKey_bio: (struct bio_st*, struct dsa_st**) => struct dsa_st* 		if True		at :-1:-1
	d2i_DSAPrivateKey_fp: (struct _IO_FILE*, struct dsa_st**) => struct dsa_st* 		if True		at :-1:-1
	d2i_DSAPublicKey: (struct dsa_st**, const unsigned char**, signed long) => struct dsa_st* 		if True		at :-1:-1
	d2i_DSA_PUBKEY: (struct dsa_st**, const unsigned char**, signed long) => struct dsa_st* 		if True		at :-1:-1
	d2i_DSA_PUBKEY_bio: (struct bio_st*, struct dsa_st**) => struct dsa_st* 		if True		at :-1:-1
	d2i_DSA_PUBKEY_fp: (struct _IO_FILE*, struct dsa_st**) => struct dsa_st* 		if True		at :-1:-1
	d2i_DSA_SIG: (struct DSA_SIG_st**, const unsigned char**, signed long) => struct DSA_SIG_st* 		if True		at :-1:-1
	d2i_DSAparams: (struct dsa_st**, const unsigned char**, signed long) => struct dsa_st* 		if True		at :-1:-1
	d2i_ECDSA_SIG: (struct ECDSA_SIG_st**, const unsigned char**, signed long) => struct ECDSA_SIG_st* 		if True		at :-1:-1
	d2i_ECPKPARAMETERS: (struct ecpk_parameters_st**, const unsigned char**, signed long) => struct ecpk_parameters_st* 		if True		at :-1:-1
	d2i_ECPKParameters: (struct ec_group_st**, const unsigned char**, signed long) => struct ec_group_st* 		if True		at :-1:-1
	d2i_ECParameters: (struct ec_key_st**, const unsigned char**, signed long) => struct ec_key_st* 		if True		at :-1:-1
	d2i_ECPrivateKey: (struct ec_key_st**, const unsigned char**, signed long) => struct ec_key_st* 		if True		at :-1:-1
	d2i_ECPrivateKey_bio: (struct bio_st*, struct ec_key_st**) => struct ec_key_st* 		if True		at :-1:-1
	d2i_ECPrivateKey_fp: (struct _IO_FILE*, struct ec_key_st**) => struct ec_key_st* 		if True		at :-1:-1
	d2i_EC_PRIVATEKEY: (struct ec_privatekey_st**, const unsigned char**, signed long) => struct ec_privatekey_st* 		if True		at :-1:-1
	d2i_EC_PUBKEY: (struct ec_key_st**, const unsigned char**, signed long) => struct ec_key_st* 		if True		at :-1:-1
	d2i_EC_PUBKEY_bio: (struct bio_st*, struct ec_key_st**) => struct ec_key_st* 		if True		at :-1:-1
	d2i_EC_PUBKEY_fp: (struct _IO_FILE*, struct ec_key_st**) => struct ec_key_st* 		if True		at :-1:-1
	d2i_EDIPARTYNAME: (struct EDIPartyName_st**, const unsigned char**, signed long) => struct EDIPartyName_st* 		if True		at :-1:-1
	d2i_ESS_CERT_ID: (struct ESS_cert_id**, const unsigned char**, signed long) => struct ESS_cert_id* 		if True		at :-1:-1
	d2i_ESS_ISSUER_SERIAL: (struct ESS_issuer_serial**, const unsigned char**, signed long) => struct ESS_issuer_serial* 		if True		at :-1:-1
	d2i_ESS_SIGNING_CERT: (struct ESS_signing_cert**, const unsigned char**, signed long) => struct ESS_signing_cert* 		if True		at :-1:-1
	d2i_EXTENDED_KEY_USAGE: (struct stack_st_ASN1_OBJECT**, const unsigned char**, signed long) => struct stack_st_ASN1_OBJECT* 		if True		at :-1:-1
	d2i_GENERAL_NAME: (struct GENERAL_NAME_st**, const unsigned char**, signed long) => struct GENERAL_NAME_st* 		if True		at :-1:-1
	d2i_GENERAL_NAMES: (struct stack_st_GENERAL_NAME**, const unsigned char**, signed long) => struct stack_st_GENERAL_NAME* 		if True		at :-1:-1
	d2i_ISSUING_DIST_POINT: (struct ISSUING_DIST_POINT_st**, const unsigned char**, signed long) => struct ISSUING_DIST_POINT_st* 		if True		at :-1:-1
	d2i_KRB5_APREQ: (struct stack_st_KRB5_APREQBODY**, const unsigned char**, signed long) => struct stack_st_KRB5_APREQBODY* 		if True		at :-1:-1
	d2i_KRB5_APREQBODY: (struct krb5_ap_req_st**, const unsigned char**, signed long) => struct krb5_ap_req_st* 		if True		at :-1:-1
	d2i_KRB5_AUTHDATA: (struct krb5_authorization_st**, const unsigned char**, signed long) => struct krb5_authorization_st* 		if True		at :-1:-1
	d2i_KRB5_AUTHENT: (struct stack_st_KRB5_AUTHENTBODY**, const unsigned char**, signed long) => struct stack_st_KRB5_AUTHENTBODY* 		if True		at :-1:-1
	d2i_KRB5_AUTHENTBODY: (struct krb5_authenticator_st**, const unsigned char**, signed long) => struct krb5_authenticator_st* 		if True		at :-1:-1
	d2i_KRB5_CHECKSUM: (struct krb5_checksum_st**, const unsigned char**, signed long) => struct krb5_checksum_st* 		if True		at :-1:-1
	d2i_KRB5_ENCDATA: (struct krb5_encdata_st**, const unsigned char**, signed long) => struct krb5_encdata_st* 		if True		at :-1:-1
	d2i_KRB5_ENCKEY: (struct krb5_encryptionkey_st**, const unsigned char**, signed long) => struct krb5_encryptionkey_st* 		if True		at :-1:-1
	d2i_KRB5_PRINCNAME: (struct krb5_princname_st**, const unsigned char**, signed long) => struct krb5_princname_st* 		if True		at :-1:-1
	d2i_KRB5_TICKET: (struct stack_st_KRB5_TKTBODY**, const unsigned char**, signed long) => struct stack_st_KRB5_TKTBODY* 		if True		at :-1:-1
	d2i_KRB5_TKTBODY: (struct krb5_tktbody_st**, const unsigned char**, signed long) => struct krb5_tktbody_st* 		if True		at :-1:-1
	d2i_NETSCAPE_CERT_SEQUENCE: (struct Netscape_certificate_sequence**, const unsigned char**, signed long) => struct Netscape_certificate_sequence* 		if True		at :-1:-1
	d2i_NETSCAPE_ENCRYPTED_PKEY: (struct netscape_encrypted_pkey_st**, const unsigned char**, signed long) => struct netscape_encrypted_pkey_st* 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	d2i_NETSCAPE_PKEY: (struct netscape_pkey_st**, const unsigned char**, signed long) => struct netscape_pkey_st* 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	d2i_NETSCAPE_SPKAC: (struct Netscape_spkac_st**, const unsigned char**, signed long) => struct Netscape_spkac_st* 		if True		at :-1:-1
	d2i_NETSCAPE_SPKI: (struct Netscape_spki_st**, const unsigned char**, signed long) => struct Netscape_spki_st* 		if True		at :-1:-1
	d2i_NETSCAPE_X509: (struct NETSCAPE_X509_st**, const unsigned char**, signed long) => struct NETSCAPE_X509_st* 		if True		at :-1:-1
	d2i_NOTICEREF: (struct NOTICEREF_st**, const unsigned char**, signed long) => struct NOTICEREF_st* 		if True		at :-1:-1
	d2i_Netscape_RSA: (struct rsa_st**, const unsigned char**, signed long, (char*, signed int, const char*, signed int) => signed int*) => struct rsa_st* 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	d2i_OCSP_BASICRESP: (struct ocsp_basic_response_st**, const unsigned char**, signed long) => struct ocsp_basic_response_st* 		if True		at :-1:-1
	d2i_OCSP_CERTID: (struct ocsp_cert_id_st**, const unsigned char**, signed long) => struct ocsp_cert_id_st* 		if True		at :-1:-1
	d2i_OCSP_CERTSTATUS: (struct ocsp_cert_status_st**, const unsigned char**, signed long) => struct ocsp_cert_status_st* 		if True		at :-1:-1
	d2i_OCSP_CRLID: (struct ocsp_crl_id_st**, const unsigned char**, signed long) => struct ocsp_crl_id_st* 		if True		at :-1:-1
	d2i_OCSP_ONEREQ: (struct ocsp_one_request_st**, const unsigned char**, signed long) => struct ocsp_one_request_st* 		if True		at :-1:-1
	d2i_OCSP_REQINFO: (struct ocsp_req_info_st**, const unsigned char**, signed long) => struct ocsp_req_info_st* 		if True		at :-1:-1
	d2i_OCSP_REQUEST: (struct ocsp_request_st**, const unsigned char**, signed long) => struct ocsp_request_st* 		if True		at :-1:-1
	d2i_OCSP_RESPBYTES: (struct ocsp_resp_bytes_st**, const unsigned char**, signed long) => struct ocsp_resp_bytes_st* 		if True		at :-1:-1
	d2i_OCSP_RESPDATA: (struct ocsp_response_data_st**, const unsigned char**, signed long) => struct ocsp_response_data_st* 		if True		at :-1:-1
	d2i_OCSP_RESPID: (struct ocsp_responder_id_st**, const unsigned char**, signed long) => struct ocsp_responder_id_st* 		if True		at :-1:-1
	d2i_OCSP_RESPONSE: (struct ocsp_response_st**, const unsigned char**, signed long) => struct ocsp_response_st* 		if True		at :-1:-1
	d2i_OCSP_REVOKEDINFO: (struct ocsp_revoked_info_st**, const unsigned char**, signed long) => struct ocsp_revoked_info_st* 		if True		at :-1:-1
	d2i_OCSP_SERVICELOC: (struct ocsp_service_locator_st**, const unsigned char**, signed long) => struct ocsp_service_locator_st* 		if True		at :-1:-1
	d2i_OCSP_SIGNATURE: (struct ocsp_signature_st**, const unsigned char**, signed long) => struct ocsp_signature_st* 		if True		at :-1:-1
	d2i_OCSP_SINGLERESP: (struct ocsp_single_response_st**, const unsigned char**, signed long) => struct ocsp_single_response_st* 		if True		at :-1:-1
	d2i_OTHERNAME: (struct otherName_st**, const unsigned char**, signed long) => struct otherName_st* 		if True		at :-1:-1
	d2i_PBE2PARAM: (struct PBE2PARAM_st**, const unsigned char**, signed long) => struct PBE2PARAM_st* 		if True		at :-1:-1
	d2i_PBEPARAM: (struct PBEPARAM_st**, const unsigned char**, signed long) => struct PBEPARAM_st* 		if True		at :-1:-1
	d2i_PBKDF2PARAM: (struct PBKDF2PARAM_st**, const unsigned char**, signed long) => struct PBKDF2PARAM_st* 		if True		at :-1:-1
	d2i_PKCS12: (struct {Map()}**, const unsigned char**, signed long) => struct {Map()}* 		if True		at :-1:-1
	d2i_PKCS12_BAGS: (struct pkcs12_bag_st**, const unsigned char**, signed long) => struct pkcs12_bag_st* 		if True		at :-1:-1
	d2i_PKCS12_MAC_DATA: (struct {Map()}**, const unsigned char**, signed long) => struct {Map()}* 		if True		at :-1:-1
	d2i_PKCS12_SAFEBAG: (struct {Map()}**, const unsigned char**, signed long) => struct {Map()}* 		if True		at :-1:-1
	d2i_PKCS12_bio: (struct bio_st*, struct {Map()}**) => struct {Map()}* 		if True		at :-1:-1
	d2i_PKCS12_fp: (struct _IO_FILE*, struct {Map()}**) => struct {Map()}* 		if True		at :-1:-1
	d2i_PKCS7: (struct pkcs7_st**, const unsigned char**, signed long) => struct pkcs7_st* 		if True		at :-1:-1
	d2i_PKCS7_DIGEST: (struct pkcs7_digest_st**, const unsigned char**, signed long) => struct pkcs7_digest_st* 		if True		at :-1:-1
	d2i_PKCS7_ENCRYPT: (struct pkcs7_encrypted_st**, const unsigned char**, signed long) => struct pkcs7_encrypted_st* 		if True		at :-1:-1
	d2i_PKCS7_ENC_CONTENT: (struct pkcs7_enc_content_st**, const unsigned char**, signed long) => struct pkcs7_enc_content_st* 		if True		at :-1:-1
	d2i_PKCS7_ENVELOPE: (struct pkcs7_enveloped_st**, const unsigned char**, signed long) => struct pkcs7_enveloped_st* 		if True		at :-1:-1
	d2i_PKCS7_ISSUER_AND_SERIAL: (struct pkcs7_issuer_and_serial_st**, const unsigned char**, signed long) => struct pkcs7_issuer_and_serial_st* 		if True		at :-1:-1
	d2i_PKCS7_RECIP_INFO: (struct pkcs7_recip_info_st**, const unsigned char**, signed long) => struct pkcs7_recip_info_st* 		if True		at :-1:-1
	d2i_PKCS7_SIGNED: (struct pkcs7_signed_st**, const unsigned char**, signed long) => struct pkcs7_signed_st* 		if True		at :-1:-1
	d2i_PKCS7_SIGNER_INFO: (struct pkcs7_signer_info_st**, const unsigned char**, signed long) => struct pkcs7_signer_info_st* 		if True		at :-1:-1
	d2i_PKCS7_SIGN_ENVELOPE: (struct pkcs7_signedandenveloped_st**, const unsigned char**, signed long) => struct pkcs7_signedandenveloped_st* 		if True		at :-1:-1
	d2i_PKCS7_bio: (struct bio_st*, struct pkcs7_st**) => struct pkcs7_st* 		if True		at :-1:-1
	d2i_PKCS7_fp: (struct _IO_FILE*, struct pkcs7_st**) => struct pkcs7_st* 		if True		at :-1:-1
	d2i_PKCS8PrivateKey_bio: (struct bio_st*, struct evp_pkey_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct evp_pkey_st* 		if True		at :-1:-1
	d2i_PKCS8PrivateKey_fp: (struct _IO_FILE*, struct evp_pkey_st**, (char*, signed int, signed int, void*) => signed int*, void*) => struct evp_pkey_st* 		if True		at :-1:-1
	d2i_PKCS8_PRIV_KEY_INFO: (struct pkcs8_priv_key_info_st**, const unsigned char**, signed long) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	d2i_PKCS8_PRIV_KEY_INFO_bio: (struct bio_st*, struct pkcs8_priv_key_info_st**) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	d2i_PKCS8_PRIV_KEY_INFO_fp: (struct _IO_FILE*, struct pkcs8_priv_key_info_st**) => struct pkcs8_priv_key_info_st* 		if True		at :-1:-1
	d2i_PKCS8_bio: (struct bio_st*, struct X509_sig_st**) => struct X509_sig_st* 		if True		at :-1:-1
	d2i_PKCS8_fp: (struct _IO_FILE*, struct X509_sig_st**) => struct X509_sig_st* 		if True		at :-1:-1
	d2i_PKEY_USAGE_PERIOD: (struct PKEY_USAGE_PERIOD_st**, const unsigned char**, signed long) => struct PKEY_USAGE_PERIOD_st* 		if True		at :-1:-1
	d2i_POLICYINFO: (struct POLICYINFO_st**, const unsigned char**, signed long) => struct POLICYINFO_st* 		if True		at :-1:-1
	d2i_POLICYQUALINFO: (struct POLICYQUALINFO_st**, const unsigned char**, signed long) => struct POLICYQUALINFO_st* 		if True		at :-1:-1
	d2i_PROXY_CERT_INFO_EXTENSION: (struct PROXY_CERT_INFO_EXTENSION_st**, const unsigned char**, signed long) => struct PROXY_CERT_INFO_EXTENSION_st* 		if True		at :-1:-1
	d2i_PROXY_POLICY: (struct PROXY_POLICY_st**, const unsigned char**, signed long) => struct PROXY_POLICY_st* 		if True		at :-1:-1
	d2i_PUBKEY: (struct evp_pkey_st**, const unsigned char**, signed long) => struct evp_pkey_st* 		if True		at :-1:-1
	d2i_PUBKEY_bio: (struct bio_st*, struct evp_pkey_st**) => struct evp_pkey_st* 		if True		at :-1:-1
	d2i_PUBKEY_fp: (struct _IO_FILE*, struct evp_pkey_st**) => struct evp_pkey_st* 		if True		at :-1:-1
	d2i_PrivateKey: (signed int, struct evp_pkey_st**, const unsigned char**, signed long) => struct evp_pkey_st* 		if True		at :-1:-1
	d2i_PrivateKey_bio: (struct bio_st*, struct evp_pkey_st**) => struct evp_pkey_st* 		if True		at :-1:-1
	d2i_PrivateKey_fp: (struct _IO_FILE*, struct evp_pkey_st**) => struct evp_pkey_st* 		if True		at :-1:-1
	d2i_PublicKey: (signed int, struct evp_pkey_st**, const unsigned char**, signed long) => struct evp_pkey_st* 		if True		at :-1:-1
	d2i_RSAPrivateKey: (struct rsa_st**, const unsigned char**, signed long) => struct rsa_st* 		if True		at :-1:-1
	d2i_RSAPrivateKey_bio: (struct bio_st*, struct rsa_st**) => struct rsa_st* 		if True		at :-1:-1
	d2i_RSAPrivateKey_fp: (struct _IO_FILE*, struct rsa_st**) => struct rsa_st* 		if True		at :-1:-1
	d2i_RSAPublicKey: (struct rsa_st**, const unsigned char**, signed long) => struct rsa_st* 		if True		at :-1:-1
	d2i_RSAPublicKey_bio: (struct bio_st*, struct rsa_st**) => struct rsa_st* 		if True		at :-1:-1
	d2i_RSAPublicKey_fp: (struct _IO_FILE*, struct rsa_st**) => struct rsa_st* 		if True		at :-1:-1
	d2i_RSA_NET: (struct rsa_st**, const unsigned char**, signed long, (char*, signed int, const char*, signed int) => signed int*, signed int) => struct rsa_st* 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	d2i_RSA_PSS_PARAMS: (struct rsa_pss_params_st**, const unsigned char**, signed long) => struct rsa_pss_params_st* 		if True		at :-1:-1
	d2i_RSA_PUBKEY: (struct rsa_st**, const unsigned char**, signed long) => struct rsa_st* 		if True		at :-1:-1
	d2i_RSA_PUBKEY_bio: (struct bio_st*, struct rsa_st**) => struct rsa_st* 		if True		at :-1:-1
	d2i_RSA_PUBKEY_fp: (struct _IO_FILE*, struct rsa_st**) => struct rsa_st* 		if True		at :-1:-1
	d2i_SXNET: (struct SXNET_st**, const unsigned char**, signed long) => struct SXNET_st* 		if True		at :-1:-1
	d2i_SXNETID: (struct SXNET_ID_st**, const unsigned char**, signed long) => struct SXNET_ID_st* 		if True		at :-1:-1
	d2i_TS_ACCURACY: (struct TS_accuracy_st**, const unsigned char**, signed long) => struct TS_accuracy_st* 		if True		at :-1:-1
	d2i_TS_MSG_IMPRINT: (struct TS_msg_imprint_st**, const unsigned char**, signed long) => struct TS_msg_imprint_st* 		if True		at :-1:-1
	d2i_TS_MSG_IMPRINT_bio: (struct bio_st*, struct TS_msg_imprint_st**) => struct TS_msg_imprint_st* 		if True		at :-1:-1
	d2i_TS_MSG_IMPRINT_fp: (struct _IO_FILE*, struct TS_msg_imprint_st**) => struct TS_msg_imprint_st* 		if True		at :-1:-1
	d2i_TS_REQ: (struct TS_req_st**, const unsigned char**, signed long) => struct TS_req_st* 		if True		at :-1:-1
	d2i_TS_REQ_bio: (struct bio_st*, struct TS_req_st**) => struct TS_req_st* 		if True		at :-1:-1
	d2i_TS_REQ_fp: (struct _IO_FILE*, struct TS_req_st**) => struct TS_req_st* 		if True		at :-1:-1
	d2i_TS_RESP: (struct TS_resp_st**, const unsigned char**, signed long) => struct TS_resp_st* 		if True		at :-1:-1
	d2i_TS_RESP_bio: (struct bio_st*, struct TS_resp_st**) => struct TS_resp_st* 		if True		at :-1:-1
	d2i_TS_RESP_fp: (struct _IO_FILE*, struct TS_resp_st**) => struct TS_resp_st* 		if True		at :-1:-1
	d2i_TS_STATUS_INFO: (struct TS_status_info_st**, const unsigned char**, signed long) => struct TS_status_info_st* 		if True		at :-1:-1
	d2i_TS_TST_INFO: (struct TS_tst_info_st**, const unsigned char**, signed long) => struct TS_tst_info_st* 		if True		at :-1:-1
	d2i_TS_TST_INFO_bio: (struct bio_st*, struct TS_tst_info_st**) => struct TS_tst_info_st* 		if True		at :-1:-1
	d2i_TS_TST_INFO_fp: (struct _IO_FILE*, struct TS_tst_info_st**) => struct TS_tst_info_st* 		if True		at :-1:-1
	d2i_USERNOTICE: (struct USERNOTICE_st**, const unsigned char**, signed long) => struct USERNOTICE_st* 		if True		at :-1:-1
	d2i_X509: (struct x509_st**, const unsigned char**, signed long) => struct x509_st* 		if True		at :-1:-1
	d2i_X509_ALGOR: (struct X509_algor_st**, const unsigned char**, signed long) => struct X509_algor_st* 		if True		at :-1:-1
	d2i_X509_ALGORS: (struct stack_st_X509_ALGOR**, const unsigned char**, signed long) => struct stack_st_X509_ALGOR* 		if True		at :-1:-1
	d2i_X509_ATTRIBUTE: (struct x509_attributes_st**, const unsigned char**, signed long) => struct x509_attributes_st* 		if True		at :-1:-1
	d2i_X509_AUX: (struct x509_st**, const unsigned char**, signed long) => struct x509_st* 		if True		at :-1:-1
	d2i_X509_CERT_AUX: (struct x509_cert_aux_st**, const unsigned char**, signed long) => struct x509_cert_aux_st* 		if True		at :-1:-1
	d2i_X509_CERT_PAIR: (struct x509_cert_pair_st**, const unsigned char**, signed long) => struct x509_cert_pair_st* 		if True		at :-1:-1
	d2i_X509_CINF: (struct x509_cinf_st**, const unsigned char**, signed long) => struct x509_cinf_st* 		if True		at :-1:-1
	d2i_X509_CRL: (struct X509_crl_st**, const unsigned char**, signed long) => struct X509_crl_st* 		if True		at :-1:-1
	d2i_X509_CRL_INFO: (struct X509_crl_info_st**, const unsigned char**, signed long) => struct X509_crl_info_st* 		if True		at :-1:-1
	d2i_X509_CRL_bio: (struct bio_st*, struct X509_crl_st**) => struct X509_crl_st* 		if True		at :-1:-1
	d2i_X509_CRL_fp: (struct _IO_FILE*, struct X509_crl_st**) => struct X509_crl_st* 		if True		at :-1:-1
	d2i_X509_EXTENSION: (struct X509_extension_st**, const unsigned char**, signed long) => struct X509_extension_st* 		if True		at :-1:-1
	d2i_X509_EXTENSIONS: (struct stack_st_X509_EXTENSION**, const unsigned char**, signed long) => struct stack_st_X509_EXTENSION* 		if True		at :-1:-1
	d2i_X509_NAME: (struct X509_name_st**, const unsigned char**, signed long) => struct X509_name_st* 		if True		at :-1:-1
	d2i_X509_NAME_ENTRY: (struct X509_name_entry_st**, const unsigned char**, signed long) => struct X509_name_entry_st* 		if True		at :-1:-1
	d2i_X509_PKEY: (struct private_key_st**, const unsigned char**, signed long) => struct private_key_st* 		if True		at :-1:-1
	d2i_X509_PUBKEY: (struct X509_pubkey_st**, const unsigned char**, signed long) => struct X509_pubkey_st* 		if True		at :-1:-1
	d2i_X509_REQ: (struct X509_req_st**, const unsigned char**, signed long) => struct X509_req_st* 		if True		at :-1:-1
	d2i_X509_REQ_INFO: (struct X509_req_info_st**, const unsigned char**, signed long) => struct X509_req_info_st* 		if True		at :-1:-1
	d2i_X509_REQ_bio: (struct bio_st*, struct X509_req_st**) => struct X509_req_st* 		if True		at :-1:-1
	d2i_X509_REQ_fp: (struct _IO_FILE*, struct X509_req_st**) => struct X509_req_st* 		if True		at :-1:-1
	d2i_X509_REVOKED: (struct x509_revoked_st**, const unsigned char**, signed long) => struct x509_revoked_st* 		if True		at :-1:-1
	d2i_X509_SIG: (struct X509_sig_st**, const unsigned char**, signed long) => struct X509_sig_st* 		if True		at :-1:-1
	d2i_X509_VAL: (struct X509_val_st**, const unsigned char**, signed long) => struct X509_val_st* 		if True		at :-1:-1
	d2i_X509_bio: (struct bio_st*, struct x509_st**) => struct x509_st* 		if True		at :-1:-1
	d2i_X509_fp: (struct _IO_FILE*, struct x509_st**) => struct x509_st* 		if True		at :-1:-1
	destroy_ui_method: (void) => void 		if True		at :-1:-1
	dh_main: (signed int, char**) => signed int 		if True		at :-1:-1
	dhparam_main: (signed int, char**) => signed int 		if True		at :-1:-1
	do_X509_CRL_sign: (struct bio_st*, struct X509_crl_st*, struct evp_pkey_st*, const struct env_md_st*, struct stack_st_OPENSSL_STRING*) => signed int 		if True		at :-1:-1
	do_X509_REQ_sign: (struct bio_st*, struct X509_req_st*, struct evp_pkey_st*, const struct env_md_st*, struct stack_st_OPENSSL_STRING*) => signed int 		if True		at :-1:-1
	do_X509_sign: (struct bio_st*, struct x509_st*, struct evp_pkey_st*, const struct env_md_st*, struct stack_st_OPENSSL_STRING*) => signed int 		if True		at :-1:-1
	done_gost_hash_ctx: (struct gost_hash_ctx*) => void 		if True		at :-1:-1
	dsa_builtin_paramgen: (struct dsa_st*, unsigned long, unsigned long, const struct env_md_st*, const unsigned char*, unsigned long, unsigned char*, signed int*, unsigned long*, struct bn_gencb_st*) => signed int 		if True		at :-1:-1
	dsa_main: (signed int, char**) => signed int 		if True		at :-1:-1
	dsaparam_main: (signed int, char**) => signed int 		if True		at :-1:-1
	dump_cert_text: (struct bio_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	dump_certs_keys_p12: (struct bio_st*, struct {Map()}*, char*, signed int, signed int, char*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	dump_certs_pkeys_bag: (struct bio_st*, struct {Map()}*, char*, signed int, signed int, char*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	dump_certs_pkeys_bags: (struct bio_st*, struct stack_st_PKCS12_SAFEBAG*, char*, signed int, signed int, char*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	ec_GF2m_have_precompute_mult: (const struct ec_group_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_precompute_mult: (struct ec_group_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_add: (const struct ec_group_st*, struct ec_point_st*, const struct ec_point_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_cmp: (const struct ec_group_st*, const struct ec_point_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_dbl: (const struct ec_group_st*, struct ec_point_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_field_div: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_field_mul: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_field_sqr: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_group_check_discriminant: (const struct ec_group_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_group_clear_finish: (struct ec_group_st*) => void 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_group_copy: (struct ec_group_st*, const struct ec_group_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_group_finish: (struct ec_group_st*) => void 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_group_get_curve: (const struct ec_group_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_group_get_degree: (const struct ec_group_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_group_init: (struct ec_group_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_group_set_curve: (struct ec_group_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_invert: (const struct ec_group_st*, struct ec_point_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_is_at_infinity: (const struct ec_group_st*, const struct ec_point_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_is_on_curve: (const struct ec_group_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_make_affine: (const struct ec_group_st*, struct ec_point_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_mul: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, unsigned long, const struct ec_point_st*[], const struct bignum_st*[], struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_oct2point: (const struct ec_group_st*, struct ec_point_st*, const unsigned char*, unsigned long, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_point2oct: (const struct ec_group_st*, const struct ec_point_st*, unsigned int, unsigned char*, unsigned long, struct bignum_ctx*) => unsigned long 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_point_clear_finish: (struct ec_point_st*) => void 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_point_copy: (struct ec_point_st*, const struct ec_point_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_point_finish: (struct ec_point_st*) => void 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_point_get_affine_coordinates: (const struct ec_group_st*, const struct ec_point_st*, struct bignum_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_point_init: (struct ec_point_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_point_set_affine_coordinates: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_point_set_to_infinity: (const struct ec_group_st*, struct ec_point_st*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_points_make_affine: (const struct ec_group_st*, unsigned long, struct ec_point_st*[], struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GF2m_simple_set_compressed_coordinates: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, signed int, struct bignum_ctx*) => signed int 		if !def(OPENSSL_NO_EC2M)		at :-1:-1
	ec_GFp_mont_field_decode: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_mont_field_encode: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_mont_field_mul: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_mont_field_set_to_one: (const struct ec_group_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_mont_field_sqr: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_mont_group_clear_finish: (struct ec_group_st*) => void 		if True		at :-1:-1
	ec_GFp_mont_group_copy: (struct ec_group_st*, const struct ec_group_st*) => signed int 		if True		at :-1:-1
	ec_GFp_mont_group_finish: (struct ec_group_st*) => void 		if True		at :-1:-1
	ec_GFp_mont_group_init: (struct ec_group_st*) => signed int 		if True		at :-1:-1
	ec_GFp_mont_group_set_curve: (struct ec_group_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_nist_field_mul: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_nist_field_sqr: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_nist_group_copy: (struct ec_group_st*, const struct ec_group_st*) => signed int 		if True		at :-1:-1
	ec_GFp_nist_group_set_curve: (struct ec_group_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_add: (const struct ec_group_st*, struct ec_point_st*, const struct ec_point_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_cmp: (const struct ec_group_st*, const struct ec_point_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_dbl: (const struct ec_group_st*, struct ec_point_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_field_mul: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_field_sqr: (const struct ec_group_st*, struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_get_Jprojective_coordinates_GFp: (const struct ec_group_st*, const struct ec_point_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_group_check_discriminant: (const struct ec_group_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_group_clear_finish: (struct ec_group_st*) => void 		if True		at :-1:-1
	ec_GFp_simple_group_copy: (struct ec_group_st*, const struct ec_group_st*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_group_finish: (struct ec_group_st*) => void 		if True		at :-1:-1
	ec_GFp_simple_group_get_curve: (const struct ec_group_st*, struct bignum_st*, struct bignum_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_group_get_degree: (const struct ec_group_st*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_group_init: (struct ec_group_st*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_group_set_curve: (struct ec_group_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_invert: (const struct ec_group_st*, struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_is_at_infinity: (const struct ec_group_st*, const struct ec_point_st*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_is_on_curve: (const struct ec_group_st*, const struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_make_affine: (const struct ec_group_st*, struct ec_point_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_oct2point: (const struct ec_group_st*, struct ec_point_st*, const unsigned char*, unsigned long, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_point2oct: (const struct ec_group_st*, const struct ec_point_st*, unsigned int, unsigned char*, unsigned long, struct bignum_ctx*) => unsigned long 		if True		at :-1:-1
	ec_GFp_simple_point_clear_finish: (struct ec_point_st*) => void 		if True		at :-1:-1
	ec_GFp_simple_point_copy: (struct ec_point_st*, const struct ec_point_st*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_point_finish: (struct ec_point_st*) => void 		if True		at :-1:-1
	ec_GFp_simple_point_get_affine_coordinates: (const struct ec_group_st*, const struct ec_point_st*, struct bignum_st*, struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_point_init: (struct ec_point_st*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_point_set_affine_coordinates: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_point_set_to_infinity: (const struct ec_group_st*, struct ec_point_st*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_points_make_affine: (const struct ec_group_st*, unsigned long, struct ec_point_st*[], struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_set_Jprojective_coordinates_GFp: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, const struct bignum_st*, const struct bignum_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_GFp_simple_set_compressed_coordinates: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, signed int, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_asn1_group2pkparameters: (const struct ec_group_st*, struct ecpk_parameters_st*) => struct ecpk_parameters_st* 		if True		at :-1:-1
	ec_asn1_pkparameters2group: (const struct ecpk_parameters_st*) => struct ec_group_st* 		if True		at :-1:-1
	ec_main: (signed int, char**) => signed int 		if True		at :-1:-1
	ec_wNAF_have_precompute_mult: (const struct ec_group_st*) => signed int 		if True		at :-1:-1
	ec_wNAF_mul: (const struct ec_group_st*, struct ec_point_st*, const struct bignum_st*, unsigned long, const struct ec_point_st*[], const struct bignum_st*[], struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ec_wNAF_precompute_mult: (struct ec_group_st*, struct bignum_ctx*) => signed int 		if True		at :-1:-1
	ecdh_check: (struct ec_key_st*) => struct ecdh_data_st* 		if True		at :-1:-1
	ecdh_data_free: (void*) => void 		if True		at :-1:-1
	ecdsa_check: (struct ec_key_st*) => struct ecdsa_data_st* 		if True		at :-1:-1
	ecparam_main: (signed int, char**) => signed int 		if True		at :-1:-1
	enc_main: (signed int, char**) => signed int 		if True		at :-1:-1
	evp_pkey_set_cb_translate: (struct bn_gencb_st*, struct evp_pkey_ctx_st*) => void 		if True		at :-1:-1
	fcrypt_body: (unsigned int*, struct DES_ks*, unsigned int, unsigned int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	finish_hash: (struct gost_hash_ctx*, unsigned char*) => signed int 		if True		at :-1:-1
	free_index: (struct ca_db_st*) => void 		if True		at :-1:-1
	gendh_main: (signed int, char**) => signed int 		if True		at :-1:-1
	gendsa_main: (signed int, char**) => signed int 		if True		at :-1:-1
	genpkey_main: (signed int, char**) => signed int 		if True		at :-1:-1
	genrsa_main: (signed int, char**) => signed int 		if True		at :-1:-1
	get_cert_chain: (struct x509_st*, struct x509_store_st*, struct stack_st_X509**) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	get_dsa1024: () => struct dsa_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	get_dsa2048: () => struct dsa_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	get_dsa512: () => struct dsa_st* 		if !def(OPENSSL_NO_DES)		at :-1:-1
	get_mac: (unsigned char*, signed int, unsigned char*) => void 		if True		at :-1:-1
	get_rfc2409_prime_1024: (struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	get_rfc2409_prime_768: (struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	get_rfc3526_prime_1536: (struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	get_rfc3526_prime_2048: (struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	get_rfc3526_prime_3072: (struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	get_rfc3526_prime_4096: (struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	get_rfc3526_prime_6144: (struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	get_rfc3526_prime_8192: (struct bignum_st*) => struct bignum_st* 		if True		at :-1:-1
	gost_dec: (struct {Map()}*, const unsigned char*, unsigned char*, signed int) => void 		if True		at :-1:-1
	gost_dec_cfb: (struct {Map()}*, const unsigned char*, const unsigned char*, unsigned char*, signed int) => void 		if True		at :-1:-1
	gost_destroy: (struct {Map()}*) => void 		if True		at :-1:-1
	gost_enc: (struct {Map()}*, const unsigned char*, unsigned char*, signed int) => void 		if True		at :-1:-1
	gost_enc_cfb: (struct {Map()}*, const unsigned char*, const unsigned char*, unsigned char*, signed int) => void 		if True		at :-1:-1
	gost_enc_with_key: (struct {Map()}*, unsigned char*, unsigned char*, unsigned char*) => void 		if True		at :-1:-1
	gost_get_key: (struct {Map()}*, unsigned char*) => void 		if True		at :-1:-1
	gost_init: (struct {Map()}*, const struct {Map()}*) => void 		if True		at :-1:-1
	gost_key: (struct {Map()}*, const unsigned char*) => void 		if True		at :-1:-1
	gost_mac: (struct {Map()}*, signed int, const unsigned char*, unsigned int, unsigned char*) => signed int 		if True		at :-1:-1
	gost_mac_iv: (struct {Map()}*, signed int, const unsigned char*, const unsigned char*, unsigned int, unsigned char*) => signed int 		if True		at :-1:-1
	gostcrypt: (struct {Map()}*, const unsigned char*, unsigned char*) => void 		if True		at :-1:-1
	gostdecrypt: (struct {Map()}*, const unsigned char*, unsigned char*) => void 		if True		at :-1:-1
	h__dump: (unsigned char*, signed int) => void 		if def(DEBUG_KEYGEN)		at :-1:-1
	hash_block: (struct gost_hash_ctx*, const unsigned char*, unsigned long) => signed int 		if True		at :-1:-1
	hex_prin: (struct bio_st*, unsigned char*, signed int) => void 		if !def(OPENSSL_NO_DES)		at :-1:-1
	hex_to_string: (const unsigned char*, signed long) => char* 		if True		at :-1:-1
	i2a_ACCESS_DESCRIPTION: (struct bio_st*, struct ACCESS_DESCRIPTION_st*) => signed int 		if True		at :-1:-1
	i2a_ASN1_ENUMERATED: (struct bio_st*, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	i2a_ASN1_INTEGER: (struct bio_st*, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	i2a_ASN1_OBJECT: (struct bio_st*, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	i2a_ASN1_STRING: (struct bio_st*, struct asn1_string_st*, signed int) => signed int 		if True		at :-1:-1
	i2b_PVK_bio: (struct bio_st*, struct evp_pkey_st*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	i2b_PrivateKey_bio: (struct bio_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	i2b_PublicKey_bio: (struct bio_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	i2c_ASN1_BIT_STRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2c_ASN1_INTEGER: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ACCESS_DESCRIPTION: (struct ACCESS_DESCRIPTION_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_BIT_STRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_BMPSTRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_BOOLEAN: (signed int, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_ENUMERATED: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_GENERALIZEDTIME: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_GENERALSTRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_IA5STRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_INTEGER: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_NULL: (signed int*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_OBJECT: (struct asn1_object_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_OCTET_STRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_PRINTABLE: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_PRINTABLESTRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_SEQUENCE_ANY: (const struct stack_st_ASN1_TYPE*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_SET: (struct stack_st_OPENSSL_BLOCK*, unsigned char**, (void*, unsigned char**) => signed int*, signed int, signed int, signed int) => signed int 		if !def(NO_ASN1_OLD)		at :-1:-1
	i2d_ASN1_SET_ANY: (const struct stack_st_ASN1_TYPE*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_T61STRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_TIME: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_TYPE: (struct asn1_type_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_UNIVERSALSTRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_UTCTIME: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_UTF8STRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_VISIBLESTRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ASN1_bio_stream: (struct bio_st*, struct ASN1_VALUE_st*, struct bio_st*, signed int, const struct ASN1_ITEM_st*) => signed int 		if True		at :-1:-1
	i2d_ASN1_bytes: (struct asn1_string_st*, unsigned char**, signed int, signed int) => signed int 		if True		at :-1:-1
	i2d_AUTHORITY_INFO_ACCESS: (struct stack_st_ACCESS_DESCRIPTION*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_AUTHORITY_KEYID: (struct AUTHORITY_KEYID_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_BASIC_CONSTRAINTS: (struct BASIC_CONSTRAINTS_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_CERTIFICATEPOLICIES: (struct stack_st_POLICYINFO*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_CMS_ContentInfo: (struct CMS_ContentInfo_st*, unsigned char**) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	i2d_CMS_ReceiptRequest: (struct CMS_ReceiptRequest_st*, unsigned char**) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	i2d_CMS_bio: (struct bio_st*, struct CMS_ContentInfo_st*) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	i2d_CMS_bio_stream: (struct bio_st*, struct CMS_ContentInfo_st*, struct bio_st*, signed int) => signed int 		if !def(OPENSSL_NO_CMS)		at :-1:-1
	i2d_CRL_DIST_POINTS: (struct stack_st_DIST_POINT*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_DHparams: (const struct dh_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_DIRECTORYSTRING: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_DISPLAYTEXT: (struct asn1_string_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_DIST_POINT: (struct DIST_POINT_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_DIST_POINT_NAME: (struct DIST_POINT_NAME_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_DSAPrivateKey: (const struct dsa_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_DSAPrivateKey_bio: (struct bio_st*, struct dsa_st*) => signed int 		if True		at :-1:-1
	i2d_DSAPrivateKey_fp: (struct _IO_FILE*, struct dsa_st*) => signed int 		if True		at :-1:-1
	i2d_DSAPublicKey: (const struct dsa_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_DSA_PUBKEY: (struct dsa_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_DSA_PUBKEY_bio: (struct bio_st*, struct dsa_st*) => signed int 		if True		at :-1:-1
	i2d_DSA_PUBKEY_fp: (struct _IO_FILE*, struct dsa_st*) => signed int 		if True		at :-1:-1
	i2d_DSA_SIG: (const struct DSA_SIG_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_DSAparams: (const struct dsa_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ECDSA_SIG: (const struct ECDSA_SIG_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ECPKPARAMETERS: (const struct ecpk_parameters_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ECPKParameters: (const struct ec_group_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ECParameters: (struct ec_key_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ECPrivateKey: (struct ec_key_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ECPrivateKey_bio: (struct bio_st*, struct ec_key_st*) => signed int 		if True		at :-1:-1
	i2d_ECPrivateKey_fp: (struct _IO_FILE*, struct ec_key_st*) => signed int 		if True		at :-1:-1
	i2d_EC_PRIVATEKEY: (const struct ec_privatekey_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_EC_PUBKEY: (struct ec_key_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_EC_PUBKEY_bio: (struct bio_st*, struct ec_key_st*) => signed int 		if True		at :-1:-1
	i2d_EC_PUBKEY_fp: (struct _IO_FILE*, struct ec_key_st*) => signed int 		if True		at :-1:-1
	i2d_EDIPARTYNAME: (struct EDIPartyName_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ESS_CERT_ID: (const struct ESS_cert_id*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ESS_ISSUER_SERIAL: (const struct ESS_issuer_serial*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ESS_SIGNING_CERT: (const struct ESS_signing_cert*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_EXTENDED_KEY_USAGE: (struct stack_st_ASN1_OBJECT*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_GENERAL_NAME: (struct GENERAL_NAME_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_GENERAL_NAMES: (struct stack_st_GENERAL_NAME*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_ISSUING_DIST_POINT: (struct ISSUING_DIST_POINT_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_APREQ: (struct stack_st_KRB5_APREQBODY*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_APREQBODY: (struct krb5_ap_req_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_AUTHDATA: (struct krb5_authorization_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_AUTHENT: (struct stack_st_KRB5_AUTHENTBODY*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_AUTHENTBODY: (struct krb5_authenticator_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_CHECKSUM: (struct krb5_checksum_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_ENCDATA: (struct krb5_encdata_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_ENCKEY: (struct krb5_encryptionkey_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_PRINCNAME: (struct krb5_princname_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_TICKET: (struct stack_st_KRB5_TKTBODY*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_KRB5_TKTBODY: (struct krb5_tktbody_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_NETSCAPE_CERT_SEQUENCE: (struct Netscape_certificate_sequence*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_NETSCAPE_ENCRYPTED_PKEY: (const struct netscape_encrypted_pkey_st*, unsigned char**) => signed int 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	i2d_NETSCAPE_PKEY: (const struct netscape_pkey_st*, unsigned char**) => signed int 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	i2d_NETSCAPE_SPKAC: (struct Netscape_spkac_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_NETSCAPE_SPKI: (struct Netscape_spki_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_NETSCAPE_X509: (struct NETSCAPE_X509_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_NOTICEREF: (struct NOTICEREF_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_Netscape_RSA: (const struct rsa_st*, unsigned char**, (char*, signed int, const char*, signed int) => signed int*) => signed int 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	i2d_OCSP_BASICRESP: (struct ocsp_basic_response_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_CERTID: (struct ocsp_cert_id_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_CERTSTATUS: (struct ocsp_cert_status_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_CRLID: (struct ocsp_crl_id_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_ONEREQ: (struct ocsp_one_request_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_REQINFO: (struct ocsp_req_info_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_REQUEST: (struct ocsp_request_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_RESPBYTES: (struct ocsp_resp_bytes_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_RESPDATA: (struct ocsp_response_data_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_RESPID: (struct ocsp_responder_id_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_RESPONSE: (struct ocsp_response_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_REVOKEDINFO: (struct ocsp_revoked_info_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_SERVICELOC: (struct ocsp_service_locator_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_SIGNATURE: (struct ocsp_signature_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OCSP_SINGLERESP: (struct ocsp_single_response_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_OTHERNAME: (struct otherName_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PBE2PARAM: (struct PBE2PARAM_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PBEPARAM: (struct PBEPARAM_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PBKDF2PARAM: (struct PBKDF2PARAM_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS12: (struct {Map()}*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS12_BAGS: (struct pkcs12_bag_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS12_MAC_DATA: (struct {Map()}*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS12_SAFEBAG: (struct {Map()}*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS12_bio: (struct bio_st*, struct {Map()}*) => signed int 		if True		at :-1:-1
	i2d_PKCS12_fp: (struct _IO_FILE*, struct {Map()}*) => signed int 		if True		at :-1:-1
	i2d_PKCS7: (struct pkcs7_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_DIGEST: (struct pkcs7_digest_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_ENCRYPT: (struct pkcs7_encrypted_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_ENC_CONTENT: (struct pkcs7_enc_content_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_ENVELOPE: (struct pkcs7_enveloped_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_ISSUER_AND_SERIAL: (struct pkcs7_issuer_and_serial_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_NDEF: (struct pkcs7_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_RECIP_INFO: (struct pkcs7_recip_info_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_SIGNED: (struct pkcs7_signed_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_SIGNER_INFO: (struct pkcs7_signer_info_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_SIGN_ENVELOPE: (struct pkcs7_signedandenveloped_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS7_bio: (struct bio_st*, struct pkcs7_st*) => signed int 		if True		at :-1:-1
	i2d_PKCS7_bio_stream: (struct bio_st*, struct pkcs7_st*, struct bio_st*, signed int) => signed int 		if True		at :-1:-1
	i2d_PKCS7_fp: (struct _IO_FILE*, struct pkcs7_st*) => signed int 		if True		at :-1:-1
	i2d_PKCS8PrivateKeyInfo_bio: (struct bio_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	i2d_PKCS8PrivateKeyInfo_fp: (struct _IO_FILE*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	i2d_PKCS8PrivateKey_bio: (struct bio_st*, struct evp_pkey_st*, const struct evp_cipher_st*, char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	i2d_PKCS8PrivateKey_fp: (struct _IO_FILE*, struct evp_pkey_st*, const struct evp_cipher_st*, char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	i2d_PKCS8PrivateKey_nid_bio: (struct bio_st*, struct evp_pkey_st*, signed int, char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	i2d_PKCS8PrivateKey_nid_fp: (struct _IO_FILE*, struct evp_pkey_st*, signed int, char*, signed int, (char*, signed int, signed int, void*) => signed int*, void*) => signed int 		if True		at :-1:-1
	i2d_PKCS8_PRIV_KEY_INFO: (struct pkcs8_priv_key_info_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PKCS8_PRIV_KEY_INFO_bio: (struct bio_st*, struct pkcs8_priv_key_info_st*) => signed int 		if True		at :-1:-1
	i2d_PKCS8_PRIV_KEY_INFO_fp: (struct _IO_FILE*, struct pkcs8_priv_key_info_st*) => signed int 		if True		at :-1:-1
	i2d_PKCS8_bio: (struct bio_st*, struct X509_sig_st*) => signed int 		if True		at :-1:-1
	i2d_PKCS8_fp: (struct _IO_FILE*, struct X509_sig_st*) => signed int 		if True		at :-1:-1
	i2d_PKEY_USAGE_PERIOD: (struct PKEY_USAGE_PERIOD_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_POLICYINFO: (struct POLICYINFO_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_POLICYQUALINFO: (struct POLICYQUALINFO_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PROXY_CERT_INFO_EXTENSION: (struct PROXY_CERT_INFO_EXTENSION_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PROXY_POLICY: (struct PROXY_POLICY_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PUBKEY: (struct evp_pkey_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PUBKEY_bio: (struct bio_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	i2d_PUBKEY_fp: (struct _IO_FILE*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	i2d_PrivateKey: (struct evp_pkey_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_PrivateKey_bio: (struct bio_st*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	i2d_PrivateKey_fp: (struct _IO_FILE*, struct evp_pkey_st*) => signed int 		if True		at :-1:-1
	i2d_PublicKey: (struct evp_pkey_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_RSAPrivateKey: (const struct rsa_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_RSAPrivateKey_bio: (struct bio_st*, struct rsa_st*) => signed int 		if True		at :-1:-1
	i2d_RSAPrivateKey_fp: (struct _IO_FILE*, struct rsa_st*) => signed int 		if True		at :-1:-1
	i2d_RSAPublicKey: (const struct rsa_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_RSAPublicKey_bio: (struct bio_st*, struct rsa_st*) => signed int 		if True		at :-1:-1
	i2d_RSAPublicKey_fp: (struct _IO_FILE*, struct rsa_st*) => signed int 		if True		at :-1:-1
	i2d_RSA_NET: (const struct rsa_st*, unsigned char**, (char*, signed int, const char*, signed int) => signed int*, signed int) => signed int 		if !def(OPENSSL_NO_RC4)		at :-1:-1
	i2d_RSA_PSS_PARAMS: (struct rsa_pss_params_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_RSA_PUBKEY: (struct rsa_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_RSA_PUBKEY_bio: (struct bio_st*, struct rsa_st*) => signed int 		if True		at :-1:-1
	i2d_RSA_PUBKEY_fp: (struct _IO_FILE*, struct rsa_st*) => signed int 		if True		at :-1:-1
	i2d_SXNET: (struct SXNET_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_SXNETID: (struct SXNET_ID_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_TS_ACCURACY: (const struct TS_accuracy_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_TS_MSG_IMPRINT: (const struct TS_msg_imprint_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_TS_MSG_IMPRINT_bio: (struct bio_st*, struct TS_msg_imprint_st*) => signed int 		if True		at :-1:-1
	i2d_TS_MSG_IMPRINT_fp: (struct _IO_FILE*, struct TS_msg_imprint_st*) => signed int 		if True		at :-1:-1
	i2d_TS_REQ: (const struct TS_req_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_TS_REQ_bio: (struct bio_st*, struct TS_req_st*) => signed int 		if True		at :-1:-1
	i2d_TS_REQ_fp: (struct _IO_FILE*, struct TS_req_st*) => signed int 		if True		at :-1:-1
	i2d_TS_RESP: (const struct TS_resp_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_TS_RESP_bio: (struct bio_st*, struct TS_resp_st*) => signed int 		if True		at :-1:-1
	i2d_TS_RESP_fp: (struct _IO_FILE*, struct TS_resp_st*) => signed int 		if True		at :-1:-1
	i2d_TS_STATUS_INFO: (const struct TS_status_info_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_TS_TST_INFO: (const struct TS_tst_info_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_TS_TST_INFO_bio: (struct bio_st*, struct TS_tst_info_st*) => signed int 		if True		at :-1:-1
	i2d_TS_TST_INFO_fp: (struct _IO_FILE*, struct TS_tst_info_st*) => signed int 		if True		at :-1:-1
	i2d_USERNOTICE: (struct USERNOTICE_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509: (struct x509_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_ALGOR: (struct X509_algor_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_ALGORS: (struct stack_st_X509_ALGOR*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_ATTRIBUTE: (struct x509_attributes_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_AUX: (struct x509_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_CERT_AUX: (struct x509_cert_aux_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_CERT_PAIR: (struct x509_cert_pair_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_CINF: (struct x509_cinf_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_CRL: (struct X509_crl_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_CRL_INFO: (struct X509_crl_info_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_CRL_bio: (struct bio_st*, struct X509_crl_st*) => signed int 		if True		at :-1:-1
	i2d_X509_CRL_fp: (struct _IO_FILE*, struct X509_crl_st*) => signed int 		if True		at :-1:-1
	i2d_X509_EXTENSION: (struct X509_extension_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_EXTENSIONS: (struct stack_st_X509_EXTENSION*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_NAME: (struct X509_name_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_NAME_ENTRY: (struct X509_name_entry_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_PKEY: (struct private_key_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_PUBKEY: (struct X509_pubkey_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_REQ: (struct X509_req_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_REQ_INFO: (struct X509_req_info_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_REQ_bio: (struct bio_st*, struct X509_req_st*) => signed int 		if True		at :-1:-1
	i2d_X509_REQ_fp: (struct _IO_FILE*, struct X509_req_st*) => signed int 		if True		at :-1:-1
	i2d_X509_REVOKED: (struct x509_revoked_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_SIG: (struct X509_sig_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_VAL: (struct X509_val_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2d_X509_bio: (struct bio_st*, struct x509_st*) => signed int 		if True		at :-1:-1
	i2d_X509_fp: (struct _IO_FILE*, struct x509_st*) => signed int 		if True		at :-1:-1
	i2o_ECPublicKey: (struct ec_key_st*, unsigned char**) => signed int 		if True		at :-1:-1
	i2s_ASN1_ENUMERATED: (struct v3_ext_method*, struct asn1_string_st*) => char* 		if True		at :-1:-1
	i2s_ASN1_ENUMERATED_TABLE: (struct v3_ext_method*, struct asn1_string_st*) => char* 		if True		at :-1:-1
	i2s_ASN1_INTEGER: (struct v3_ext_method*, struct asn1_string_st*) => char* 		if True		at :-1:-1
	i2s_ASN1_OCTET_STRING: (struct v3_ext_method*, struct asn1_string_st*) => char* 		if True		at :-1:-1
	i2t_ASN1_OBJECT: (char*, signed int, struct asn1_object_st*) => signed int 		if True		at :-1:-1
	i2v_ASN1_BIT_STRING: (struct v3_ext_method*, struct asn1_string_st*, struct stack_st_CONF_VALUE*) => struct stack_st_CONF_VALUE* 		if True		at :-1:-1
	i2v_GENERAL_NAME: (struct v3_ext_method*, struct GENERAL_NAME_st*, struct stack_st_CONF_VALUE*) => struct stack_st_CONF_VALUE* 		if True		at :-1:-1
	i2v_GENERAL_NAMES: (struct v3_ext_method*, struct stack_st_GENERAL_NAME*, struct stack_st_CONF_VALUE*) => struct stack_st_CONF_VALUE* 		if True		at :-1:-1
	idea_cbc_encrypt: (const unsigned char*, unsigned char*, signed long, struct idea_key_st*, unsigned char*, signed int) => void 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	idea_cfb64_encrypt: (const unsigned char*, unsigned char*, signed long, struct idea_key_st*, unsigned char*, signed int*, signed int) => void 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	idea_ecb_encrypt: (const unsigned char*, unsigned char*, struct idea_key_st*) => void 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	idea_encrypt: (unsigned long*, struct idea_key_st*) => void 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	idea_ofb64_encrypt: (const unsigned char*, unsigned char*, signed long, struct idea_key_st*, unsigned char*, signed int*) => void 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	idea_options: (void) => const char* 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	idea_set_decrypt_key: (struct idea_key_st*, struct idea_key_st*) => void 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	idea_set_encrypt_key: (const unsigned char*, struct idea_key_st*) => void 		if !def(OPENSSL_NO_IDEA)		at :-1:-1
	index_index: (struct ca_db_st*) => signed int 		if True		at :-1:-1
	index_name_cmp: (const char**, const char**) => signed int 		if True		at :-1:-1
	init_gen_str: (struct bio_st*, struct evp_pkey_ctx_st**, const char*, struct engine_st*, signed int) => signed int 		if True		at :-1:-1
	init_gost_hash_ctx: (struct gost_hash_ctx*, const struct {Map()}*) => signed int 		if True		at :-1:-1
	int_rsa_verify: (signed int, const unsigned char*, unsigned int, unsigned char*, unsigned long*, const unsigned char*, unsigned long, struct rsa_st*) => signed int 		if True		at :-1:-1
	keyDiversifyCryptoPro: (struct {Map()}*, const unsigned char*, const unsigned char*, unsigned char*) => void 		if True		at :-1:-1
	keyUnwrapCryptoPro: (struct {Map()}*, const unsigned char*, const unsigned char*, unsigned char*) => signed int 		if True		at :-1:-1
	keyWrapCryptoPro: (struct {Map()}*, const unsigned char*, const unsigned char*, const unsigned char*, unsigned char*) => signed int 		if True		at :-1:-1
	level_add_node: (struct X509_POLICY_LEVEL_st*, const struct X509_POLICY_DATA_st*, struct X509_POLICY_NODE_st*, struct X509_POLICY_TREE_st*) => struct X509_POLICY_NODE_st* 		if True		at :-1:-1
	level_find_node: (const struct X509_POLICY_LEVEL_st*, const struct X509_POLICY_NODE_st*, const struct asn1_object_st*) => struct X509_POLICY_NODE_st* 		if True		at :-1:-1
	lh_delete: (struct lhash_st*, const void*) => void* 		if True		at :-1:-1
	lh_doall: (struct lhash_st*, (void*) => void*) => void 		if True		at :-1:-1
	lh_doall_arg: (struct lhash_st*, (void*, void*) => void*, void*) => void 		if True		at :-1:-1
	lh_free: (struct lhash_st*) => void 		if True		at :-1:-1
	lh_insert: (struct lhash_st*, void*) => void* 		if True		at :-1:-1
	lh_new: ((const void*) => unsigned long*, (const void*, const void*) => signed int*) => struct lhash_st* 		if True		at :-1:-1
	lh_node_stats: (const struct lhash_st*, struct _IO_FILE*) => void 		if True		at :-1:-1
	lh_node_stats_bio: (const struct lhash_st*, struct bio_st*) => void 		if True		at :-1:-1
	lh_node_usage_stats: (const struct lhash_st*, struct _IO_FILE*) => void 		if True		at :-1:-1
	lh_node_usage_stats_bio: (const struct lhash_st*, struct bio_st*) => void 		if True		at :-1:-1
	lh_num_items: (const struct lhash_st*) => unsigned long 		if True		at :-1:-1
	lh_retrieve: (struct lhash_st*, const void*) => void* 		if True		at :-1:-1
	lh_stats: (const struct lhash_st*, struct _IO_FILE*) => void 		if True		at :-1:-1
	lh_stats_bio: (const struct lhash_st*, struct bio_st*) => void 		if True		at :-1:-1
	lh_strhash: (const char*) => unsigned long 		if True		at :-1:-1
	load_cert: (struct bio_st*, const char*, signed int, const char*, struct engine_st*, const char*) => struct x509_st* 		if True		at :-1:-1
	load_certs: (struct bio_st*, const char*, signed int, const char*, struct engine_st*, const char*) => struct stack_st_X509* 		if True		at :-1:-1
	load_config: (struct bio_st*, struct conf_st*) => signed int 		if True		at :-1:-1
	load_crls: (struct bio_st*, const char*, signed int, const char*, struct engine_st*, const char*) => struct stack_st_X509_CRL* 		if True		at :-1:-1
	load_index: (char*, struct db_attr_st*) => struct ca_db_st* 		if True		at :-1:-1
	load_key: (struct bio_st*, const char*, signed int, signed int, const char*, struct engine_st*, const char*) => struct evp_pkey_st* 		if True		at :-1:-1
	load_pubkey: (struct bio_st*, const char*, signed int, signed int, const char*, struct engine_st*, const char*) => struct evp_pkey_st* 		if True		at :-1:-1
	load_serial: (char*, signed int, struct asn1_string_st**) => struct bignum_st* 		if True		at :-1:-1
	mac_block: (struct {Map()}*, unsigned char*, const unsigned char*) => void 		if True		at :-1:-1
	main: () => signed int 		if def(STRING_TABLE_TEST)		at :-1:-1
	main: (signed int, char**) => signed int 		if def(AES_WRAP_TEST)		at :-1:-1
	make_config_name: () => char* 		if True		at :-1:-1
	make_revocation_str: (signed int, char*) => char* 		if True		at :-1:-1
	make_revoked: (struct x509_revoked_st*, const char*) => signed int 		if True		at :-1:-1
	md4_block_data_order: (struct MD4state_st*, const void*, unsigned long) => void 		if (!def(OPENSSL_NO_MD4)&!def(md4_block_data_order))		at :-1:-1
	name_cmp: (const char*, const char*) => signed int 		if True		at :-1:-1
	next_protos_parse: (unsigned short*, const char*) => unsigned char* 		if !def(OPENSSL_NO_NEXTPROTONEG)		at :-1:-1
	nseq_main: (signed int, char**) => signed int 		if True		at :-1:-1
	o2i_ECPublicKey: (struct ec_key_st**, const unsigned char**, signed long) => struct ec_key_st* 		if True		at :-1:-1
	old_entry_print: (struct bio_st*, struct asn1_object_st*, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	parse_name: (char*, signed long, signed int) => struct X509_name_st* 		if True		at :-1:-1
	parse_yesno: (const char*, signed int) => signed int 		if True		at :-1:-1
	passwd_main: (signed int, char**) => signed int 		if True		at :-1:-1
	password_callback: (char*, signed int, signed int, struct pw_cb_data*) => signed int 		if True		at :-1:-1
	pem_check_suffix: (const char*, const char*) => signed int 		if True		at :-1:-1
	pitem_free: (struct _pitem*) => void 		if True		at :-1:-1
	pitem_new: (unsigned char*, void*) => struct _pitem* 		if True		at :-1:-1
	pkcs12_main: (signed int, char**) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	pkcs7_main: (signed int, char**) => signed int 		if True		at :-1:-1
	pkcs8_main: (signed int, char**) => signed int 		if True		at :-1:-1
	pkey_ctrl_string: (struct evp_pkey_ctx_st*, char*) => signed int 		if True		at :-1:-1
	pkey_main: (signed int, char**) => signed int 		if True		at :-1:-1
	pkeyparam_main: (signed int, char**) => signed int 		if True		at :-1:-1
	pkeyutl_main: (signed int, char**) => signed int 		if True		at :-1:-1
	policies_print: (struct bio_st*, struct x509_store_ctx_st*) => void 		if True		at :-1:-1
	policy_cache_find_data: (const struct X509_POLICY_CACHE_st*, const struct asn1_object_st*) => struct X509_POLICY_DATA_st* 		if True		at :-1:-1
	policy_cache_free: (struct X509_POLICY_CACHE_st*) => void 		if True		at :-1:-1
	policy_cache_set: (struct x509_st*) => const struct X509_POLICY_CACHE_st* 		if True		at :-1:-1
	policy_cache_set_mapping: (struct x509_st*, struct stack_st_POLICY_MAPPING*) => signed int 		if True		at :-1:-1
	policy_data_free: (struct X509_POLICY_DATA_st*) => void 		if True		at :-1:-1
	policy_data_new: (struct POLICYINFO_st*, const struct asn1_object_st*, signed int) => struct X509_POLICY_DATA_st* 		if True		at :-1:-1
	policy_node_cmp_new: (void) => struct stack_st_X509_POLICY_NODE* 		if True		at :-1:-1
	policy_node_free: (struct X509_POLICY_NODE_st*) => void 		if True		at :-1:-1
	policy_node_match: (const struct X509_POLICY_LEVEL_st*, const struct X509_POLICY_NODE_st*, const struct asn1_object_st*) => signed int 		if True		at :-1:-1
	pqueue_find: (struct _pqueue*, unsigned char*) => struct _pitem* 		if True		at :-1:-1
	pqueue_free: (struct _pqueue*) => void 		if True		at :-1:-1
	pqueue_insert: (struct _pqueue*, struct _pitem*) => struct _pitem* 		if True		at :-1:-1
	pqueue_iterator: (struct _pqueue*) => struct _pitem* 		if True		at :-1:-1
	pqueue_new: () => struct _pqueue* 		if True		at :-1:-1
	pqueue_next: (struct _pitem**) => struct _pitem* 		if True		at :-1:-1
	pqueue_peek: (struct _pqueue*) => struct _pitem* 		if True		at :-1:-1
	pqueue_pop: (struct _pqueue*) => struct _pitem* 		if True		at :-1:-1
	pqueue_print: (struct _pqueue*) => void 		if True		at :-1:-1
	pqueue_size: (struct _pqueue*) => signed int 		if True		at :-1:-1
	prime_main: (signed int, char**) => signed int 		if True		at :-1:-1
	print_attribs: (struct bio_st*, struct stack_st_X509_ATTRIBUTE*, const char*) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	print_name: (struct bio_st*, const char*, struct X509_name_st*, unsigned long) => void 		if True		at :-1:-1
	private_Camellia_set_key: (const unsigned char*, const signed int, struct camellia_key_st*) => signed int 		if !def(OPENSSL_NO_CAMELLIA)		at :-1:-1
	program_name: (char*, char*, signed int) => void 		if True		at :-1:-1
	rand_main: (signed int, char**) => signed int 		if True		at :-1:-1
	rand_serial: (struct bignum_st*, struct asn1_string_st*) => signed int 		if True		at :-1:-1
	raw_read_stdin: (void*, signed int) => signed int 		if True		at :-1:-1
	raw_write_stdout: (const void*, signed int) => signed int 		if True		at :-1:-1
	req_main: (signed int, char**) => signed int 		if True		at :-1:-1
	ripemd160_block_data_order: (struct RIPEMD160state_st*, const void*, unsigned long) => void 		if (!def(OPENSSL_NO_RIPEMD)&!def(ripemd160_block_data_order))		at :-1:-1
	rotate_index: (const char*, const char*, const char*) => signed int 		if True		at :-1:-1
	rotate_serial: (char*, char*, char*) => signed int 		if True		at :-1:-1
	rsa_main: (signed int, char**) => signed int 		if True		at :-1:-1
	rsautl_main: (signed int, char**) => signed int 		if True		at :-1:-1
	s2i_ASN1_INTEGER: (struct v3_ext_method*, char*) => struct asn1_string_st* 		if True		at :-1:-1
	s2i_ASN1_OCTET_STRING: (struct v3_ext_method*, struct v3_ext_ctx*, char*) => struct asn1_string_st* 		if True		at :-1:-1
	save_index: (const char*, const char*, struct ca_db_st*) => signed int 		if True		at :-1:-1
	save_serial: (char*, char*, struct bignum_st*, struct asn1_string_st**) => signed int 		if True		at :-1:-1
	set_cert_ex: (unsigned long*, const char*) => signed int 		if True		at :-1:-1
	set_ext_copy: (signed int*, const char*) => signed int 		if True		at :-1:-1
	set_hex: (char*, unsigned char*, signed int) => signed int 		if True		at :-1:-1
	set_name_ex: (unsigned long*, const char*) => signed int 		if True		at :-1:-1
	setup_ui_method: (void) => signed int 		if True		at :-1:-1
	setup_verify: (struct bio_st*, char*, char*) => struct x509_store_st* 		if True		at :-1:-1
	sk_delete: (struct stack_st*, signed int) => void* 		if True		at :-1:-1
	sk_delete_ptr: (struct stack_st*, void*) => void* 		if True		at :-1:-1
	sk_dup: (struct stack_st*) => struct stack_st* 		if True		at :-1:-1
	sk_find: (struct stack_st*, void*) => signed int 		if True		at :-1:-1
	sk_find_ex: (struct stack_st*, void*) => signed int 		if True		at :-1:-1
	sk_free: (struct stack_st*) => void 		if True		at :-1:-1
	sk_insert: (struct stack_st*, void*, signed int) => signed int 		if True		at :-1:-1
	sk_is_sorted: (const struct stack_st*) => signed int 		if True		at :-1:-1
	sk_new: ((const void*, const void*) => signed int*) => struct stack_st* 		if True		at :-1:-1
	sk_new_null: (void) => struct stack_st* 		if True		at :-1:-1
	sk_num: (const struct stack_st*) => signed int 		if True		at :-1:-1
	sk_pop: (struct stack_st*) => void* 		if True		at :-1:-1
	sk_pop_free: (struct stack_st*, (void*) => void*) => void 		if True		at :-1:-1
	sk_push: (struct stack_st*, void*) => signed int 		if True		at :-1:-1
	sk_set: (struct stack_st*, signed int, void*) => void* 		if True		at :-1:-1
	sk_set_cmp_func: (struct stack_st*, (const void*, const void*) => signed int*) => (const void*, const void*) => signed int* 		if True		at :-1:-1
	sk_shift: (struct stack_st*) => void* 		if True		at :-1:-1
	sk_sort: (struct stack_st*) => void 		if True		at :-1:-1
	sk_unshift: (struct stack_st*, void*) => signed int 		if True		at :-1:-1
	sk_value: (const struct stack_st*, signed int) => void* 		if True		at :-1:-1
	sk_zero: (struct stack_st*) => void 		if True		at :-1:-1
	smime_main: (signed int, char**) => signed int 		if True		at :-1:-1
	speed_main: (signed int, char**) => signed int 		if !def(OPENSSL_NO_DES)		at :-1:-1
	spkac_main: (signed int, char**) => signed int 		if True		at :-1:-1
	srp_main: (signed int, char**) => signed int 		if !def(OPENSSL_NO_SRP)		at :-1:-1
	start_hash: (struct gost_hash_ctx*) => signed int 		if True		at :-1:-1
	str2fmt: (char*) => signed int 		if True		at :-1:-1
	string_to_hex: (const char*, signed long*) => unsigned char* 		if True		at :-1:-1
	tree_find_sk: (struct stack_st_X509_POLICY_NODE*, const struct asn1_object_st*) => struct X509_POLICY_NODE_st* 		if True		at :-1:-1
	ts_main: (signed int, char**) => signed int 		if True		at :-1:-1
	unpack_revinfo: (struct asn1_string_st**, signed int*, struct asn1_object_st**, struct asn1_string_st**, const char*) => signed int 		if True		at :-1:-1
	v2i_ASN1_BIT_STRING: (struct v3_ext_method*, struct v3_ext_ctx*, struct stack_st_CONF_VALUE*) => struct asn1_string_st* 		if True		at :-1:-1
	v2i_GENERAL_NAME: (const struct v3_ext_method*, struct v3_ext_ctx*, struct {Map()}*) => struct GENERAL_NAME_st* 		if True		at :-1:-1
	v2i_GENERAL_NAMES: (const struct v3_ext_method*, struct v3_ext_ctx*, struct stack_st_CONF_VALUE*) => struct stack_st_GENERAL_NAME* 		if True		at :-1:-1
	v2i_GENERAL_NAME_ex: (struct GENERAL_NAME_st*, const struct v3_ext_method*, struct v3_ext_ctx*, struct {Map()}*, signed int) => struct GENERAL_NAME_st* 		if True		at :-1:-1
	verify_main: (signed int, char**) => signed int 		if True		at :-1:-1
	version_main: (signed int, char**) => signed int 		if True		at :-1:-1
	x509_main: (signed int, char**) => signed int 		if True		at :-1:-1
