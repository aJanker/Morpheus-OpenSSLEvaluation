<?xml version='1.0' encoding='UTF-8'?>
<interface>
            <featuremodel>
                (!definedEx(SELFTEST) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_NURON) || definedEx(OPENSSL_NO_HW_CSWIFT)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || ((definedEx(__i386__) || ((definedEx(__i386) || definedEx(OPENSSL_NO_INLINE_ASM) || definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || !definedEx(OPENSSL_NO_INLINE_ASM) || definedEx(OPENSSL_NO_ENGINE))) || definedEx(OPENSSL_NO_HW_PADLOCK)) &amp;&amp; (!definedEx(__i386__) || definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || !definedEx(OPENSSL_NO_INLINE_ASM) || definedEx(OPENSSL_NO_HW_PADLOCK)) &amp;&amp; (!definedEx(__i386__) || definedEx(OPENSSL_NO_INLINE_ASM) || (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) &amp;&amp; !definedEx(DYNAMIC_ENGINE)) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_PADLOCK)) &amp;&amp; (definedEx(__i386__) || definedEx(OPENSSL_NO_INLINE_ASM) || !definedEx(__i386) || (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) &amp;&amp; !definedEx(DYNAMIC_ENGINE)) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_PADLOCK)))) &amp;&amp; (((definedEx(OPENSSL_NO_ENGINE) || definedEx(_CRAY) || definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_GMP)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || !definedEx(OPENSSL_NO_GMP)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_NURON)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_CSWIFT))) || ((definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_ATALLA)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_AEP)))) &amp;&amp; definedEx(OPENSSL_NO_HMAC) &amp;&amp; !definedEx(GOST_LIB_NAME) &amp;&amp; (!definedEx(AES_WRAP_TEST) || (!definedEx(TEST) &amp;&amp; (definedEx(OPENSSL_NO_HMAC) || !definedEx(DO_TEST)))) &amp;&amp; definedEx(OPENSSL_NO_ERR) &amp;&amp; ((!definedEx(AES_WRAP_TEST) &amp;&amp; !definedEx(TEST) &amp;&amp; (definedEx(OPENSSL_NO_HMAC) || !definedEx(DO_TEST))) || (!definedEx(TEST) &amp;&amp; !definedEx(STRING_TABLE_TEST))) &amp;&amp; (!definedEx(TEST) || !definedEx(STRING_TABLE_TEST)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_AEP) || definedEx(OPENSSL_NO_HW_ATALLA)) &amp;&amp; (((definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_CSWIFT)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_NURON))) || ((definedEx(OPENSSL_NO_ENGINE) || definedEx(_CRAY) || definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_GMP)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || !definedEx(OPENSSL_NO_GMP)))) &amp;&amp; (definedEx(OPENSSL_NO_CMS) || definedEx(OPENSSL_SYS_SUNOS) || definedEx(__ultrix) || ((definedEx(OPENSSL_NO_CMS) || definedEx(OPENSSL_SYS_SUNOS) || !definedEx(__ultrix)) &amp;&amp; (!definedEx(OPENSSL_SYS_SUNOS) || definedEx(OPENSSL_NO_CMS)))) &amp;&amp; (((definedEx(OPENSSL_NO_ENGINE) || definedEx(_CRAY) || definedEx(OPENSSL_NO_DYNAMIC_ENGINE)) &amp;&amp; (definedEx(OPENSSL_NO_ENGINE) || !definedEx(_CRAY) || definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || !definedEx(OPENSSL_NO_GMP)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_NURON)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_CSWIFT))) || ((definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_ATALLA)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_AEP)))) &amp;&amp; definedEx(OPENSSL_NO_ENGINE) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(__COMPILE_CAPIENG) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_SUREWARE)) &amp;&amp; (definedEx(OPENSSL_NO_ENGINE) || ((definedEx(OPENSSL_NO_ERR) || definedEx(OPENSSL_NO_HW_4758_CCA)) &amp;&amp; (!definedEx(CCA4758_LIB_NAME) || !definedEx(OPENSSL_NO_ERR) || definedEx(OPENSSL_NO_HW_4758_CCA)))) &amp;&amp; (((definedEx(__i386__) || definedEx(OPENSSL_NO_INLINE_ASM) || !definedEx(__i386) || (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) &amp;&amp; !definedEx(DYNAMIC_ENGINE)) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_PADLOCK)) &amp;&amp; (!definedEx(__i386__) || definedEx(OPENSSL_NO_INLINE_ASM) || (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) &amp;&amp; !definedEx(DYNAMIC_ENGINE)) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_PADLOCK)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE))) || ((definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_SUREWARE)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(__COMPILE_CAPIENG) || definedEx(OPENSSL_NO_ENGINE)))) &amp;&amp; (((definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_CSWIFT)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_NURON))) || ((definedEx(OPENSSL_NO_ENGINE) || definedEx(_CRAY) || definedEx(OPENSSL_NO_DYNAMIC_ENGINE)) &amp;&amp; (definedEx(OPENSSL_NO_ENGINE) || !definedEx(_CRAY) || definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || !definedEx(OPENSSL_NO_GMP)))) &amp;&amp; (definedEx(OPENSSL_NO_HMAC) || !definedEx(DO_TEST) || !definedEx(TEST)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_CHIL) || ((definedEx(__i386__) || definedEx(OPENSSL_NO_INLINE_ASM) || !definedEx(__i386) || (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) &amp;&amp; !definedEx(DYNAMIC_ENGINE)) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_PADLOCK)) &amp;&amp; (!definedEx(__i386__) || definedEx(OPENSSL_NO_INLINE_ASM) || (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) &amp;&amp; !definedEx(DYNAMIC_ENGINE)) || definedEx(OPENSSL_NO_ENGINE) || definedEx(OPENSSL_NO_HW_PADLOCK)) &amp;&amp; (definedEx(OPENSSL_NO_DYNAMIC_ENGINE) || definedEx(OPENSSL_NO_ENGINE)))))
            </featuremodel><import>
            <sig>
            <name>
                RC5_32_set_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rc5_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC5)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1246
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1246
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc5.c
            </file>
            <line>
                121
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc5.c
            </file>
            <line>
                121
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_set_encrypt_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c
            </file>
            <line>
                121
            </line>
            <col>
                6
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                397
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                369
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                358
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                313
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                246
            </line>
            <col>
                8
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                BIO_new_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(HEADER_BSS_FILE_C)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c
            </file>
            <line>
                249
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c
            </file>
            <line>
                240
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c
            </file>
            <line>
                111
            </line>
            <col>
                24
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs8.c
            </file>
            <line>
                268
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs8.c
            </file>
            <line>
                255
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs8.c
            </file>
            <line>
                93
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                625
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                625
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                169
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                169
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                2484
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1136
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                691
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c
            </file>
            <line>
                280
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c
            </file>
            <line>
                266
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c
            </file>
            <line>
                110
            </line>
            <col>
                24
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c
            </file>
            <line>
                661
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c
            </file>
            <line>
                618
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c
            </file>
            <line>
                269
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c
            </file>
            <line>
                234
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c
            </file>
            <line>
                211
            </line>
            <col>
                9
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c
            </file>
            <line>
                102
            </line>
            <col>
                25
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c
            </file>
            <line>
                1498
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c
            </file>
            <line>
                1498
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c
            </file>
            <line>
                983
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c
            </file>
            <line>
                983
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ciphers.c
            </file>
            <line>
                111
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ciphers.c
            </file>
            <line>
                111
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ciphers.c
            </file>
            <line>
                110
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ciphers.c
            </file>
            <line>
                110
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/nseq.c
            </file>
            <line>
                123
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/nseq.c
            </file>
            <line>
                114
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/nseq.c
            </file>
            <line>
                79
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                393
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                393
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                378
            </line>
            <col>
                22
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                378
            </line>
            <col>
                22
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                134
            </line>
            <col>
                36
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                134
            </line>
            <col>
                36
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                529
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/engine.c
            </file>
            <line>
                362
            </line>
            <col>
                9
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/engine.c
            </file>
            <line>
                362
            </line>
            <col>
                9
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/engine.c
            </file>
            <line>
                358
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/engine.c
            </file>
            <line>
                358
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1086
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1086
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                636
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                636
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkey.c
            </file>
            <line>
                221
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkey.c
            </file>
            <line>
                87
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyparam.c
            </file>
            <line>
                169
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyparam.c
            </file>
            <line>
                156
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyparam.c
            </file>
            <line>
                82
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                330
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                330
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c
            </file>
            <line>
                878
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c
            </file>
            <line>
                792
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_time.c
            </file>
            <line>
                350
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_time.c
            </file>
            <line>
                350
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c
            </file>
            <line>
                539
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c
            </file>
            <line>
                539
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c
            </file>
            <line>
                493
            </line>
            <col>
                20
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c
            </file>
            <line>
                493
            </line>
            <col>
                20
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genpkey.c
            </file>
            <line>
                235
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genpkey.c
            </file>
            <line>
                94
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c
            </file>
            <line>
                223
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c
            </file>
            <line>
                219
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pk8.c
            </file>
            <line>
                229
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pk8.c
            </file>
            <line>
                216
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pkey.c
            </file>
            <line>
                232
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509v3/pcy_tree.c
            </file>
            <line>
                103
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509v3/v3_prn.c
            </file>
            <line>
                229
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_strex.c
            </file>
            <line>
                533
            </line>
            <col>
                9
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_sap.c
            </file>
            <line>
                96
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_lib.c
            </file>
            <line>
                370
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_lib.c
            </file>
            <line>
                281
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_lib.c
            </file>
            <line>
                211
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_lib.c
            </file>
            <line>
                119
            </line>
            <col>
                13
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bsaes_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                510
            </line>
            <col>
                30
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                deflate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        z_stream_s
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(ZLIB) &amp;&amp; !definedEx(ZLIB_SHARED))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                126
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                126
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                126
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                126
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                126
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                126
            </line>
            <col>
                32
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_gmult_4bit_mmx
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <long/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(__i386__) &amp;&amp; definedEx(__arch64__)) || (!definedEx(__i386__) &amp;&amp; ((definedEx(__i386) &amp;&amp; definedEx(__arch64__)) || (definedEx(__arch64__) &amp;&amp; !definedEx(__i386) &amp;&amp; definedEx(_M_IX86)))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                731
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                731
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                731
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bsaes_xts_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1069
            </line>
            <col>
                24
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bn_gather5
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                746
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                usage
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c
            </file>
            <line>
                176
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c
            </file>
            <line>
                234
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c
            </file>
            <line>
                225
            </line>
            <col>
                3
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                whirlpool_block
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c
            </file>
            <line>
                245
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c
            </file>
            <line>
                233
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c
            </file>
            <line>
                204
            </line>
            <col>
                5
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c
            </file>
            <line>
                190
            </line>
            <col>
                5
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c
            </file>
            <line>
                204
            </line>
            <col>
                5
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c
            </file>
            <line>
                190
            </line>
            <col>
                5
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c
            </file>
            <line>
                171
            </line>
            <col>
                5
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c
            </file>
            <line>
                128
            </line>
            <col>
                5
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/whrlpool/wp_dgst.c
            </file>
            <line>
                113
            </line>
            <col>
                4
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                inflateEnd
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        z_stream_s
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(ZLIB) &amp;&amp; !definedEx(ZLIB_SHARED))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                122
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                122
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                122
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                122
            </line>
            <col>
                32
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                _openssl_ascii2ebcdic
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_DES) &amp;&amp; definedEx(_OSD_POSIX))
            </featureexpr><pos>
            <file>
                file /usr/include/openssl/ebcdic.h
            </file>
            <line>
                12
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/ebcdic.h
            </file>
            <line>
                12
            </line>
            <col>
                21
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                DES_ede3_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_DES) &amp;&amp; definedEx(DES_DEFAULT_OPTIONS))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1697
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1697
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/des_old.c
            </file>
            <line>
                151
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/des_old.c
            </file>
            <line>
                151
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des3.c
            </file>
            <line>
                145
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des3.c
            </file>
            <line>
                145
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des3.c
            </file>
            <line>
                137
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des3.c
            </file>
            <line>
                137
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                RC4
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rc4_key_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1668
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1668
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                198
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                198
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                180
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                180
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                169
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                169
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                167
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                167
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                140
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                140
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4.c
            </file>
            <line>
                134
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4.c
            </file>
            <line>
                134
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c
            </file>
            <line>
                246
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c
            </file>
            <line>
                246
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                ripemd160_block_data_order
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        RIPEMD160state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_RIPEMD) &amp;&amp; definedEx(ripemd160_block_data_order) &amp;&amp; (definedEx(OPENSSL_NO_RIPEMD) || definedEx(ripemd160_block_data_order)))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h
            </file>
            <line>
                97
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h
            </file>
            <line>
                97
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h
            </file>
            <line>
                97
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h
            </file>
            <line>
                97
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h
            </file>
            <line>
                97
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h
            </file>
            <line>
                97
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h
            </file>
            <line>
                97
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h
            </file>
            <line>
                97
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h
            </file>
            <line>
                97
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_locl.h
            </file>
            <line>
                97
            </line>
            <col>
                32
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bn_mul_mont
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mont.c
            </file>
            <line>
                140
            </line>
            <col>
                6
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                760
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                759
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                758
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                757
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                756
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                734
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                726
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                716
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                702
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                ASN1_i2d_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(NO_OLD_ASN1)
            </featureexpr><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                991
            </line>
            <col>
                50
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                991
            </line>
            <col>
                50
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                991
            </line>
            <col>
                50
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                991
            </line>
            <col>
                50
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                986
            </line>
            <col>
                44
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                986
            </line>
            <col>
                44
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                986
            </line>
            <col>
                44
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                986
            </line>
            <col>
                44
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                986
            </line>
            <col>
                44
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                986
            </line>
            <col>
                44
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                986
            </line>
            <col>
                44
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                991
            </line>
            <col>
                50
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509/x_all.c
            </file>
            <line>
                257
            </line>
            <col>
                8
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                RC5_32_ofb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rc5_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC5)
            </featureexpr><pos>
            <file>
                string literal: RC5_32_ofb64_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: RC5_32_ofb64_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: RC5_32_ofb64_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: RC5_32_ofb64_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                DES_ncbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_DES) &amp;&amp; definedEx(DES_DEFAULT_OPTIONS))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1683
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1683
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/des_old.c
            </file>
            <line>
                106
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/des_old.c
            </file>
            <line>
                106
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/rpc_enc.c
            </file>
            <line>
                78
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/rpc_enc.c
            </file>
            <line>
                78
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des.c
            </file>
            <line>
                111
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des.c
            </file>
            <line>
                111
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des.c
            </file>
            <line>
                104
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_des.c
            </file>
            <line>
                104
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                PKCS12_set_mac
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_DES) || definedEx(OPENSSL_NO_HMAC))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                603
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                603
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c
            </file>
            <line>
                170
            </line>
            <col>
                3
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                BIO_s_file
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(HEADER_BSS_FILE_C)
            </featureexpr><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c
            </file>
            <line>
                264
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c
            </file>
            <line>
                264
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c
            </file>
            <line>
                263
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c
            </file>
            <line>
                263
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c
            </file>
            <line>
                107
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ec.c
            </file>
            <line>
                107
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c
            </file>
            <line>
                91
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c
            </file>
            <line>
                91
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c
            </file>
            <line>
                91
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c
            </file>
            <line>
                91
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c
            </file>
            <line>
                82
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c
            </file>
            <line>
                82
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c
            </file>
            <line>
                82
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/errstr.c
            </file>
            <line>
                82
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c
            </file>
            <line>
                186
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c
            </file>
            <line>
                186
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c
            </file>
            <line>
                185
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c
            </file>
            <line>
                185
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c
            </file>
            <line>
                99
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs7.c
            </file>
            <line>
                99
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c
            </file>
            <line>
                611
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c
            </file>
            <line>
                611
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c
            </file>
            <line>
                610
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c
            </file>
            <line>
                610
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c
            </file>
            <line>
                204
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c
            </file>
            <line>
                204
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c
            </file>
            <line>
                250
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c
            </file>
            <line>
                250
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c
            </file>
            <line>
                249
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c
            </file>
            <line>
                249
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c
            </file>
            <line>
                120
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsa.c
            </file>
            <line>
                120
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/srp.c
            </file>
            <line>
                315
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/srp.c
            </file>
            <line>
                315
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/srp.c
            </file>
            <line>
                315
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/srp.c
            </file>
            <line>
                315
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c
            </file>
            <line>
                241
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c
            </file>
            <line>
                241
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c
            </file>
            <line>
                240
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c
            </file>
            <line>
                240
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c
            </file>
            <line>
                131
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dsaparam.c
            </file>
            <line>
                131
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1947
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1947
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1902
            </line>
            <col>
                20
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1902
            </line>
            <col>
                20
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1800
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1800
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1677
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1677
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1599
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1599
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                986
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                986
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                895
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                895
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                792
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                792
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendh.c
            </file>
            <line>
                166
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendh.c
            </file>
            <line>
                166
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendh.c
            </file>
            <line>
                106
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendh.c
            </file>
            <line>
                106
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rand.c
            </file>
            <line>
                186
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rand.c
            </file>
            <line>
                186
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rand.c
            </file>
            <line>
                95
            </line>
            <col>
                25
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rand.c
            </file>
            <line>
                95
            </line>
            <col>
                25
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                1587
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                1587
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                716
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                716
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                715
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                715
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                714
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                714
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                713
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                713
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                344
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                344
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/verify.c
            </file>
            <line>
                104
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/verify.c
            </file>
            <line>
                104
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/prime.c
            </file>
            <line>
                112
            </line>
            <col>
                25
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/prime.c
            </file>
            <line>
                112
            </line>
            <col>
                25
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/prime.c
            </file>
            <line>
                74
            </line>
            <col>
                22
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/prime.c
            </file>
            <line>
                74
            </line>
            <col>
                22
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c
            </file>
            <line>
                129
            </line>
            <col>
                25
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c
            </file>
            <line>
                129
            </line>
            <col>
                25
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c
            </file>
            <line>
                411
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c
            </file>
            <line>
                411
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c
            </file>
            <line>
                344
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c
            </file>
            <line>
                344
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c
            </file>
            <line>
                169
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dhparam.c
            </file>
            <line>
                169
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c
            </file>
            <line>
                410
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c
            </file>
            <line>
                410
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c
            </file>
            <line>
                347
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c
            </file>
            <line>
                347
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c
            </file>
            <line>
                131
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c
            </file>
            <line>
                131
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c
            </file>
            <line>
                124
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl.c
            </file>
            <line>
                124
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsa.c
            </file>
            <line>
                266
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsa.c
            </file>
            <line>
                266
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsa.c
            </file>
            <line>
                123
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsa.c
            </file>
            <line>
                123
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                162
            </line>
            <col>
                43
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                162
            </line>
            <col>
                43
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c
            </file>
            <line>
                193
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c
            </file>
            <line>
                193
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c
            </file>
            <line>
                84
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c
            </file>
            <line>
                84
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c
            </file>
            <line>
                79
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/passwd.c
            </file>
            <line>
                79
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c
            </file>
            <line>
                303
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c
            </file>
            <line>
                303
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c
            </file>
            <line>
                302
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c
            </file>
            <line>
                302
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c
            </file>
            <line>
                141
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ecparam.c
            </file>
            <line>
                141
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genrsa.c
            </file>
            <line>
                121
            </line>
            <col>
                18
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genrsa.c
            </file>
            <line>
                121
            </line>
            <col>
                18
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genrsa.c
            </file>
            <line>
                116
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genrsa.c
            </file>
            <line>
                116
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c
            </file>
            <line>
                303
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c
            </file>
            <line>
                303
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c
            </file>
            <line>
                175
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c
            </file>
            <line>
                175
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c
            </file>
            <line>
                174
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c
            </file>
            <line>
                174
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c
            </file>
            <line>
                103
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/crl2p7.c
            </file>
            <line>
                103
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c
            </file>
            <line>
                148
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c
            </file>
            <line>
                148
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                294
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                294
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                294
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                294
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                141
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                141
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                141
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                141
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c
            </file>
            <line>
                230
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c
            </file>
            <line>
                230
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c
            </file>
            <line>
                215
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c
            </file>
            <line>
                215
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c
            </file>
            <line>
                95
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/gendsa.c
            </file>
            <line>
                95
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c
            </file>
            <line>
                153
            </line>
            <col>
                25
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c
            </file>
            <line>
                153
            </line>
            <col>
                25
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c
            </file>
            <line>
                383
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c
            </file>
            <line>
                383
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c
            </file>
            <line>
                382
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c
            </file>
            <line>
                382
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c
            </file>
            <line>
                137
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c
            </file>
            <line>
                137
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                286
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                286
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                286
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                286
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                203
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                203
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                203
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                203
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                104
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                104
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                104
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/sess_id.c
            </file>
            <line>
                104
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c
            </file>
            <line>
                220
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c
            </file>
            <line>
                220
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c
            </file>
            <line>
                219
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c
            </file>
            <line>
                219
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c
            </file>
            <line>
                107
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c
            </file>
            <line>
                107
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c
            </file>
            <line>
                193
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c
            </file>
            <line>
                193
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c
            </file>
            <line>
                192
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c
            </file>
            <line>
                192
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c
            </file>
            <line>
                103
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dh.c
            </file>
            <line>
                103
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c
            </file>
            <line>
                291
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c
            </file>
            <line>
                291
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c
            </file>
            <line>
                291
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/openssl.c
            </file>
            <line>
                291
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                655
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                655
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                655
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                655
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c
            </file>
            <line>
                676
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c
            </file>
            <line>
                676
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c
            </file>
            <line>
                577
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/x509.c
            </file>
            <line>
                577
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c
            </file>
            <line>
                108
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c
            </file>
            <line>
                108
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c
            </file>
            <line>
                92
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c
            </file>
            <line>
                92
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c
            </file>
            <line>
                76
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/eck_prn.c
            </file>
            <line>
                76
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                655
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                655
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                575
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                575
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                321
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                321
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                173
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                173
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pkey.c
            </file>
            <line>
                214
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pkey.c
            </file>
            <line>
                214
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_info.c
            </file>
            <line>
                79
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_info.c
            </file>
            <line>
                79
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/mem_dbg.c
            </file>
            <line>
                835
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/mem_dbg.c
            </file>
            <line>
                835
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_prn.c
            </file>
            <line>
                70
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_prn.c
            </file>
            <line>
                70
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/err/err_prn.c
            </file>
            <line>
                94
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/err/err_prn.c
            </file>
            <line>
                94
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_print.c
            </file>
            <line>
                325
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_print.c
            </file>
            <line>
                325
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/srp/srp_vfy.c
            </file>
            <line>
                372
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/srp/srp_vfy.c
            </file>
            <line>
                372
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/srp/srp_vfy.c
            </file>
            <line>
                372
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/srp/srp_vfy.c
            </file>
            <line>
                372
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_i2d_fp.c
            </file>
            <line>
                125
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_i2d_fp.c
            </file>
            <line>
                125
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_i2d_fp.c
            </file>
            <line>
                72
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_i2d_fp.c
            </file>
            <line>
                72
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_crl.c
            </file>
            <line>
                73
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_crl.c
            </file>
            <line>
                73
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_req.c
            </file>
            <line>
                79
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_req.c
            </file>
            <line>
                79
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_x509.c
            </file>
            <line>
                88
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/t_x509.c
            </file>
            <line>
                88
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_d2i_fp.c
            </file>
            <line>
                129
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_d2i_fp.c
            </file>
            <line>
                129
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_d2i_fp.c
            </file>
            <line>
                75
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_d2i_fp.c
            </file>
            <line>
                75
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dh/dh_prn.c
            </file>
            <line>
                70
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dh/dh_prn.c
            </file>
            <line>
                70
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c
            </file>
            <line>
                170
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c
            </file>
            <line>
                170
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c
            </file>
            <line>
                158
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c
            </file>
            <line>
                158
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c
            </file>
            <line>
                146
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/lhash/lh_stats.c
            </file>
            <line>
                146
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dsa/dsa_prn.c
            </file>
            <line>
                86
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dsa/dsa_prn.c
            </file>
            <line>
                86
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dsa/dsa_prn.c
            </file>
            <line>
                70
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dsa/dsa_prn.c
            </file>
            <line>
                70
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/bio.h
            </file>
            <line>
                635
            </line>
            <col>
                29
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                Camellia_EncryptBlock_Rounds
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <int/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c
            </file>
            <line>
                73
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c
            </file>
            <line>
                73
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                AES_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ecb.c
            </file>
            <line>
                71
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c
            </file>
            <line>
                312
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c
            </file>
            <line>
                293
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c
            </file>
            <line>
                190
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c
            </file>
            <line>
                163
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_wrap.c
            </file>
            <line>
                127
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1102
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                527
            </line>
            <col>
                27
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                509
            </line>
            <col>
                27
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                OPENSSL_ia32_cpuid
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <unsigned>
        <longlong/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_ASM)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cryptlib.c
            </file>
            <line>
                706
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cryptlib.c
            </file>
            <line>
                706
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cryptlib.c
            </file>
            <line>
                703
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cryptlib.c
            </file>
            <line>
                703
            </line>
            <col>
                16
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                dladdr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(_AIX)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                457
            </line>
            <col>
                5
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                dlsym
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                478
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                286
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                252
            </line>
            <col>
                7
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                BIO_new_file
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(HEADER_BSS_FILE_C)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c
            </file>
            <line>
                1659
            </line>
            <col>
                9
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/req.c
            </file>
            <line>
                511
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c
            </file>
            <line>
                243
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/rsautl.c
            </file>
            <line>
                235
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs8.c
            </file>
            <line>
                259
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs8.c
            </file>
            <line>
                247
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                807
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                807
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                782
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                782
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                739
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                739
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                637
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                637
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                624
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ocsp.c
            </file>
            <line>
                624
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                1138
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                664
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c
            </file>
            <line>
                291
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c
            </file>
            <line>
                271
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyutl.c
            </file>
            <line>
                257
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                649
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c
            </file>
            <line>
                832
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c
            </file>
            <line>
                652
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c
            </file>
            <line>
                642
            </line>
            <col>
                18
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/smime.c
            </file>
            <line>
                610
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c
            </file>
            <line>
                267
            </line>
            <col>
                20
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c
            </file>
            <line>
                233
            </line>
            <col>
                18
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/spkac.c
            </file>
            <line>
                209
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c
            </file>
            <line>
                2838
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c
            </file>
            <line>
                2838
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c
            </file>
            <line>
                2506
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c
            </file>
            <line>
                2506
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/nseq.c
            </file>
            <line>
                117
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/nseq.c
            </file>
            <line>
                109
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                400
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                400
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                379
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                379
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                1047
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                1027
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                972
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                945
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                906
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                809
            </line>
            <col>
                19
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                690
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                530
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                479
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ts.c
            </file>
            <line>
                445
            </line>
            <col>
                18
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1522
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1522
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1208
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1208
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkey.c
            </file>
            <line>
                212
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyparam.c
            </file>
            <line>
                160
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkeyparam.c
            </file>
            <line>
                148
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                471
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                471
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                328
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                328
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                327
            </line>
            <col>
                9
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                327
            </line>
            <col>
                9
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c
            </file>
            <line>
                1238
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c
            </file>
            <line>
                869
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c
            </file>
            <line>
                841
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c
            </file>
            <line>
                816
            </line>
            <col>
                18
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/cms.c
            </file>
            <line>
                784
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/asn1pars.c
            </file>
            <line>
                257
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genpkey.c
            </file>
            <line>
                327
            </line>
            <col>
                8
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/genpkey.c
            </file>
            <line>
                226
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509v3/v3_pci.c
            </file>
            <line>
                164
            </line>
            <col>
                12
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ts/ts_conf.c
            </file>
            <line>
                141
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ts/ts_conf.c
            </file>
            <line>
                115
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ts/ts_conf.c
            </file>
            <line>
                99
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509/by_file.c
            </file>
            <line>
                272
            </line>
            <col>
                6
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_lib.c
            </file>
            <line>
                99
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/conf/conf_def.c
            </file>
            <line>
                192
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c
            </file>
            <line>
                377
            </line>
            <col>
                6
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c
            </file>
            <line>
                377
            </line>
            <col>
                6
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                s$sleep2
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <longlong/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <short/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(OPENSSL_NO_DES) &amp;&amp; ((definedEx(OPENSSL_SYS_VOS) &amp;&amp; definedEx(USE_MD5_RAND) &amp;&amp; definedEx(OPENSSL_SYS_VOS_IA32) &amp;&amp; !definedEx(OPENSSL_SYS_VOS_HPPA)) || (!definedEx(USE_MD5_RAND) &amp;&amp; ((definedEx(OPENSSL_SYS_VOS) &amp;&amp; definedEx(USE_SHA1_RAND) &amp;&amp; definedEx(OPENSSL_SYS_VOS_IA32) &amp;&amp; !definedEx(OPENSSL_SYS_VOS_HPPA)) || (definedEx(OPENSSL_SYS_VOS_IA32) &amp;&amp; definedEx(OPENSSL_SYS_VOS) &amp;&amp; !definedEx(USE_MDC2_RAND) &amp;&amp; !definedEx(USE_SHA1_RAND) &amp;&amp; !definedEx(OPENSSL_SYS_VOS_HPPA)))))) || (definedEx(OPENSSL_SYS_VOS) &amp;&amp; !definedEx(OPENSSL_NO_DES) &amp;&amp; definedEx(OPENSSL_SYS_VOS_IA32) &amp;&amp; !definedEx(OPENSSL_SYS_VOS_HPPA)))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c
            </file>
            <line>
                205
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c
            </file>
            <line>
                205
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c
            </file>
            <line>
                205
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_gmult_4bit
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <long/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(__i386) &amp;&amp; !definedEx(__i386__) &amp;&amp; definedEx(__arch64__) &amp;&amp; !definedEx(_M_IX86))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                738
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                738
            </line>
            <col>
                14
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                deflateEnd
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        z_stream_s
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(ZLIB) &amp;&amp; !definedEx(ZLIB_SHARED))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                125
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                125
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                186
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                186
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                inflateInit_
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        z_stream_s
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(ZLIB) &amp;&amp; !definedEx(ZLIB_SHARED))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                124
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                124
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                124
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                124
            </line>
            <col>
                32
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                RAND_poll
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((!definedEx(OPENSSL_NO_DES) || ((definedEx(USE_MD5_RAND) || ((definedEx(OPENSSL_SYS_VOS) || definedEx(USE_SHA1_RAND) || definedEx(USE_MDC2_RAND)) &amp;&amp; (!definedEx(USE_SHA1_RAND) || definedEx(OPENSSL_SYS_VOS)))) &amp;&amp; (!definedEx(USE_MD5_RAND) || definedEx(OPENSSL_SYS_VOS)))) &amp;&amp; (!definedEx(OPENSSL_NO_DES) || ((definedEx(USE_MD5_RAND) || ((definedEx(USE_SHA1_RAND) || definedEx(USE_MDC2_RAND) || (!definedEx(OPENSSL_SYS_VOS_HPPA) &amp;&amp; !definedEx(OPENSSL_SYS_VOS_IA32)) || !definedEx(OPENSSL_SYS_VOS)) &amp;&amp; (!definedEx(USE_SHA1_RAND) || (!definedEx(OPENSSL_SYS_VOS_HPPA) &amp;&amp; !definedEx(OPENSSL_SYS_VOS_IA32)) || !definedEx(OPENSSL_SYS_VOS)))) &amp;&amp; (!definedEx(USE_MD5_RAND) || (!definedEx(OPENSSL_SYS_VOS_HPPA) &amp;&amp; !definedEx(OPENSSL_SYS_VOS_IA32)) || !definedEx(OPENSSL_SYS_VOS)))) &amp;&amp; (definedEx(USE_MD5_RAND) || !definedEx(OPENSSL_NO_DES) || !definedEx(USE_MDC2_RAND) || definedEx(USE_SHA1_RAND)) &amp;&amp; (definedEx(OPENSSL_NO_DES) || (!definedEx(OPENSSL_SYS_VOS_HPPA) &amp;&amp; !definedEx(OPENSSL_SYS_VOS_IA32)) || !definedEx(OPENSSL_SYS_VOS)) &amp;&amp; (definedEx(OPENSSL_NO_DES) || definedEx(OPENSSL_SYS_VOS)))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c
            </file>
            <line>
                577
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c
            </file>
            <line>
                577
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c
            </file>
            <line>
                394
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c
            </file>
            <line>
                394
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                deflateInit_
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        z_stream_s
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(ZLIB) &amp;&amp; !definedEx(ZLIB_SHARED))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                127
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                127
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                127
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                127
            </line>
            <col>
                32
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                BF_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(_CRAY) &amp;&amp; !definedEx(OPENSSL_NO_BF) &amp;&amp; (definedEx(BF_DEFAULT_OPTIONS) || definedEx(_CRAY) || definedEx(OPENSSL_NO_BF)))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c
            </file>
            <line>
                91
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c
            </file>
            <line>
                91
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c
            </file>
            <line>
                91
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                dlopen
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                474
            </line>
            <col>
                28
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                184
            </line>
            <col>
                7
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                vpaes_set_encrypt_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1217
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1086
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1077
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                839
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                545
            </line>
            <col>
                8
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_ghash_4bit
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <longlong/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(__i386) &amp;&amp; !definedEx(__i386__) &amp;&amp; !definedEx(__arch64__) &amp;&amp; !definedEx(_M_IX86))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                739
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                739
            </line>
            <col>
                14
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                AES_ctr32_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(AES_CTR_ASM)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                849
            </line>
            <col>
                24
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                849
            </line>
            <col>
                24
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                561
            </line>
            <col>
                31
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                561
            </line>
            <col>
                31
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bn_GF2m_mul_2x2
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_gf2m.c
            </file>
            <line>
                417
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_gf2m.c
            </file>
            <line>
                417
            </line>
            <col>
                3
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                md4_block_data_order
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        MD4state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_MD4) &amp;&amp; definedEx(md4_block_data_order) &amp;&amp; (definedEx(OPENSSL_NO_MD4) || definedEx(md4_block_data_order)))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h
            </file>
            <line>
                85
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h
            </file>
            <line>
                85
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h
            </file>
            <line>
                85
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h
            </file>
            <line>
                85
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h
            </file>
            <line>
                85
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h
            </file>
            <line>
                85
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h
            </file>
            <line>
                85
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h
            </file>
            <line>
                85
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h
            </file>
            <line>
                85
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_locl.h
            </file>
            <line>
                85
            </line>
            <col>
                30
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                RAND_SSLeay
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rand_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                (((!definedEx(USE_MD5_RAND) &amp;&amp; definedEx(OPENSSL_NO_DES) &amp;&amp; definedEx(USE_MDC2_RAND) &amp;&amp; !definedEx(USE_SHA1_RAND)) || (!definedEx(OPENSSL_NO_ENGINE) &amp;&amp; !definedEx(TEST_ENG_OPENSSL_NO_ALGORITHMS))) &amp;&amp; definedEx(OPENSSL_NO_DES) &amp;&amp; definedEx(USE_MDC2_RAND) &amp;&amp; !definedEx(USE_MD5_RAND) &amp;&amp; !definedEx(USE_SHA1_RAND))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_lib.c
            </file>
            <line>
                111
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_lib.c
            </file>
            <line>
                111
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c
            </file>
            <line>
                152
            </line>
            <col>
                26
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c
            </file>
            <line>
                152
            </line>
            <col>
                26
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c
            </file>
            <line>
                152
            </line>
            <col>
                26
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_openssl.c
            </file>
            <line>
                152
            </line>
            <col>
                26
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                vpaes_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1219
            </line>
            <col>
                28
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1219
            </line>
            <col>
                28
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1088
            </line>
            <col>
                33
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1078
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                841
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                841
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                546
            </line>
            <col>
                27
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bn_mul_mont_gather5
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                761
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                739
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                732
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                722
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_ctr32_encrypt_blocks
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                316
            </line>
            <col>
                24
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                251
            </line>
            <col>
                31
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                ASN1_i2d_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(NO_OLD_ASN1)
            </featureexpr><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1019
            </line>
            <col>
                51
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1019
            </line>
            <col>
                51
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1019
            </line>
            <col>
                51
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1019
            </line>
            <col>
                51
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1019
            </line>
            <col>
                51
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1019
            </line>
            <col>
                51
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1019
            </line>
            <col>
                51
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1019
            </line>
            <col>
                51
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1019
            </line>
            <col>
                51
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1019
            </line>
            <col>
                51
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1014
            </line>
            <col>
                45
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                PKCS12_gen_mac
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(OPENSSL_NO_HMAC)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_npas.c
            </file>
            <line>
                159
            </line>
            <col>
                5
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_ghash_4bit_x86
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <longlong/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(__i386__) &amp;&amp; !definedEx(__arch64__)) || (!definedEx(__i386__) &amp;&amp; ((definedEx(__i386) &amp;&amp; !definedEx(__arch64__)) || (!definedEx(__arch64__) &amp;&amp; !definedEx(__i386) &amp;&amp; definedEx(_M_IX86)))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                735
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                735
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                735
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                RC5_32_cfb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rc5_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC5)
            </featureexpr><pos>
            <file>
                string literal: RC5_32_cfb64_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: RC5_32_cfb64_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                OPENSSL_cleanse
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_lib.c
            </file>
            <line>
                2997
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_lib.c
            </file>
            <line>
                2997
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c
            </file>
            <line>
                1486
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c
            </file>
            <line>
                1486
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c
            </file>
            <line>
                1485
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c
            </file>
            <line>
                1485
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c
            </file>
            <line>
                1035
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/d1_clnt.c
            </file>
            <line>
                1035
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c
            </file>
            <line>
                2886
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c
            </file>
            <line>
                2886
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c
            </file>
            <line>
                2885
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c
            </file>
            <line>
                2885
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c
            </file>
            <line>
                2301
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_clnt.c
            </file>
            <line>
                2301
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                664
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                664
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                570
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                570
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                569
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                569
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                568
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                568
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                567
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                567
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                241
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/t1_enc.c
            </file>
            <line>
                241
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c
            </file>
            <line>
                781
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c
            </file>
            <line>
                781
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c
            </file>
            <line>
                757
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c
            </file>
            <line>
                757
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c
            </file>
            <line>
                756
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c
            </file>
            <line>
                756
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c
            </file>
            <line>
                755
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/ssl_sess.c
            </file>
            <line>
                755
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c
            </file>
            <line>
                461
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c
            </file>
            <line>
                461
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c
            </file>
            <line>
                379
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c
            </file>
            <line>
                379
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c
            </file>
            <line>
                378
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c
            </file>
            <line>
                378
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c
            </file>
            <line>
                210
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_enc.c
            </file>
            <line>
                210
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s2_lib.c
            </file>
            <line>
                360
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s2_lib.c
            </file>
            <line>
                360
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c
            </file>
            <line>
                423
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c
            </file>
            <line>
                423
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c
            </file>
            <line>
                403
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c
            </file>
            <line>
                403
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c
            </file>
            <line>
                396
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c
            </file>
            <line>
                396
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c
            </file>
            <line>
                364
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c
            </file>
            <line>
                364
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c
            </file>
            <line>
                247
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/tls_srp.c
            </file>
            <line>
                247
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c
            </file>
            <line>
                2757
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c
            </file>
            <line>
                2757
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c
            </file>
            <line>
                2705
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c
            </file>
            <line>
                2705
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c
            </file>
            <line>
                2663
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c
            </file>
            <line>
                2663
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c
            </file>
            <line>
                2315
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c
            </file>
            <line>
                2315
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c
            </file>
            <line>
                2251
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/ssl/s3_srvr.c
            </file>
            <line>
                2251
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                621
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                615
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                605
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/ca.c
            </file>
            <line>
                763
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c
            </file>
            <line>
                2351
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_server.c
            </file>
            <line>
                2351
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1902
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1902
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1901
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1901
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1900
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/s_client.c
            </file>
            <line>
                1900
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                540
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/dgst.c
            </file>
            <line>
                540
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c
            </file>
            <line>
                565
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/enc.c
            </file>
            <line>
                563
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/engines/e_sureware.c
            </file>
            <line>
                924
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/engines/e_sureware.c
            </file>
            <line>
                924
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_decr.c
            </file>
            <line>
                179
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_decr.c
            </file>
            <line>
                147
            </line>
            <col>
                11
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crpt.c
            </file>
            <line>
                110
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crpt.c
            </file>
            <line>
                109
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_key.c
            </file>
            <line>
                97
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ecdsa/ecs_lib.c
            </file>
            <line>
                187
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_one.c
            </file>
            <line>
                75
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ripemd/rmd_one.c
            </file>
            <line>
                75
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha1_one.c
            </file>
            <line>
                75
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c
            </file>
            <line>
                63
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c
            </file>
            <line>
                50
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_one.c
            </file>
            <line>
                75
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                259
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                259
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                246
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                246
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_lib.c
            </file>
            <line>
                745
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_lib.c
            </file>
            <line>
                166
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_lib.c
            </file>
            <line>
                162
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_key.c
            </file>
            <line>
                136
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_mult.c
            </file>
            <line>
                178
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ec/ec_mult.c
            </file>
            <line>
                174
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pk8.c
            </file>
            <line>
                138
            </line>
            <col>
                18
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pvkfmt.c
            </file>
            <line>
                916
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pvkfmt.c
            </file>
            <line>
                839
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pvkfmt.c
            </file>
            <line>
                792
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pvkfmt.c
            </file>
            <line>
                778
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_seal.c
            </file>
            <line>
                117
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                641
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                631
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                472
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                471
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                430
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                427
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                426
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                425
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                424
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_lib.c
            </file>
            <line>
                399
            </line>
            <col>
                36
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_pkey.c
            </file>
            <line>
                135
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_info.c
            </file>
            <line>
                403
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pem/pem_info.c
            </file>
            <line>
                402
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                1451
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_saos.c
            </file>
            <line>
                145
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_saos.c
            </file>
            <line>
                99
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_eay.c
            </file>
            <line>
                731
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_eay.c
            </file>
            <line>
                626
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_eay.c
            </file>
            <line>
                486
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_eay.c
            </file>
            <line>
                249
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_sign.c
            </file>
            <line>
                300
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rsa/rsa_sign.c
            </file>
            <line>
                148
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c
            </file>
            <line>
                291
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c
            </file>
            <line>
                204
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c
            </file>
            <line>
                121
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c
            </file>
            <line>
                120
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c
            </file>
            <line>
                119
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cmac/cmac.c
            </file>
            <line>
                118
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_rand.c
            </file>
            <line>
                204
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                825
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_lib.c
            </file>
            <line>
                251
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_lib.c
            </file>
            <line>
                246
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c
            </file>
            <line>
                138
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c
            </file>
            <line>
                138
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c
            </file>
            <line>
                137
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c
            </file>
            <line>
                137
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c
            </file>
            <line>
                125
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c
            </file>
            <line>
                125
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c
            </file>
            <line>
                124
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/read2pwd.c
            </file>
            <line>
                124
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/str2key.c
            </file>
            <line>
                171
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/str2key.c
            </file>
            <line>
                171
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/str2key.c
            </file>
            <line>
                98
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/des/str2key.c
            </file>
            <line>
                98
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_sign.c
            </file>
            <line>
                331
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_sign.c
            </file>
            <line>
                329
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_sign.c
            </file>
            <line>
                210
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_sign.c
            </file>
            <line>
                208
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_verify.c
            </file>
            <line>
                209
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/a_verify.c
            </file>
            <line>
                112
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/p8_pkey.c
            </file>
            <line>
                72
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/n_pkey.c
            </file>
            <line>
                315
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/n_pkey.c
            </file>
            <line>
                218
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/asn1/n_pkey.c
            </file>
            <line>
                197
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/mdc2/mdc2_one.c
            </file>
            <line>
                73
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/mdc2/mdc2_one.c
            </file>
            <line>
                73
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c
            </file>
            <line>
                394
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c
            </file>
            <line>
                394
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/randfile.c
            </file>
            <line>
                266
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/randfile.c
            </file>
            <line>
                174
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c
            </file>
            <line>
                186
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c
            </file>
            <line>
                186
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c
            </file>
            <line>
                183
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/md_rand.c
            </file>
            <line>
                183
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_wrap.c
            </file>
            <line>
                135
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/mem.c
            </file>
            <line>
                376
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ecdh/ech_lib.c
            </file>
            <line>
                209
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs7/pk7_doit.c
            </file>
            <line>
                616
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs7/pk7_doit.c
            </file>
            <line>
                610
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs7/pk7_doit.c
            </file>
            <line>
                596
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs7/pk7_doit.c
            </file>
            <line>
                368
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs7/pk7_doit.c
            </file>
            <line>
                247
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_one.c
            </file>
            <line>
                94
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md4/md4_one.c
            </file>
            <line>
                94
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/p5_crpt.c
            </file>
            <line>
                138
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/p5_crpt.c
            </file>
            <line>
                137
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/p5_crpt.c
            </file>
            <line>
                136
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/evp_enc.c
            </file>
            <line>
                578
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/bio_ok.c
            </file>
            <line>
                205
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_idea.c
            </file>
            <line>
                112
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/bio_enc.c
            </file>
            <line>
                135
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/p5_crpt2.c
            </file>
            <line>
                310
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/evp_key.c
            </file>
            <line>
                186
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/evp_key.c
            </file>
            <line>
                111
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/p_open.c
            </file>
            <line>
                108
            </line>
            <col>
                18
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/digest.c
            </file>
            <line>
                385
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1297
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                947
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                680
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_one.c
            </file>
            <line>
                94
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ui/ui_util.c
            </file>
            <line>
                65
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/ui/ui_openssl.c
            </file>
            <line>
                470
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c
            </file>
            <line>
                230
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c
            </file>
            <line>
                230
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c
            </file>
            <line>
                224
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c
            </file>
            <line>
                224
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c
            </file>
            <line>
                186
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_enc.c
            </file>
            <line>
                186
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_asn1.c
            </file>
            <line>
                245
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_asn1.c
            </file>
            <line>
                245
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_asn1.c
            </file>
            <line>
                236
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_asn1.c
            </file>
            <line>
                236
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_pwri.c
            </file>
            <line>
                272
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_pwri.c
            </file>
            <line>
                272
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c
            </file>
            <line>
                866
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c
            </file>
            <line>
                866
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c
            </file>
            <line>
                780
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c
            </file>
            <line>
                780
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c
            </file>
            <line>
                699
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c
            </file>
            <line>
                699
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c
            </file>
            <line>
                423
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/cms/cms_env.c
            </file>
            <line>
                423
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/hmac/hm_pmeth.c
            </file>
            <line>
                121
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/hmac/hm_pmeth.c
            </file>
            <line>
                121
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/hmac/hm_ameth.c
            </file>
            <line>
                81
            </line>
            <col>
                3
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_ghash_4bit
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <long/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(__i386) &amp;&amp; !definedEx(__i386__) &amp;&amp; definedEx(__arch64__) &amp;&amp; !definedEx(_M_IX86))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                739
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                739
            </line>
            <col>
                14
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                dlerror
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                467
            </line>
            <col>
                47
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                467
            </line>
            <col>
                47
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                290
            </line>
            <col>
                52
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                290
            </line>
            <col>
                52
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                256
            </line>
            <col>
                52
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                256
            </line>
            <col>
                52
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                188
            </line>
            <col>
                54
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                188
            </line>
            <col>
                54
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_init_clmul
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <long/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(__arch64__)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                718
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                718
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                sha256_block_data_order
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA256state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c
            </file>
            <line>
                109
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c
            </file>
            <line>
                109
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c
            </file>
            <line>
                109
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c
            </file>
            <line>
                109
            </line>
            <col>
                30
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha256.c
            </file>
            <line>
                109
            </line>
            <col>
                30
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_ghash_4bit_mmx
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <longlong/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(__i386__) &amp;&amp; !definedEx(__arch64__)) || (!definedEx(__i386__) &amp;&amp; ((definedEx(__i386) &amp;&amp; !definedEx(__arch64__)) || (!definedEx(__arch64__) &amp;&amp; !definedEx(__i386) &amp;&amp; definedEx(_M_IX86)))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                732
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                732
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                732
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_init_clmul
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <longlong/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(__arch64__)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                718
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                718
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                ASN1_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(NO_OLD_ASN1)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509v3/v3_genn.c
            </file>
            <line>
                105
            </line>
            <col>
                25
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                280
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                AES_xts_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(AES_XTS_ASM)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1062
            </line>
            <col>
                41
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1062
            </line>
            <col>
                41
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                OPENSSL_cpuid_setup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(OPENSSL_NO_ASM)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/c_all.c
            </file>
            <line>
                82
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_all.c
            </file>
            <line>
                65
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/engine/eng_all.c
            </file>
            <line>
                65
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                dlclose
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                479
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                228
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/dso/dso_dlfcn.c
            </file>
            <line>
                204
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                PKCS12_verify_mac
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                771
            </line>
            <col>
                7
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                756
            </line>
            <col>
                38
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/apps.c
            </file>
            <line>
                756
            </line>
            <col>
                5
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                659
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                659
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                656
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/pkcs12.c
            </file>
            <line>
                656
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_npas.c
            </file>
            <line>
                89
            </line>
            <col>
                6
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_kiss.c
            </file>
            <line>
                113
            </line>
            <col>
                13
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_kiss.c
            </file>
            <line>
                108
            </line>
            <col>
                10
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_kiss.c
            </file>
            <line>
                107
            </line>
            <col>
                5
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bn_scatter5
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                740
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                735
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                733
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                727
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                723
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                717
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                703
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                701
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_exp.c
            </file>
            <line>
                700
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bsaes_ctr32_encrypt_blocks
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                831
            </line>
            <col>
                25
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                538
            </line>
            <col>
                30
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_ghash_clmul
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <longlong/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(__arch64__)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                720
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                720
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                Camellia_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1845
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1845
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1831
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1831
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1817
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1817
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: Camellia_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                RC4_options
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c
            </file>
            <line>
                199
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c
            </file>
            <line>
                199
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c
            </file>
            <line>
                199
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/version.c
            </file>
            <line>
                199
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                2405
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                2405
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                2405
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                2405
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                md5_block_asm_data_order
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        MD5state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_locl.h
            </file>
            <line>
                71
            </line>
            <col>
                31
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_locl.h
            </file>
            <line>
                71
            </line>
            <col>
                31
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_locl.h
            </file>
            <line>
                71
            </line>
            <col>
                31
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_locl.h
            </file>
            <line>
                71
            </line>
            <col>
                31
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/md5/md5_locl.h
            </file>
            <line>
                71
            </line>
            <col>
                31
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bn_sub_part_words
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_ASM) &amp;&amp; definedEx(OPENSSL_BN_ASM_PART_WORDS) &amp;&amp; ((definedEx(BN_RECURSION) &amp;&amp; definedEx(OPENSSL_SMALL_FOOTPRINT) &amp;&amp; definedEx(OPENSSL_BN_ASM_PART_WORDS) &amp;&amp; !definedEx(OPENSSL_NO_ASM)) || (definedEx(OPENSSL_BN_ASM_PART_WORDS) &amp;&amp; !definedEx(OPENSSL_SMALL_FOOTPRINT) &amp;&amp; !definedEx(OPENSSL_NO_ASM))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                597
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                597
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                597
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                597
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                596
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                596
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                596
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                596
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                590
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                590
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                590
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                590
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                589
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                589
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                589
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                589
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                581
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                581
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                581
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                581
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                580
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                580
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                580
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                580
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                575
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                575
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                575
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                575
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                574
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                574
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                574
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                574
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                463
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                463
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                463
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                463
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                462
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                462
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                462
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                462
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                455
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                455
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                455
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                455
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                454
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                454
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                454
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                454
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                445
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                445
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                445
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                445
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                444
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                444
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                444
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                444
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                438
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                438
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                438
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                438
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                437
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                437
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                437
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_mul.c
            </file>
            <line>
                437
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                365
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                240
            </line>
            <col>
                27
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_cbc_sha1_enc
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <struct isUnion="false">
        SHAstate_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c
            </file>
            <line>
                201
            </line>
            <col>
                3
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                clock_gettime
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        timespec
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(OPENSSL_NO_DES) &amp;&amp; ((definedEx(USE_MD5_RAND) &amp;&amp; (definedEx(OPENSSL_SYS_VOS_HPPA) || definedEx(OPENSSL_SYS_VOS_IA32)) &amp;&amp; definedEx(OPENSSL_SYS_VOS)) || (!definedEx(USE_MD5_RAND) &amp;&amp; ((definedEx(USE_SHA1_RAND) &amp;&amp; (definedEx(OPENSSL_SYS_VOS_HPPA) || definedEx(OPENSSL_SYS_VOS_IA32)) &amp;&amp; definedEx(OPENSSL_SYS_VOS)) || (!definedEx(USE_MDC2_RAND) &amp;&amp; !definedEx(USE_SHA1_RAND) &amp;&amp; (definedEx(OPENSSL_SYS_VOS_HPPA) || definedEx(OPENSSL_SYS_VOS_IA32)) &amp;&amp; definedEx(OPENSSL_SYS_VOS)))))) || (!definedEx(OPENSSL_NO_DES) &amp;&amp; (definedEx(OPENSSL_SYS_VOS_HPPA) || definedEx(OPENSSL_SYS_VOS_IA32)) &amp;&amp; definedEx(OPENSSL_SYS_VOS)))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c
            </file>
            <line>
                210
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c
            </file>
            <line>
                210
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                s$sleep
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <short/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(OPENSSL_NO_DES) &amp;&amp; ((definedEx(OPENSSL_SYS_VOS_HPPA) &amp;&amp; definedEx(USE_MD5_RAND) &amp;&amp; definedEx(OPENSSL_SYS_VOS)) || (!definedEx(USE_MD5_RAND) &amp;&amp; ((definedEx(OPENSSL_SYS_VOS_HPPA) &amp;&amp; definedEx(USE_SHA1_RAND) &amp;&amp; definedEx(OPENSSL_SYS_VOS)) || (!definedEx(USE_MDC2_RAND) &amp;&amp; !definedEx(USE_SHA1_RAND) &amp;&amp; definedEx(OPENSSL_SYS_VOS_HPPA) &amp;&amp; definedEx(OPENSSL_SYS_VOS)))))) || (definedEx(OPENSSL_SYS_VOS_HPPA) &amp;&amp; !definedEx(OPENSSL_NO_DES) &amp;&amp; definedEx(OPENSSL_SYS_VOS)))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c
            </file>
            <line>
                200
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c
            </file>
            <line>
                200
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rand/rand_unix.c
            </file>
            <line>
                200
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                private_RC4_set_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rc4_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rc4/rc4_utl.c
            </file>
            <line>
                61
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/rc4/rc4_utl.c
            </file>
            <line>
                61
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                vpaes_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1083
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                518
            </line>
            <col>
                27
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_gmult_clmul
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <long/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(__arch64__)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                719
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                719
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                AES_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1793
            </line>
            <col>
                63
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1793
            </line>
            <col>
                63
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1793
            </line>
            <col>
                63
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1793
            </line>
            <col>
                63
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ecb.c
            </file>
            <line>
                69
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c
            </file>
            <line>
                79
            </line>
            <col>
                71
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c
            </file>
            <line>
                79
            </line>
            <col>
                71
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c
            </file>
            <line>
                72
            </line>
            <col>
                71
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c
            </file>
            <line>
                72
            </line>
            <col>
                71
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c
            </file>
            <line>
                64
            </line>
            <col>
                66
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_cfb.c
            </file>
            <line>
                64
            </line>
            <col>
                66
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c
            </file>
            <line>
                266
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c
            </file>
            <line>
                243
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c
            </file>
            <line>
                133
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ige.c
            </file>
            <line>
                107
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_wrap.c
            </file>
            <line>
                84
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ofb.c
            </file>
            <line>
                59
            </line>
            <col>
                62
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ofb.c
            </file>
            <line>
                59
            </line>
            <col>
                62
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ctr.c
            </file>
            <line>
                60
            </line>
            <col>
                73
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_ctr.c
            </file>
            <line>
                60
            </line>
            <col>
                73
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1226
            </line>
            <col>
                28
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1226
            </line>
            <col>
                28
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1107
            </line>
            <col>
                33
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1097
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                847
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                847
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                830
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                830
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                555
            </line>
            <col>
                27
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                537
            </line>
            <col>
                27
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_set_decrypt_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c
            </file>
            <line>
                123
            </line>
            <col>
                6
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                364
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                239
            </line>
            <col>
                8
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                zError
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(ZLIB) &amp;&amp; !definedEx(ZLIB_SHARED))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                128
            </line>
            <col>
                17
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                BF_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(OPENSSL_NO_BF) || definedEx(BF_DEFAULT_OPTIONS)) &amp;&amp; ((!definedEx(OPENSSL_NO_DES) &amp;&amp; !definedEx(OPENSSL_NO_BF)) || (!definedEx(OPENSSL_NO_BF) &amp;&amp; definedEx(BF_DEFAULT_OPTIONS) &amp;&amp; (definedEx(OPENSSL_NO_BF) || definedEx(BF_DEFAULT_OPTIONS)))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1925
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1925
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                string literal: BF_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: BF_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: BF_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: BF_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_ccm64_decrypt_blocks
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                401
            </line>
            <col>
                14
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                _openssl_ebcdic2ascii
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_DES) &amp;&amp; definedEx(_OSD_POSIX))
            </featureexpr><pos>
            <file>
                file /usr/include/openssl/ebcdic.h
            </file>
            <line>
                11
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/ebcdic.h
            </file>
            <line>
                11
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/ebcdic.h
            </file>
            <line>
                11
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/ebcdic.h
            </file>
            <line>
                11
            </line>
            <col>
                21
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                private_AES_set_encrypt_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_misc.c
            </file>
            <line>
                75
            </line>
            <col>
                8
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                AES_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1741
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1741
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1727
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1727
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1713
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1713
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                557
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                529
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                vpaes_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                548
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                520
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                sha1_block_data_order
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHAstate_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_locl.h
            </file>
            <line>
                96
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_locl.h
            </file>
            <line>
                96
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_locl.h
            </file>
            <line>
                96
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_locl.h
            </file>
            <line>
                96
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha_locl.h
            </file>
            <line>
                96
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c
            </file>
            <line>
                158
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_ghash_4bit_x86
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <long/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(__i386__) &amp;&amp; definedEx(__arch64__)) || (!definedEx(__i386__) &amp;&amp; ((definedEx(__i386) &amp;&amp; definedEx(__arch64__)) || (definedEx(__arch64__) &amp;&amp; !definedEx(__i386) &amp;&amp; definedEx(_M_IX86)))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                735
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                735
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                735
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_ccm64_encrypt_blocks
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                400
            </line>
            <col>
                28
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                Camellia_Ekeygen
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <int/>
    </unsigned>
    </array>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c
            </file>
            <line>
                66
            </line>
            <col>
                21
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c
            </file>
            <line>
                66
            </line>
            <col>
                21
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                sha512_block_data_order
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA512state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                235
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                235
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                220
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                220
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                205
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                205
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                133
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                133
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                108
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/sha/sha512.c
            </file>
            <line>
                108
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_gmult_4bit_mmx
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <longlong/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(__i386__) &amp;&amp; !definedEx(__arch64__)) || (!definedEx(__i386__) &amp;&amp; ((definedEx(__i386) &amp;&amp; !definedEx(__arch64__)) || (!definedEx(__arch64__) &amp;&amp; !definedEx(__i386) &amp;&amp; definedEx(_M_IX86)))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                731
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                731
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                731
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                get_ip
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bio/b_sock.c
            </file>
            <line>
                127
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bio/b_sock.c
            </file>
            <line>
                127
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bio/b_sock.c
            </file>
            <line>
                127
            </line>
            <col>
                3
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                BF_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(_CRAY) &amp;&amp; !definedEx(OPENSSL_NO_BF) &amp;&amp; (definedEx(BF_DEFAULT_OPTIONS) || !definedEx(_CRAY) || definedEx(OPENSSL_NO_BF)))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c
            </file>
            <line>
                91
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c
            </file>
            <line>
                91
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bf/bf_ecb.c
            </file>
            <line>
                91
            </line>
            <col>
                2
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                AES_xts_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(AES_XTS_ASM)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1062
            </line>
            <col>
                23
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1062
            </line>
            <col>
                23
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_xts_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                366
            </line>
            <col>
                18
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                ASN1_d2i_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(NO_OLD_ASN1)
            </featureexpr><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                1005
            </line>
            <col>
                56
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                RC5_32_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rc5_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC5)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1909
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/apps/speed.c
            </file>
            <line>
                1909
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                string literal: RC5_32_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: RC5_32_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: RC5_32_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: RC5_32_cbc_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                inflate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        z_stream_s
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(ZLIB) &amp;&amp; !definedEx(ZLIB_SHARED))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                123
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                123
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                123
            </line>
            <col>
                32
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/comp/c_zlib.c
            </file>
            <line>
                123
            </line>
            <col>
                32
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                Camellia_DecryptBlock_Rounds
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <int/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c
            </file>
            <line>
                79
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/camellia/cmll_misc.c
            </file>
            <line>
                79
            </line>
            <col>
                1
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_ghash_clmul
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <long/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(__arch64__)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                720
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                720
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                RC5_32_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rc5_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC5)
            </featureexpr><pos>
            <file>
                string literal: RC5_32_ecb_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos><pos>
            <file>
                string literal: RC5_32_ecb_encrypt
            </file>
            <line>
                1
            </line>
            <col>
                0
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_gmult_4bit
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <longlong/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(__i386) &amp;&amp; !definedEx(__i386__) &amp;&amp; !definedEx(__arch64__) &amp;&amp; !definedEx(_M_IX86))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                738
            </line>
            <col>
                14
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                738
            </line>
            <col>
                14
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                rc4_md5_enc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rc4_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        MD5state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_RC4) &amp;&amp; ((definedEx(OPENSSL_NO_ASM) &amp;&amp; definedEx(STITCHED_CALL)) || (!definedEx(OPENSSL_NO_ASM) &amp;&amp; (definedEx(STITCHED_CALL) || !definedEx(__APPLE__) || !definedEx(__MACH__)))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                183
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                183
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                142
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_rc4_hmac_md5.c
            </file>
            <line>
                142
            </line>
            <col>
                3
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                vpaes_set_decrypt_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1082
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                517
            </line>
            <col>
                8
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_gmult_clmul
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <longlong/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(__arch64__)
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                719
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                719
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                ASN1_d2i_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(NO_OLD_ASN1)
            </featureexpr><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /usr/include/openssl/asn1.h
            </file>
            <line>
                977
            </line>
            <col>
                55
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/x509/x_all.c
            </file>
            <line>
                245
            </line>
            <col>
                8
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_ghash_4bit_mmx
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <long/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(__i386__) &amp;&amp; definedEx(__arch64__)) || (!definedEx(__i386__) &amp;&amp; ((definedEx(__i386) &amp;&amp; definedEx(__arch64__)) || (definedEx(__arch64__) &amp;&amp; !definedEx(__i386) &amp;&amp; definedEx(_M_IX86)))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                732
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                732
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                732
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_gmult_4bit_x86
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <longlong/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(__i386__) &amp;&amp; !definedEx(__arch64__)) || (!definedEx(__i386__) &amp;&amp; ((definedEx(__i386) &amp;&amp; !definedEx(__arch64__)) || (!definedEx(__arch64__) &amp;&amp; !definedEx(__i386) &amp;&amp; definedEx(_M_IX86)))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                734
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                734
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                734
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                399
            </line>
            <col>
                28
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                399
            </line>
            <col>
                28
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                371
            </line>
            <col>
                33
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                359
            </line>
            <col>
                34
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                315
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                315
            </line>
            <col>
                16
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                247
            </line>
            <col>
                27
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bn_div_3_words
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_ASM) &amp;&amp; definedEx(BN_DIV3W))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_div.c
            </file>
            <line>
                321
            </line>
            <col>
                4
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/bn/bn_div.c
            </file>
            <line>
                321
            </line>
            <col>
                4
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                bsaes_xts_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                1069
            </line>
            <col>
                44
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_xts_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                360
            </line>
            <col>
                18
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                aesni_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c
            </file>
            <line>
                240
            </line>
            <col>
                2
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c
            </file>
            <line>
                233
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes_cbc_hmac_sha1.c
            </file>
            <line>
                230
            </line>
            <col>
                3
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                268
            </line>
            <col>
                1
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                249
            </line>
            <col>
                31
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/evp/e_aes.c
            </file>
            <line>
                242
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                gcm_gmult_4bit_x86
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <long/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <array length="-1">
        <astruct isUnion="false">
        
    </astruct>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(__i386__) &amp;&amp; definedEx(__arch64__)) || (!definedEx(__i386__) &amp;&amp; ((definedEx(__i386) &amp;&amp; definedEx(__arch64__)) || (definedEx(__arch64__) &amp;&amp; !definedEx(__i386) &amp;&amp; definedEx(_M_IX86)))))
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                734
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                734
            </line>
            <col>
                15
            </col>
        </pos><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/modes/gcm128.c
            </file>
            <line>
                734
            </line>
            <col>
                15
            </col>
        </pos>
        </sig>
        </import><import>
            <sig>
            <name>
                private_AES_set_decrypt_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                file /home/janker/FOSD/cRefactor-OpenSSLEvaluation/openssl/crypto/aes/aes_misc.c
            </file>
            <line>
                84
            </line>
            <col>
                8
            </col>
        </pos>
        </sig>
        </import><export>
            <sig>
            <name>
                ec_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pkcs7_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                do_X509_CRL_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_STRING
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                do_X509_REQ_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_STRING
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                do_X509_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_STRING
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                req_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                rsautl_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pkcs8_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                dsa_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                srp_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                dsaparam_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                raw_write_stdout
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                raw_read_stdin
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                app_isdir
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                app_tminterval
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <double/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                next_protos_parse
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <short/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_NEXTPROTONEG)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                policies_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pkey_ctrl_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bio_to_mem
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                args_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                parse_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                parse_yesno
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                free_index
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ca_db_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                rotate_index
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                save_index
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ca_db_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                index_index
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ca_db_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                load_index
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        db_attr_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ca_db_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                rand_serial
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                rotate_serial
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                save_serial
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                load_serial
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                index_name_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                make_config_name
            </name>
            <type>
                <function>
        <ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                load_config
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                setup_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                print_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                copy_extensions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                set_ext_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                set_name_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                set_cert_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                load_crls
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_CRL
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                load_certs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                load_pubkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                load_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                load_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                add_oid_section
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                app_passwd
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                password_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pw_cb_data
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                destroy_ui_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                setup_ui_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                dump_cert_text
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                app_init
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(APP_INIT)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                chopup_args
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        args_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <array length="-1">
        <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
    </array>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                program_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                str2fmt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pkeyutl_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gendh_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                rand_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                unpack_revinfo
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                old_entry_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                make_revoked
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                make_revocation_str
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ca_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                verify_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                prime_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                smime_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                dhparam_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                spkac_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                crl_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                nseq_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                rsa_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                hex_prin
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                print_attribs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cert_load
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                alg_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_cert_chain
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                dump_certs_pkeys_bag
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                dump_certs_pkeys_bags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_PKCS12_SAFEBAG
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                dump_certs_keys_p12
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pkcs12_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ts_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                passwd_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                app_RAND_allow_write_file
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                app_RAND_write_file
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                app_RAND_load_files
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                app_RAND_load_file
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ecparam_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                genrsa_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pkey_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pkeyparam_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                crl2pkcs7_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                version_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gendsa_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                set_hex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                enc_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1parse_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                dh_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                speed_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_dsa2048
            </name>
            <type>
                <function>
        <ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_dsa1024
            </name>
            <type>
                <function>
        <ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_dsa512
            </name>
            <type>
                <function>
        <ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                init_gen_str
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                genpkey_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                x509_main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                finish_hash
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gost_hash_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                hash_block
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gost_hash_ctx
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                start_hash
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gost_hash_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                done_gost_hash_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gost_hash_ctx
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                init_gost_hash_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gost_hash_ctx
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                keyUnwrapCryptoPro
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                keyWrapCryptoPro
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                keyDiversifyCryptoPro
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cryptopro_key_meshing
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_mac_iv
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_mac
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_mac
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                mac_block
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_destroy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_get_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_enc_with_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_dec_cfb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_enc_cfb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_dec
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gost_enc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gostdecrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                gostcrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_GOST_error
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_unload_GOST_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_GOST_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_AUTHENT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_AUTHENTBODY
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_AUTHENT_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_AUTHENTBODY
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_AUTHENT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_AUTHENTBODY
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_AUTHENT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_KRB5_AUTHENTBODY
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_AUTHENTBODY
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_AUTHENTBODY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_authenticator_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_AUTHENTBODY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_authenticator_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_AUTHENTBODY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_authenticator_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_AUTHENTBODY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        krb5_authenticator_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_authenticator_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_AUTHDATA_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_authorization_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_AUTHDATA_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_authorization_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_AUTHDATA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_authorization_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_AUTHDATA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        krb5_authorization_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_authorization_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_ENCKEY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_encryptionkey_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_ENCKEY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_encryptionkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_ENCKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_encryptionkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_ENCKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        krb5_encryptionkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_encryptionkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_CHECKSUM_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_checksum_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_CHECKSUM_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_checksum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_CHECKSUM
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_checksum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_CHECKSUM
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        krb5_checksum_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_checksum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_APREQ_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_APREQBODY
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_APREQ_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_APREQBODY
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_APREQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_APREQBODY
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_APREQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_KRB5_APREQBODY
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_APREQBODY
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_APREQBODY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_ap_req_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_APREQBODY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_ap_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_APREQBODY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_ap_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_APREQBODY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        krb5_ap_req_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_ap_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_TICKET_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_TKTBODY
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_TICKET_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_TKTBODY
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_TICKET
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_TKTBODY
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_TICKET
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_KRB5_TKTBODY
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_KRB5_TKTBODY
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_TKTBODY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_tktbody_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_TKTBODY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_tktbody_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_TKTBODY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_tktbody_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_TKTBODY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        krb5_tktbody_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_tktbody_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_PRINCNAME_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_princname_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_PRINCNAME_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_princname_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_PRINCNAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_princname_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_PRINCNAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        krb5_princname_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_princname_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_ENCDATA_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_encdata_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                KRB5_ENCDATA_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_encdata_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_KRB5_ENCDATA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        krb5_encdata_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_KRB5_ENCDATA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        krb5_encdata_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        krb5_encdata_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_init
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_item_i2d_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_item_decrypt_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_pbe_crypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS8_encrypt
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_add_safes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_PKCS7
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_add_safe
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_PKCS7
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_PKCS12_SAFEBAG
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_add_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_PKCS12_SAFEBAG
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_add_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_PKCS12_SAFEBAG
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_create
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS8_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_PBE_keyivgen
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_PBE_add
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_PKCS12_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_unpack_authsafes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_PKCS7
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_pack_authsafes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_PKCS7
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_decrypt_skey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_unpack_p7encdata
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_PKCS12_SAFEBAG
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_pack_p7encdata
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_PKCS12_SAFEBAG
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_unpack_p7data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_PKCS12_SAFEBAG
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_pack_p7data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_PKCS12_SAFEBAG
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_MAKE_SHKEYBAG
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_MAKE_KEYBAG
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_item_pack_safebag
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_certbag2x509crl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_certbag2x509
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_x509crl2certbag
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_x5092certbag
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS12_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS12_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS12_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS12_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_uni2asc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_asc2uni
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_newpass
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_SAFEBAG_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_SAFEBAG_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS12_SAFEBAG
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS12_SAFEBAG
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_BAGS_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs12_bag_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_BAGS_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs12_bag_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS12_BAGS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs12_bag_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS12_BAGS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs12_bag_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs12_bag_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_MAC_DATA_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_MAC_DATA_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS12_MAC_DATA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS12_MAC_DATA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS12
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS12
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_get_friendlyname
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_get_attr_gen
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_add_CSPName_asc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_add_friendlyname_uni
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_add_friendlyname_asc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS8_add_keyusage
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_add_localkeyid
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                h__dump
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(DEBUG_KEYGEN)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_key_gen_uni
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_key_gen_asc
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS12_parse
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_get_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_set_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_get_ex_new_index
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_size
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ecdsa_check
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ecdsa_data_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_set_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ecdsa_method
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_get_default_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ecdsa_method
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_set_default_method
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ecdsa_method
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_SIG_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ECDSA_SIG_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_SIG_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ECDSA_SIG_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ECDSA_SIG
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ECDSA_SIG_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ECDSA_SIG
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ECDSA_SIG_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ECDSA_SIG_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_verify
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_do_verify
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ECDSA_SIG_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_sign_setup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_sign_ex
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_sign
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_do_sign_ex
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ECDSA_SIG_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_do_sign
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ECDSA_SIG_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDSA_OpenSSL
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ecdsa_method
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_ECDSA_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SEED_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        seed_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SEED_cfb128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        seed_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SEED_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        seed_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SEED_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        seed_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SEED_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        seed_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SEED_set_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        seed_key_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SEED_ofb128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        seed_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_f_zlib
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(ZLIB)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                COMP_zlib_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                COMP_zlib
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        comp_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                COMP_expand_block
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        comp_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                COMP_compress_block
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        comp_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                COMP_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        comp_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                COMP_CTX_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        comp_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        comp_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_COMP_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                COMP_rle
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        comp_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ripemd160_block_data_order
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        RIPEMD160state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_RIPEMD) &amp;&amp; !definedEx(ripemd160_block_data_order))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RIPEMD160_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        RIPEMD160state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RIPEMD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RIPEMD160_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        RIPEMD160state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RIPEMD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RIPEMD160_Transform
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        RIPEMD160state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RIPEMD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RIPEMD160_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        RIPEMD160state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RIPEMD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RIPEMD160
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RIPEMD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA1
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHAstate_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA0)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        SHAstate_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA0)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA_Transform
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHAstate_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA0)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHAstate_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA0)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA256_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        SHA256state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA256_Transform
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA256state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA256_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA256state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA224_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        SHA256state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA224_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA256state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA256
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA224
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA256_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA256state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA224_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA256state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA1_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHAstate_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA1_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        SHAstate_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA1_Transform
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHAstate_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA1_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHAstate_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA0)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA512
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA384
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA512_Transform
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA512state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA384_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA512state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA512_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA512state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA384_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        SHA512state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA512_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        SHA512state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA512_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA512state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SHA384_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SHA512state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_nist_field_sqr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_nist_field_mul
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_nist_group_set_curve
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_nist_group_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GFp_nist_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_check
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_have_precompute_mult
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_precompute_mult
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_mul
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <array length="-1">
        <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
    </array>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_get_builtin_curves
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_new_by_curve_name
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_new_curve_GF2m
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_new_curve_GFp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_field_div
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_field_sqr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_field_mul
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_points_make_affine
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <array length="-1">
        <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
    </array>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_make_affine
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_is_on_curve
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_is_at_infinity
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_invert
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_dbl
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_add
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_point_get_affine_coordinates
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_point_set_affine_coordinates
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_point_set_to_infinity
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_point_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_point_clear_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_point_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_point_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_group_check_discriminant
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_group_get_degree
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_group_get_curve
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_group_set_curve
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_group_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_group_clear_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_group_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_group_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GF2m_simple_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_oct2point
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_point2oct
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GF2m_simple_set_compressed_coordinates
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_oct2point
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_point2oct
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_set_compressed_coordinates_GF2m
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_set_compressed_coordinates_GFp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_have_precompute_mult
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_precompute_mult
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_mul
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINTs_mul
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <array length="-1">
        <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
    </array>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINTs_make_affine
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <array length="-1">
        <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
    </array>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_make_affine
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_is_on_curve
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_is_at_infinity
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_invert
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_dbl
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_add
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_get_affine_coordinates_GF2m
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_get_affine_coordinates_GFp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_set_affine_coordinates_GF2m
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_set_affine_coordinates_GFp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_get_Jprojective_coordinates_GFp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_set_Jprojective_coordinates_GFp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_set_to_infinity
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_method_of
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_dup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_clear_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_new
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_EX_DATA_clear_free_all_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_extra_data_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_EX_DATA_free_all_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_extra_data_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_EX_DATA_clear_free_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_extra_data_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_EX_DATA_free_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_extra_data_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_EX_DATA_get_data
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_extra_data_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_EX_DATA_set_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_extra_data_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_check_discriminant
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_degree
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_curve_GF2m
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_set_curve_GF2m
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_curve_GFp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_set_curve_GFp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_seed_len
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get0_seed
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_set_seed
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_point_conversion_form
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <int/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_set_point_conversion_form
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_asn1_flag
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_set_asn1_flag
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_curve_name
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_set_curve_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_cofactor
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_order
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get0_generator
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_set_generator
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_METHOD_get_field_type
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_method_of
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_dup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_clear_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_new
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_clear_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_set_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_get_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_precompute_mult
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_set_asn1_flag
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_insert_key_method_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_get_key_method_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_set_conv_form
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_get_conv_form
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <int/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_set_enc_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_get_enc_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <int/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_set_public_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_get0_public_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_set_private_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_get0_private_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_set_group
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_get0_group
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_set_public_key_affine_coordinates
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_check_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_generate_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_up_ref
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_dup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_new_by_curve_name
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_hex2point
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_point2hex
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_bn2point
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_POINT_point2bn
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_EC_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECPKParameters_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECParameters_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECParameters_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_KEY_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECPKParameters_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_wNAF_have_precompute_mult
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_wNAF_precompute_mult
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_wNAF_mul
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <array length="-1">
        <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
    </array>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_oct2point
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_point2oct
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_set_compressed_coordinates
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_field_sqr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_field_mul
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_points_make_affine
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <array length="-1">
        <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
    </array>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_make_affine
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_is_on_curve
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_is_at_infinity
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_invert
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_dbl
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_add
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_point_get_affine_coordinates
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_point_set_affine_coordinates
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_get_Jprojective_coordinates_GFp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_set_Jprojective_coordinates_GFp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_point_set_to_infinity
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_point_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_point_clear_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_point_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_point_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_group_check_discriminant
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_group_get_degree
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_group_get_curve
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_group_set_curve
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_group_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_group_clear_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_group_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_simple_group_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GFp_simple_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_mont_field_set_to_one
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_mont_field_decode
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_mont_field_encode
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_mont_field_sqr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_mont_field_mul
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_mont_group_set_curve
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_mont_group_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_mont_group_clear_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_mont_group_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_GFp_mont_group_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GFp_mont_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2o_ECPublicKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                o2i_ECPublicKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ECParameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ECParameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ECPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ECPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ECPKParameters
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ECPKParameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_asn1_pkparameters2group
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ecpk_parameters_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ec_asn1_group2pkparameters
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ecpk_parameters_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ecpk_parameters_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_PRIVATEKEY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_privatekey_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_PRIVATEKEY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_privatekey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_EC_PRIVATEKEY
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_privatekey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_EC_PRIVATEKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_privatekey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_privatekey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECPKPARAMETERS_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ecpk_parameters_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECPKPARAMETERS_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ecpk_parameters_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ECPKPARAMETERS
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ecpk_parameters_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ECPKPARAMETERS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ecpk_parameters_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ecpk_parameters_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECPARAMETERS_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_parameters_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECPARAMETERS_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_parameters_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X9_62_CHARACTERISTIC_TWO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x9_62_characteristic_two_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X9_62_CHARACTERISTIC_TWO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x9_62_characteristic_two_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X9_62_PENTANOMIAL_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x9_62_pentanomial_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X9_62_PENTANOMIAL_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x9_62_pentanomial_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_pentanomial_basis
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_trinomial_basis
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EC_GROUP_get_basis_type
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                idea_ofb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        idea_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                idea_cfb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        idea_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                idea_set_decrypt_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        idea_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        idea_key_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                idea_set_encrypt_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        idea_key_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                idea_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        idea_key_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                idea_options
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                idea_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        idea_key_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                idea_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        idea_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_ASN1_read_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_PKCS8_PRIV_KEY_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_PKCS8_PRIV_KEY_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_PKCS8_PRIV_KEY_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_PKCS8_PRIV_KEY_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_PKCS8
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_PKCS8
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_PKCS8
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_PKCS8
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS8PrivateKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_PKCS8PrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_PKCS8PrivateKey_nid
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8PrivateKey_nid_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8PrivateKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS8PrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8PrivateKey_nid_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8PrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_PKCS8PrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_PKCS8PrivateKey_nid
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_X509_CERT_PAIR
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_X509_CERT_PAIR
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_X509_CERT_PAIR
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_X509_CERT_PAIR
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_X509_AUX
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_X509_AUX
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_X509_AUX
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_X509_AUX
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2b_PVK_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                b2i_PVK_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2b_PublicKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2b_PrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                b2i_PublicKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                b2i_PrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                b2i_PublicKey
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                b2i_PrivateKey
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_SignFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_SignUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_SignInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_PEM_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_SealFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PEM_Encode_Seal_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_SealUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PEM_Encode_Seal_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_SealInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PEM_Encode_Seal_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_X509
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_X509
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_X509
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_X509
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pem_check_suffix
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_get_EVP_CIPHER_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_do_header
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_ASN1_write_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_ASN1_write
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_bytes_read_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_ASN1_read
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_dek_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_proc_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_def_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_PrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_PrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_Parameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_Parameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_PrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_PrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_X509_INFO_write_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_X509_INFO_read_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_INFO
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_INFO
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_X509_INFO_read
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_INFO
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_INFO
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_DHparams
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_DHparams
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_DHparams
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_DHparams
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_ECPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_EC_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_EC_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_EC_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_EC_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_ECPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_ECPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_ECPKParameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_ECPKParameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_ECPKParameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_ECPKParameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_group_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_ECPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_DSAparams
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_DSAparams
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_DSAparams
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_DSAparams
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_DSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_DSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_DSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_DSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_DSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_DSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_DSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_DSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_RSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_RSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_RSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_RSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_RSAPublicKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_RSAPublicKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_RSAPublicKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_RSAPublicKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_RSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_RSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_RSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_RSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_NETSCAPE_CERT_SEQUENCE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_NETSCAPE_CERT_SEQUENCE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_NETSCAPE_CERT_SEQUENCE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_NETSCAPE_CERT_SEQUENCE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_PKCS7
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_PKCS7
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_PKCS7
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_PKCS7
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_X509_CRL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_X509_CRL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_X509_CRL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_X509_CRL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_X509_REQ_NEW
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_X509_REQ_NEW
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_X509_REQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_X509_REQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_X509_REQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_X509_REQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_mem_leaks_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_mem_leaks_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_mem_leaks
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_dbg_realloc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_dbg_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_dbg_malloc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_remove_all_info
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_pop_info
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_push_info_
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_dbg_get_options
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_dbg_set_options
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_is_mem_check_on
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_mem_ctrl
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_check
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_POLICY_TREE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_ASN1_OBJECT
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_tree_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_TREE_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                POLICY_CONSTRAINTS_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        POLICY_CONSTRAINTS_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                POLICY_CONSTRAINTS_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        POLICY_CONSTRAINTS_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2a_ACCESS_DESCRIPTION
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ACCESS_DESCRIPTION_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AUTHORITY_INFO_ACCESS_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_ACCESS_DESCRIPTION
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AUTHORITY_INFO_ACCESS_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_ACCESS_DESCRIPTION
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_AUTHORITY_INFO_ACCESS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_ACCESS_DESCRIPTION
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_AUTHORITY_INFO_ACCESS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_ACCESS_DESCRIPTION
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_ACCESS_DESCRIPTION
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ACCESS_DESCRIPTION_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ACCESS_DESCRIPTION_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ACCESS_DESCRIPTION_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ACCESS_DESCRIPTION_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ACCESS_DESCRIPTION
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ACCESS_DESCRIPTION_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ACCESS_DESCRIPTION
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ACCESS_DESCRIPTION_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ACCESS_DESCRIPTION_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2s_ASN1_ENUMERATED_TABLE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_NAME_from_section
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                a2i_ipadd
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                a2i_IPADDRESS_NC
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                a2i_IPADDRESS
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_email_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_STRING
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_get1_email
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_STRING
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get1_ocsp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_STRING
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get1_email
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_STRING
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                name_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                string_to_hex
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                hex_to_string
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_parse_list
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_get_value_int
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_get_value_bool
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_add_value_int
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                s2i_ASN1_INTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2s_ASN1_INTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2s_ASN1_ENUMERATED
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_add_value_bool_nf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_add_value_bool
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_conf_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_add_value_uchar
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_add_value
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DIST_POINT_set_dpname
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        DIST_POINT_NAME_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ISSUING_DIST_POINT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ISSUING_DIST_POINT_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ISSUING_DIST_POINT_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ISSUING_DIST_POINT_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ISSUING_DIST_POINT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ISSUING_DIST_POINT_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ISSUING_DIST_POINT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ISSUING_DIST_POINT_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ISSUING_DIST_POINT_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRL_DIST_POINTS_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_DIST_POINT
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRL_DIST_POINTS_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_DIST_POINT
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_CRL_DIST_POINTS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_DIST_POINT
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_CRL_DIST_POINTS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_DIST_POINT
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_DIST_POINT
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DIST_POINT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        DIST_POINT_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DIST_POINT_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        DIST_POINT_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DIST_POINT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        DIST_POINT_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DIST_POINT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        DIST_POINT_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        DIST_POINT_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DIST_POINT_NAME_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        DIST_POINT_NAME_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DIST_POINT_NAME_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        DIST_POINT_NAME_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DIST_POINT_NAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        DIST_POINT_NAME_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DIST_POINT_NAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        DIST_POINT_NAME_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        DIST_POINT_NAME_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                POLICY_MAPPING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        POLICY_MAPPING_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                POLICY_MAPPING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        POLICY_MAPPING_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_X509V3_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                policy_data_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        POLICYINFO_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_DATA_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                policy_data_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_DATA_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NAME_CONSTRAINTS_check
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        NAME_CONSTRAINTS_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NAME_CONSTRAINTS_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        NAME_CONSTRAINTS_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NAME_CONSTRAINTS_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        NAME_CONSTRAINTS_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_SUBTREE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_SUBTREE_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_SUBTREE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        GENERAL_SUBTREE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKEY_USAGE_PERIOD_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PKEY_USAGE_PERIOD_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKEY_USAGE_PERIOD_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PKEY_USAGE_PERIOD_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKEY_USAGE_PERIOD
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PKEY_USAGE_PERIOD_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKEY_USAGE_PERIOD
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        PKEY_USAGE_PERIOD_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PKEY_USAGE_PERIOD_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SXNET_get_id_INTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SXNET_get_id_ulong
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SXNET_get_id_asc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SXNET_add_id_INTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SXNET_add_id_ulong
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SXNET_add_id_asc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SXNET_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SXNET_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_SXNET
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_SXNET
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        SXNET_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SXNETID_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SXNET_ID_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SXNETID_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        SXNET_ID_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_SXNETID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SXNET_ID_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_SXNETID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        SXNET_ID_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        SXNET_ID_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                s2i_ASN1_OCTET_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2s_ASN1_OCTET_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                policy_node_match
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_LEVEL_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                policy_node_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                level_add_node
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_LEVEL_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_DATA_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_TREE_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                level_find_node
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_LEVEL_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                tree_find_sk
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_POLICY_NODE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                policy_node_cmp_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_POLICY_NODE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EXTENDED_KEY_USAGE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_ASN1_OBJECT
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EXTENDED_KEY_USAGE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_ASN1_OBJECT
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_EXTENDED_KEY_USAGE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_ASN1_OBJECT
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_EXTENDED_KEY_USAGE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_ASN1_OBJECT
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_ASN1_OBJECT
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_POLICY_NODE_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NOTICEREF_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        NOTICEREF_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NOTICEREF_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        NOTICEREF_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_NOTICEREF
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        NOTICEREF_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_NOTICEREF
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        NOTICEREF_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        NOTICEREF_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                USERNOTICE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        USERNOTICE_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                USERNOTICE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        USERNOTICE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_USERNOTICE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        USERNOTICE_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_USERNOTICE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        USERNOTICE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        USERNOTICE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                POLICYQUALINFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        POLICYQUALINFO_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                POLICYQUALINFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        POLICYQUALINFO_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_POLICYQUALINFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        POLICYQUALINFO_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_POLICYQUALINFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        POLICYQUALINFO_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        POLICYQUALINFO_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                POLICYINFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        POLICYINFO_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                POLICYINFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        POLICYINFO_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_POLICYINFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        POLICYINFO_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_POLICYINFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        POLICYINFO_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        POLICYINFO_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CERTIFICATEPOLICIES_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_POLICYINFO
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CERTIFICATEPOLICIES_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_POLICYINFO
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_CERTIFICATEPOLICIES
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_POLICYINFO
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_CERTIFICATEPOLICIES
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_POLICYINFO
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_POLICYINFO
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BASIC_CONSTRAINTS_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        BASIC_CONSTRAINTS_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BASIC_CONSTRAINTS_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        BASIC_CONSTRAINTS_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_BASIC_CONSTRAINTS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        BASIC_CONSTRAINTS_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_BASIC_CONSTRAINTS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        BASIC_CONSTRAINTS_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        BASIC_CONSTRAINTS_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_check_akid
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        AUTHORITY_KEYID_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_check_issued
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_check_ca
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_supported_extension
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_get_trust
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_purpose_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_get0_sname
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_purpose_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_get0_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_purpose_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_get_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_purpose_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_add
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_purpose_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_get_by_id
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_get_by_sname
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_get0
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_purpose_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_get_count
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PURPOSE_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_check_purpose
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                v2i_ASN1_BIT_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2v_ASN1_BIT_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_REQ_add_conf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_CRL_add_conf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_add_conf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_set_conf_lhash
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_conf_nid
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_conf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_set_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_set_nconf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_section_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_string_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_get_section
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_get_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_REQ_add_nconf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_CRL_add_nconf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_add_nconf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_add_nconf_sk
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_i2d
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_nconf_nid
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_nconf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_extensions_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_val_prn
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                policy_cache_set_mapping
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_POLICY_MAPPING
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PROXY_CERT_INFO_EXTENSION_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PROXY_CERT_INFO_EXTENSION_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PROXY_CERT_INFO_EXTENSION_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PROXY_CERT_INFO_EXTENSION_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PROXY_CERT_INFO_EXTENSION
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PROXY_CERT_INFO_EXTENSION_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PROXY_CERT_INFO_EXTENSION
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        PROXY_CERT_INFO_EXTENSION_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PROXY_CERT_INFO_EXTENSION_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PROXY_POLICY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PROXY_POLICY_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PROXY_POLICY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PROXY_POLICY_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PROXY_POLICY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PROXY_POLICY_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PROXY_POLICY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        PROXY_POLICY_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PROXY_POLICY_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAME_get0_otherName
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAME_set0_othername
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAME_get0_value
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAME_set0_value
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OTHERNAME_cmp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        otherName_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        otherName_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAME_cmp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAME_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAMES_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAME
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAMES_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAME
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_GENERAL_NAMES
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAME
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_GENERAL_NAMES
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAME
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAME
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAME_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAME_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_GENERAL_NAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_GENERAL_NAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EDIPARTYNAME_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        EDIPartyName_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EDIPARTYNAME_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        EDIPartyName_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_EDIPARTYNAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        EDIPartyName_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_EDIPARTYNAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        EDIPartyName_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        EDIPartyName_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OTHERNAME_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        otherName_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OTHERNAME_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        otherName_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OTHERNAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        otherName_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OTHERNAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        otherName_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        otherName_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                v2i_GENERAL_NAME_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                a2i_GENERAL_NAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                v2i_GENERAL_NAME
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                v2i_GENERAL_NAMES
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAME
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                GENERAL_NAME_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2v_GENERAL_NAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2v_GENERAL_NAMES
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAME
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AUTHORITY_KEYID_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        AUTHORITY_KEYID_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AUTHORITY_KEYID_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        AUTHORITY_KEYID_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_AUTHORITY_KEYID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        AUTHORITY_KEYID_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_AUTHORITY_KEYID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        AUTHORITY_KEYID_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        AUTHORITY_KEYID_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                policy_cache_find_data
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_CACHE_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_DATA_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                policy_cache_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_CACHE_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                policy_cache_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_CACHE_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_add1_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_get_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_add_standard_extensions
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_add_alias
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_add_list
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_get
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_get_nid
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509V3_EXT_add
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        v3_ext_method
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_node_get0_parent
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_node_get0_qualifiers
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_POLICYQUALINFO
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_node_get0_policy
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_level_get0_node
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_LEVEL_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_NODE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_level_node_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_LEVEL_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_tree_get0_user_policies
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_TREE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_POLICY_NODE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_tree_get0_policies
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_TREE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_POLICY_NODE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_tree_get0_level
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_TREE_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_LEVEL_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_policy_tree_level_count
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_TREE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ctr128_encrypt_ctr32
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ctr128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ofb128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ccm128_tag
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ccm128_context
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ccm128_decrypt_ccm64
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ccm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ccm128_encrypt_ccm64
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ccm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ccm128_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ccm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ccm128_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ccm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ccm128_aad
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ccm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ccm128_setiv
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ccm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ccm128_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ccm128_context
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_xts128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        xts128_context
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_nistcts128_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_cts128_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_nistcts128_decrypt_block
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_cts128_decrypt_block
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_nistcts128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_cts128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_nistcts128_encrypt_block
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_cts128_encrypt_block
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_release
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_tag
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_decrypt_ctr32
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_encrypt_ctr32
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_aad
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_setiv
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_gcm128_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        gcm128_context
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_cbc128_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_cbc128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_cfb128_8_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_cfb128_1_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_cfb128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                FIPS_mode_set
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                FIPS_mode
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_CRYPTO_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SSLeay
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SSLeay_version
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RC4_set_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rc4_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_null_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_meth_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_check_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_verify_ASN1_OCTET_STRING
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_sign_ASN1_OCTET_STRING
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_PKCS1_SSLeay
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_meth_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(RSA_NULL)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_add_PKCS1_PSS_mgf1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_add_PKCS1_PSS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_verify_PKCS1_PSS_mgf1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_verify_PKCS1_PSS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_generate_key
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_memory_lock
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_get_ex_data
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_set_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_get_ex_new_index
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_up_ref
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_new_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_set_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_meth_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_get_method
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_meth_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_get_default_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_meth_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_set_default_method
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_meth_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_X931_hash_id
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_check_X931
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_add_X931
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS1_MGF1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_check_PKCS1_OAEP
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_add_PKCS1_OAEP
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_check_PKCS1_type_2
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_add_PKCS1_type_2
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_check_PKCS1_type_1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_add_PKCS1_type_1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_RSA_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_generate_key_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_setup_blinding
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_blinding_on
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_blinding_off
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_public_decrypt
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_private_decrypt
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_private_encrypt
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_public_encrypt
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_size
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSAPrivateKey_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSAPublicKey_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSAPublicKey
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSAPublicKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_PSS_PARAMS_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_pss_params_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_PSS_PARAMS_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_pss_params_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSA_PSS_PARAMS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_pss_params_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSA_PSS_PARAMS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_pss_params_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_pss_params_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_check_none
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_add_none
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_verify
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                int_rsa_verify
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_sign
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_check_SSLv23
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RSA_padding_add_SSLv23
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_memcmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_strcasecmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_strncasecmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BUF_reverse
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BUF_MEM_grow_clean
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        buf_mem_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BUF_MEM_grow
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        buf_mem_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BUF_MEM_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        buf_mem_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BUF_MEM_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        buf_mem_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BUF_strlcat
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BUF_strlcpy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BUF_memdup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BUF_strndup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BUF_strdup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_BUF_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_DIR_end
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        OPENSSL_dir_context_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_DIR_read
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        OPENSSL_dir_context_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMAC_resume
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMAC_CTX_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMAC_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMAC_CTX_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMAC_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMAC_CTX_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMAC_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMAC_CTX_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMAC_CTX_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMAC_CTX_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMAC_CTX_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMAC_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMAC_CTX_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMAC_CTX_get0_cipher_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMAC_CTX_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMAC_CTX_cleanup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMAC_CTX_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMAC_CTX_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMAC_CTX_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_init
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_ex_data
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_free_ex_data
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_dup_ex_data
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_new_ex_data
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_ex_new_index
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_cleanup_all_ex_data
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_ex_data_new_class
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_ex_data_implementation
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        st_CRYPTO_EX_DATA_IMPL
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_ex_data_implementation
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        st_CRYPTO_EX_DATA_IMPL
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_pop_to_mark
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_set_mark
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_add_error_vdata
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <builtinvalist/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_add_error_data
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <vargs/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_set_error_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_get_next_error_library
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_get_state
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        err_state_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_remove_state
            </name>
            <type>
                <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_remove_thread_state
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_reason_error_string
            </name>
            <type>
                <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_func_error_string
            </name>
            <type>
                <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_lib_error_string
            </name>
            <type>
                <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_release_err_state_table
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        lhash_st_ERR_STATE
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_get_err_state_table
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        lhash_st_ERR_STATE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_get_string_table
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        lhash_st_ERR_STRING_DATA
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_error_string
            </name>
            <type>
                <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_error_string_n
            </name>
            <type>
                <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_peek_last_error_line_data
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_peek_last_error_line
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_peek_last_error
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_peek_error_line_data
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_peek_error_line
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_peek_error
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_get_error_line_data
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_get_error_line
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_get_error
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_clear_error
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_put_error
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_free_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_unload_strings
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ERR_string_data_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_strings
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        ERR_string_data_st
    </struct>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_ERR_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_set_implementation
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        st_ERR_FNS
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_get_implementation
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        st_ERR_FNS
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_crypto_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_print_errors
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_print_errors_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_print_errors_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_sqr_recursive
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_SMALL_FOOTPRINT) || definedEx(BN_RECURSION))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_sqr_normal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_sqr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_rshift
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_lshift
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_rshift1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_lshift1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_is_prime_fasttest
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_is_prime
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_generate_prime
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_mul_low_normal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_mul_normal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mul
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_mul_high
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_SMALL_FOOTPRINT) || definedEx(BN_RECURSION))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_mul_low_recursive
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_SMALL_FOOTPRINT) || definedEx(BN_RECURSION))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_mul_part_recursive
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_SMALL_FOOTPRINT) || definedEx(BN_RECURSION))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_mul_recursive
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_SMALL_FOOTPRINT) || definedEx(BN_RECURSION))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_add_part_words
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_sub_part_words
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(OPENSSL_NO_ASM) || !definedEx(OPENSSL_BN_ASM_PART_WORDS))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_sub
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_usub
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_uadd
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_add
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_is_prime_fasttest_ex
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_is_prime_ex
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_generate_prime_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GENCB_call
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_create_param
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_set_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_get_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_thread_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_set_thread_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_get_thread_id
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_invert_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_invert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_convert_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_convert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_BLINDING_new
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bn_blinding_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_nist_mod_521
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_nist_mod_384
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_nist_mod_256
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_nist_mod_224
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_nist_mod_192
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_get0_nist_prime_521
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_get0_nist_prime_384
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_get0_nist_prime_256
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_get0_nist_prime_224
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_get0_nist_prime_192
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_arr2poly
            </name>
            <type>
                <function>
        <param>
            <const>
            <array length="-1">
        <signed>
        <int/>
    </signed>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_poly2arr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <signed>
        <int/>
    </signed>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_solve_quad
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_solve_quad_arr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <signed>
        <int/>
    </signed>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_sqrt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_sqrt_arr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <signed>
        <int/>
    </signed>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_exp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_exp_arr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <signed>
        <int/>
    </signed>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_div_arr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <signed>
        <int/>
    </signed>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_div
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_EC2M) &amp;&amp; definedEx(OPENSSL_SUN_GF2M_DIV))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_div
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_EC2M) &amp;&amp; !definedEx(OPENSSL_SUN_GF2M_DIV))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_inv_arr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <signed>
        <int/>
    </signed>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_inv
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_sqr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_sqr_arr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <signed>
        <int/>
    </signed>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_mul
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_mul_arr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <signed>
        <int/>
    </signed>
    </array>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_mod_arr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <array length="-1">
        <signed>
        <int/>
    </signed>
    </array>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_GF2m_add
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_EC2M)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_div
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mul_word
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_sub_word
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_add_word
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_div_word
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_word
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_pseudo_rand_range
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_rand_range
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_bntest_rand
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_pseudo_rand
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_rand
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_options
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_asc2bn
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_dec2bn
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_hex2bn
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_bn2dec
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_bn2hex
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_BN_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_sqrt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_MONT_CTX_set_locked
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_MONT_CTX_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_MONT_CTX_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_MONT_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_MONT_CTX_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_MONT_CTX_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_from_montgomery
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_mul_montgomery
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_X931_generate_prime_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_X931_generate_Xpq
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_X931_derive_prime_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_exp_simple
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_exp_mont_word
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_exp_mont_consttime
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_exp_mont
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_exp_recp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_exp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_exp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_rfc3526_prime_8192
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_rfc3526_prime_6144
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_rfc3526_prime_4096
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_rfc3526_prime_3072
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_rfc3526_prime_2048
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_rfc3526_prime_1536
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_rfc2409_prime_1024
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                get_rfc2409_prime_768
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_CTX_get
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_CTX_end
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_CTX_start
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_CTX_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_CTX_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_sqr_comba4
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_sqr_comba8
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_mul_comba4
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_mul_comba8
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_sub_words
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(SIMICS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_sub_words
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(SIMICS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_add_words
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_div_words
            </name>
            <type>
                <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_sqr_words
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_mul_words
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_mul_add_words
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_lshift_quick
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_lshift
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_lshift1_quick
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_lshift1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_sqr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_mul
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_sub_quick
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_sub
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_add_quick
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_add
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_nnmod
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mpi2bn
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_bn2mpi
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_kronecker
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_reciprocal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_div_recp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_recp_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_mul_reciprocal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_recp_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_RECP_CTX_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_recp_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_RECP_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_recp_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_RECP_CTX_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bn_recp_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_RECP_CTX_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_recp_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_cmp_part_words
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_cmp_words
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_set_negative
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mask_bits
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_is_bit_set
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_clear_bit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_set_bit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_ucmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_bn2bin
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_bin2bn
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_set_word
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_get_word
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_clear
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_swap
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_dup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_expand2
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                bn_dup_expand
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_clear_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_num_bits
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_num_bits_word
            </name>
            <type>
                <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_value_one
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_get_params
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_set_params
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_inverse
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_gcd
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_mod_exp2_mont
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_mont_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_enc_read
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_ede3_ofb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_fcrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_crypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_ofb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_cfb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_string_to_2keys
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_string_to_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_key_sched
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_set_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_is_weak_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_set_odd_parity
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_read_2passwords
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_read_password
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_random_key
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_random_seed
            </name>
            <type>
                <function>
        <param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_quad_cksum
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <unsigned>
        <int/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_pcbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_ofb_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_crypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_crypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_fcrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_enc_write
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_enc_read
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_ede3_ofb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_ede3_cfb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_ede3_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_decrypt3
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_encrypt3
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_encrypt2
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_cfb_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_xcbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_ncbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_cbc_cksum
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <unsigned>
        <int/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_ecb3_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <array length="-1">
        <struct isUnion="false">
        _ossl_old_des_ks_struct
    </struct>
    </array>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_options
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_cbc_cksum
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <unsigned>
        <int/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_ecb3_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_ede3_cfb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_ede3_cfb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_ede3_cbcm_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_DES) &amp;&amp; !definedEx(OPENSSL_NO_DESCBCM))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_ofb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_quad_cksum
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </array>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <unsigned>
        <int/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_xcbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_random_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_ede3_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_DES) &amp;&amp; !definedEx(DES_DEFAULT_OPTIONS))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_ncbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_DES) &amp;&amp; !definedEx(DES_DEFAULT_OPTIONS))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_decrypt3
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_encrypt3
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_encrypt2
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_encrypt1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_096_des_random_seed
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_read_2passwords
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_read_password
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_options
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_pcbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_ofb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_string_to_2keys
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_string_to_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_enc_write
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_cfb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                fcrypt_body
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_key_sched
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_set_key_unchecked
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_set_key_checked
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_set_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_is_weak_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_check_key_parity
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_set_odd_parity
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _des_crypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        desparams
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DES_cfb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DES_ks
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_gmtime_adj
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        tm
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_gmtime
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        tm
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        tm
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_create_verifier_BN
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_create_verifier
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_VBASE_get_by_user
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SRP_VBASE_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        SRP_user_pwd_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_VBASE_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SRP_VBASE_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_VBASE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        SRP_VBASE_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_VBASE_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        SRP_VBASE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_get_default_gN
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        SRP_gN_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_check_known_gN_param
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_Verify_A_mod_N
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_Verify_B_mod_N
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_Calc_client_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_Calc_A
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_Calc_x
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_Calc_B
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_Calc_server_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SRP_Calc_u
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SRP)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SERVICELOC_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_service_locator_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SERVICELOC_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_service_locator_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_SERVICELOC
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_service_locator_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_SERVICELOC
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_service_locator_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_service_locator_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_CRLID_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_crl_id_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_CRLID_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_crl_id_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_CRLID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_crl_id_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_CRLID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_crl_id_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_crl_id_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_BASICRESP
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_BASICRESP
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_RESPDATA_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_response_data_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_RESPDATA_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_response_data_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_RESPDATA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_response_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_RESPDATA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_response_data_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_response_data_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_SINGLERESP
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_SINGLERESP
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_CERTSTATUS_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_status_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_CERTSTATUS_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_status_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_CERTSTATUS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_status_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_CERTSTATUS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_cert_status_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_status_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REVOKEDINFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_revoked_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REVOKEDINFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_revoked_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_REVOKEDINFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_revoked_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_REVOKEDINFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_revoked_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_revoked_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_RESPID_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_responder_id_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_RESPID_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_responder_id_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_RESPID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_responder_id_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_RESPID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_responder_id_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_responder_id_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_RESPONSE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_RESPONSE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_RESPONSE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_RESPONSE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_RESPBYTES_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_resp_bytes_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_RESPBYTES_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_resp_bytes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_RESPBYTES
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_resp_bytes_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_RESPBYTES
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_resp_bytes_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_resp_bytes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_REQUEST
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_REQUEST
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQINFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_req_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQINFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_req_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_REQINFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_req_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_REQINFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_req_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_req_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_ONEREQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_ONEREQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_CERTID_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_CERTID_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_CERTID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_CERTID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SIGNATURE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_signature_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SIGNATURE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_signature_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_OCSP_SIGNATURE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_signature_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_OCSP_SIGNATURE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_signature_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_signature_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_check_validity
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_resp_find_status
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_single_get0_status
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_resp_find
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_resp_get0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_resp_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_response_get1_basic
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_response_status
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_request_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_request_add1_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_request_set1_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_request_add0_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_request_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_basic_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_OCSP_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_RESPONSE_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_crl_reason_str
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_cert_status_str
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_response_status_str
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_sendreq_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_sendreq_nbio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_req_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_sendreq_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_req_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQ_CTX_add1_header
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_req_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQ_CTX_set1_req
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_req_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQ_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_req_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_url_svcloc_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_archive_cutoff_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_accept_responses_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_crlID_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_copy_nonce
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_check_nonce
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_basic_add1_nonce
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_request_add1_nonce
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_add_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_add1_ext_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_get1_ext_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_delete_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_get_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_get_ext_by_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_get_ext_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_get_ext_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_SINGLERESP_get_ext_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_add_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_add1_ext_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_get1_ext_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_delete_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_get_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_get_ext_by_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_get_ext_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_get_ext_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_BASICRESP_get_ext_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_add_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_add1_ext_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_get1_ext_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_delete_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_get_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_get_ext_by_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_get_ext_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_get_ext_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_ONEREQ_get_ext_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_add_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_add1_ext_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_get1_ext_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_delete_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_get_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_get_ext_by_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_get_ext_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_get_ext_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_REQUEST_get_ext_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_basic_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_basic_add1_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_basic_add1_status
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_single_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_response_create
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_basic_response_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_response_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_request_is_signed
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_id_get0_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_onereq_get0_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_request_onereq_get0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_one_request_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_request_onereq_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_request_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_CERTID_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_parse_url
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_id_cmp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_id_issuer_cmp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_cert_id_new
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OCSP_cert_to_id
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ocsp_cert_id_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ALGOR_set_md
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ALGOR_get0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ALGOR_set0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ALGOR_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_ALGORS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ALGOR
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_ALGORS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_ALGOR
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ALGOR
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ALGOR_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ALGOR_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_ALGOR
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_ALGOR
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_SET
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_BLOCK
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_BLOCK
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_ASN1_OLD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_SET
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_BLOCK
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_ASN1_OLD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_add_oid_module
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS5_pbe_set
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS5_pbe_set0_algor
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PBEPARAM_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PBEPARAM_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PBEPARAM_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PBEPARAM_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PBEPARAM
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PBEPARAM_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PBEPARAM
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        PBEPARAM_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PBEPARAM_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_to_UTF8
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_print_ex_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_print_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_print_ex_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_print_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_ENUMERATED_to_BN
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_to_ASN1_ENUMERATED
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_ENUMERATED_get
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_ENUMERATED_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_OBJECT_create
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_OBJECT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_OBJECT_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                c2i_ASN1_OBJECT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_OBJECT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2a_ASN1_OBJECT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2t_ASN1_OBJECT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                a2d_ASN1_OBJECT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_OBJECT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PublicKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PKEY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        private_key_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PKEY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        private_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_PKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        private_key_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        private_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_PKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        private_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_template_print_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_TEMPLATE_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_set_str_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_get_str_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_set_oid_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_get_oid_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_set_cert_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_get_cert_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_set_nm_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_get_nm_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_set_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_get_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PCTX_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_digest
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_digest
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_ASN1_OLD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_generate_v3
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        v3_ext_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_generate_nconf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_get_meth_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_set_meth_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_METHOD_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_crl_method_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_METHOD_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_crl_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_set_default_method
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_crl_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_get0_by_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_get0_by_serial
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_add0_revoked
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_CRL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_CRL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_INFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_INFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_CRL_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_CRL_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_crl_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_REVOKED
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_REVOKED
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UTCTIME_cmp_time_t
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UTCTIME_adj
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UTCTIME_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UTCTIME_set_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UTCTIME_check
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_ex_c2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_ex_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <nosign>
        <char/>
    </nosign>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ASN1_TLC_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_template_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_TEMPLATE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_tag2bit
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_NAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_NAME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_ENTRY_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_ENTRY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_ENTRY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_NAME_ENTRY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_NAME_ENTRY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS5_pbkdf2_set
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS5_pbe2_set
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS5_pbe2_set_iv
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PBKDF2PARAM_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PBKDF2PARAM_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PBKDF2PARAM_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PBKDF2PARAM_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PBKDF2PARAM
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PBKDF2PARAM_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PBKDF2PARAM
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        PBKDF2PARAM_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PBKDF2PARAM_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PBE2PARAM_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PBE2PARAM_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PBE2PARAM_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PBE2PARAM_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PBE2PARAM
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        PBE2PARAM_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PBE2PARAM
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        PBE2PARAM_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        PBE2PARAM_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_EXTENSIONS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_EXTENSIONS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_EXTENSION
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_EXTENSION
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_sign_ctx
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_sign
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_ASN1_OLD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_i2d_bio
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_i2d_fp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_i2d_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_OLD_ASN1)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_i2d_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_OLD_ASN1)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_GENERALIZEDTIME_adj
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_GENERALIZEDTIME_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_GENERALIZEDTIME_set_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_GENERALIZEDTIME_check
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_CERT_SEQUENCE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_CERT_SEQUENCE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_NETSCAPE_CERT_SEQUENCE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_NETSCAPE_CERT_SEQUENCE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        Netscape_certificate_sequence
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_verify
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_ASN1_OLD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_asn1_get_suffix
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_asn1_set_suffix
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_asn1_get_prefix
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_asn1_set_prefix
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_f_asn1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_SIG_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_SIG_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_SIG
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_SIG
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS8_pkey_get0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS8_pkey_set0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS8_PRIV_KEY_INFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS8_PRIV_KEY_INFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8_PRIV_KEY_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS8_PRIV_KEY_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_INTEGER_to_BN
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BN_to_ASN1_INTEGER
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_INTEGER_get
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_INTEGER_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_UINTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                c2i_ASN1_INTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2c_ASN1_INTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_INTEGER_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_INTEGER_dup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_primitive_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_template_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_TEMPLATE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_ex_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_new
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_ex_i2c
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_template_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_TEMPLATE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_ex_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_ndef_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_bytes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_bytes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_type_bytes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_bn_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_REQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_REQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_INFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_INFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_req_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_REQ_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_REQ_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_req_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_req_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CERT_PAIR_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CERT_PAIR_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_CERT_PAIR
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_CERT_PAIR
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_cert_pair_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_reject_clear
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_trust_clear
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_add1_reject_object
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_add1_trust_object
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_keyid_get0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_alias_get0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_keyid_set1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_alias_set1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CERT_AUX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_cert_aux_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CERT_AUX_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_cert_aux_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_CERT_AUX
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_cert_aux_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_CERT_AUX
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_cert_aux_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_cert_aux_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_set_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_set_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_set_param
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_set_private
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_set_public
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_new
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get0_asn1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_get0_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_add_alias
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_add0
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_find_str
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_find
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_get0
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_asn1_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_asn1_get_count
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_BOOLEAN
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_BOOLEAN
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                main
            </name>
            <type>
                <function>
        <ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(STRING_TABLE_TEST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_TABLE_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_TABLE_add
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_TABLE_get
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_table_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_set_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_set_default_mask_asc
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_get_default_mask
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_set_default_mask
            </name>
            <type>
                <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                a2i_ASN1_ENUMERATED
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2a_ASN1_ENUMERATED
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TIME_set_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TIME_to_generalizedtime
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TIME_check
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TIME_adj
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TIME_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TIME_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TIME_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_TIME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_TIME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_mbstring_ncopy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_mbstring_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UTF8_putc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UTF8_getc
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_length_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_length
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_add_error
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_type_new
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_set0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_dup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_GetSequence
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_const_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_const_Finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_const_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_Finish
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_object_size
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_put_eoc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_put_object
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_get_object
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_const_check_infinite_end
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_check_infinite_end
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_create
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_ATTRIBUTE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_ATTRIBUTE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TYPE_get_int_octetstring
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TYPE_set_int_octetstring
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TYPE_get_octetstring
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TYPE_set_octetstring
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CERT_AUX_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_cert_aux_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_print_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TYPE_cmp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TYPE_set1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TYPE_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TYPE_get
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BIT_STRING_check
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BIT_STRING_get_bit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BIT_STRING_set_bit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                c2i_ASN1_BIT_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2c_ASN1_BIT_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BIT_STRING_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_OCTET_STRING_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_OCTET_STRING_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_OCTET_STRING_dup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_INFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_INFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSA_NET
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_Netscape_RSA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSA_NET
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_Netscape_RSA
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_PKEY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        netscape_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_PKEY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        netscape_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_NETSCAPE_PKEY
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        netscape_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_NETSCAPE_PKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        netscape_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        netscape_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_ENCRYPTED_PKEY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        netscape_encrypted_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_ENCRYPTED_PKEY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        netscape_encrypted_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_NETSCAPE_ENCRYPTED_PKEY
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        netscape_encrypted_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_NETSCAPE_ENCRYPTED_PKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        netscape_encrypted_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        netscape_encrypted_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UNIVERSALSTRING_to_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PRINTABLE_type
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                a2i_ASN1_INTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2a_ASN1_INTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_AutoPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PrivateKey
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_dup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_OLD_ASN1)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_tag2str
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_parse_dump
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_parse
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_X509_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        NETSCAPE_X509_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_X509_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        NETSCAPE_X509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_NETSCAPE_X509
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        NETSCAPE_X509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_NETSCAPE_X509
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        NETSCAPE_X509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        NETSCAPE_X509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PUBKEY_get0_param
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PUBKEY_set0_param
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_EC_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_EC_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSA_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PUBKEY_get
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PUBKEY_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PUBKEY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_PUBKEY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_PUBKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_pubkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UTCTIME_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_GENERALIZEDTIME_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TIME_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_STRING_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_signature_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_signature_dump
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ocspid_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_print_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_print_ex_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BIT_STRING_num_asc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        BIT_STRING_BITNAME_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BIT_STRING_set_asc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        BIT_STRING_BITNAME_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BIT_STRING_name_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        BIT_STRING_BITNAME_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKI_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKI_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_NETSCAPE_SPKI
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_NETSCAPE_SPKI
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKAC_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_spkac_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKAC_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        Netscape_spkac_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_NETSCAPE_SPKAC
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_spkac_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_NETSCAPE_SPKAC
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        Netscape_spkac_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        Netscape_spkac_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_unpack
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_pack
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_pack_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_ASN1_OLD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_unpack_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_ASN1_OLD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_seq_pack
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_BLOCK
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_ASN1_OLD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_seq_unpack
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_OPENSSL_BLOCK
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_ASN1_OLD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VAL_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_val_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VAL_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_val_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_VAL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_val_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_VAL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_val_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_val_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_SET_ANY
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_ASN1_TYPE
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_SET_ANY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_ASN1_TYPE
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_ASN1_TYPE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_SEQUENCE_ANY
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_ASN1_TYPE
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_SEQUENCE_ANY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_ASN1_TYPE
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_ASN1_TYPE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DIRECTORYSTRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DIRECTORYSTRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DIRECTORYSTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DIRECTORYSTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DISPLAYTEXT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DISPLAYTEXT_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DISPLAYTEXT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DISPLAYTEXT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PRINTABLE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PRINTABLE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_PRINTABLE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_PRINTABLE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TYPE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_TYPE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_TYPE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_TYPE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BMPSTRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BMPSTRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_BMPSTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_BMPSTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UNIVERSALSTRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UNIVERSALSTRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_UNIVERSALSTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_UNIVERSALSTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_VISIBLESTRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_VISIBLESTRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_VISIBLESTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_VISIBLESTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_GENERALIZEDTIME_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_GENERALIZEDTIME_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_GENERALIZEDTIME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_GENERALIZEDTIME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UTCTIME_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UTCTIME_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_UTCTIME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_UTCTIME
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_GENERALSTRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_GENERALSTRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_GENERALSTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_GENERALSTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_IA5STRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_IA5STRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_IA5STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_IA5STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_T61STRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_T61STRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_T61STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_T61STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PRINTABLESTRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_PRINTABLESTRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_PRINTABLESTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_PRINTABLESTRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UTF8STRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_UTF8STRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_UTF8STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_UTF8STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_NULL_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_NULL_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_NULL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_NULL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_OCTET_STRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_OCTET_STRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_OCTET_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_OCTET_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BIT_STRING_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_BIT_STRING_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_BIT_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_BIT_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_ENUMERATED_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_ENUMERATED_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_ENUMERATED
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_ENUMERATED
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_INTEGER_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_INTEGER_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_INTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ASN1_INTEGER
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                a2i_ASN1_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2a_ASN1_STRING
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_d2i_fp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_d2i_bio
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_d2i_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_OLD_ASN1)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_d2i_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <void/>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_OLD_ASN1)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_ASN1_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_NDEF
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_do_adb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_TEMPLATE_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_TEMPLATE_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_get_field_ptr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_TEMPLATE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_enc_restore
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_enc_save
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_enc_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_enc_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_do_lock
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_set_choice_selector
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                asn1_get_choice_selector
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKI_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PublicKey
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_AUX
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_AUX
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_set_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_ex_new_index
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CINF_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_cinf_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CINF_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_cinf_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_CINF
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_cinf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_CINF
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_cinf_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_cinf_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_primitive_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_template_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_TEMPLATE_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_ex_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ASN1_item_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SMIME_text
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SMIME_crlf_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SMIME_read_ASN1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SMIME_write_ASN1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ALGOR
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_ASN1_stream
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ASN1_bio_stream
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ASN1_VALUE_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ASN1_ITEM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MDC2_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        mdc2_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MDC2_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        mdc2_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MDC2_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        mdc2_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MDC2
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_poll
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(OPENSSL_NO_DES) &amp;&amp; ((definedEx(USE_MD5_RAND) &amp;&amp; !definedEx(OPENSSL_SYS_VOS)) || (!definedEx(USE_MD5_RAND) &amp;&amp; ((definedEx(USE_SHA1_RAND) &amp;&amp; !definedEx(OPENSSL_SYS_VOS)) || (!definedEx(OPENSSL_SYS_VOS) &amp;&amp; !definedEx(USE_SHA1_RAND) &amp;&amp; !definedEx(USE_MDC2_RAND)))))) || (!definedEx(OPENSSL_NO_DES) &amp;&amp; !definedEx(OPENSSL_SYS_VOS)))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_poll
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(OPENSSL_NO_DES) &amp;&amp; ((definedEx(USE_MD5_RAND) &amp;&amp; (definedEx(OPENSSL_SYS_VOS_HPPA) || definedEx(OPENSSL_SYS_VOS_IA32)) &amp;&amp; definedEx(OPENSSL_SYS_VOS)) || (!definedEx(USE_MD5_RAND) &amp;&amp; ((definedEx(USE_SHA1_RAND) &amp;&amp; (definedEx(OPENSSL_SYS_VOS_HPPA) || definedEx(OPENSSL_SYS_VOS_IA32)) &amp;&amp; definedEx(OPENSSL_SYS_VOS)) || (!definedEx(USE_MDC2_RAND) &amp;&amp; !definedEx(USE_SHA1_RAND) &amp;&amp; (definedEx(OPENSSL_SYS_VOS_HPPA) || definedEx(OPENSSL_SYS_VOS_IA32)) &amp;&amp; definedEx(OPENSSL_SYS_VOS)))))) || (!definedEx(OPENSSL_NO_DES) &amp;&amp; (definedEx(OPENSSL_SYS_VOS_HPPA) || definedEx(OPENSSL_SYS_VOS_IA32)) &amp;&amp; definedEx(OPENSSL_SYS_VOS)))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_status
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_pseudo_bytes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_bytes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_add
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <double/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_seed
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_get_rand_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        rand_meth_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_set_rand_method
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        rand_meth_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_egd
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_SYS_VOS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_egd_bytes
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_SYS_VOS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_query_egd_bytes
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_SYS_VOS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_egd_bytes
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(OPENSSL_SYS_VOS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_egd
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(OPENSSL_SYS_VOS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_query_egd_bytes
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(OPENSSL_SYS_VOS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_file_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_write_file
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_load_file
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RAND_SSLeay
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rand_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(USE_MD5_RAND) || !definedEx(OPENSSL_NO_DES) || !definedEx(USE_MDC2_RAND) || definedEx(USE_SHA1_RAND))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_RAND_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_cfb8_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_cfb1_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_cfb128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_bi_ige_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_ige_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                main
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(AES_WRAP_TEST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_wrap_unwrap_test
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                definedEx(AES_WRAP_TEST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_unwrap_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_wrap_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_set_decrypt_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_set_encrypt_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_options
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_ofb128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                AES_ctr128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        aes_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_is_sorted
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_sort
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_value
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_num
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_pop_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_zero
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_pop
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_shift
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_unshift
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_push
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_find_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_find
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_delete
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_delete_ptr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_insert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_new_null
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                sk_set_cmp_func
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_size
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_get_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_set_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_get_ex_new_index
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_up_ref
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_new_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_set_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_method
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_get_default_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_method
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_set_default_method
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_method
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DHparams_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_check_pub_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_check
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_OpenSSL
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_method
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_compute_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_generate_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_generate_parameters_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DHparams_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_DH_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DH_generate_parameters
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DHparams_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DHparams
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DHparams
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_mem_debug_options
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_mem_debug_options
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_remalloc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_realloc_clean
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_realloc
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_strdup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_malloc
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_free_locked
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_malloc_locked
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_mem_debug_functions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_locked_mem_ex_functions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_locked_mem_functions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_mem_ex_functions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_mem_functions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_mem_debug_functions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_locked_mem_ex_functions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_locked_mem_functions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_mem_ex_functions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_mem_functions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDH_compute_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ec_point_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_ECDH_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDH_get_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDH_set_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDH_get_ex_new_index
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ecdh_check
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ecdh_data_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ecdh_data_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDH_set_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ecdh_method
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDH_get_default_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ecdh_method
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDH_set_default_method
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ecdh_method
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ECDH_OpenSSL
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ecdh_method
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_issetugid
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_OBJ_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_NAME_cleanup
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_NAME_do_all_sorted
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        obj_name_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_NAME_do_all
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        obj_name_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_NAME_remove
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_NAME_add
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_NAME_get
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_NAME_new_index
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_NAME_init
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_create
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_create_objects
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_bsearch_ex_
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_bsearch_
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_sn2nid
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_ln2nid
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_txt2nid
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_obj2txt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_txt2obj
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_obj2nid
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_nid2ln
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_nid2sn
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_nid2obj
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_add_object
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_new_nid
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                check_defer
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_dup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_sigid_free
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_add_sigid
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_find_sigid_by_algs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OBJ_find_sigid_algs
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_METHOD_beos
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_METHOD_dl
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_METHOD_openssl
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_METHOD_dlfcn
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_METHOD_vms
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_METHOD_null
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_DSO_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_global_lookup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_pathbyaddr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_get_loaded_filename
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_convert_filename
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_merge
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_set_filename
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_get_filename
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_set_name_converter
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_bind_func
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_bind_var
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_load
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_up_ref
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_new_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_set_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_get_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_get_default_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_set_default_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSO_METHOD_win32
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dso_meth_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CAST_set_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        cast_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CAST_ofb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        cast_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CAST_cfb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        cast_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CAST_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        cast_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CAST_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        cast_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CAST_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        cast_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CAST_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        cast_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_stream
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_set_cipher
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_cert_from_signer_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_RECIP_INFO_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_recip_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add_recipient_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_recip_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add_recipient
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_recip_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_RECIP_INFO_get0_alg
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_recip_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_SIGNER_INFO_get0_algs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_get_signer_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_PKCS7_SIGNER_INFO
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_set_digest
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add_signature
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_SIGNER_INFO_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add_crl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add_certificate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add_signer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_set0_type_other
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_set_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_set_content
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_content_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_PKCS7
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_PKCS7_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_get0_signers
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_sign_add_signer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add1_attrib_digest
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add0_attrib_signing_time
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add_attrib_content_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_simple_smimecap
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ALGOR
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_get_smimecap
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ALGOR
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add_attrib_smimecap
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ALGOR
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_print_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_DIGEST_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_digest_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_DIGEST_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_digest_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_DIGEST
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_digest_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_DIGEST
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_digest_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_digest_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_ENCRYPT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_encrypted_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_ENCRYPT_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_encrypted_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_ENCRYPT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_encrypted_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_ENCRYPT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_encrypted_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_encrypted_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_SIGN_ENVELOPE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signedandenveloped_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_SIGN_ENVELOPE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_signedandenveloped_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_SIGN_ENVELOPE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signedandenveloped_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_SIGN_ENVELOPE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_signedandenveloped_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_signedandenveloped_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_ENC_CONTENT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_enc_content_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_ENC_CONTENT_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_enc_content_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_ENC_CONTENT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_enc_content_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_ENC_CONTENT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_enc_content_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_enc_content_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_RECIP_INFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_recip_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_RECIP_INFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_recip_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_RECIP_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_recip_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_RECIP_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_recip_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_recip_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_ENVELOPE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_enveloped_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_ENVELOPE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_enveloped_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_ENVELOPE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_enveloped_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_ENVELOPE
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_enveloped_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_enveloped_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_ISSUER_AND_SERIAL_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_issuer_and_serial_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_ISSUER_AND_SERIAL_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_issuer_and_serial_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_ISSUER_AND_SERIAL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_issuer_and_serial_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_ISSUER_AND_SERIAL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_issuer_and_serial_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_issuer_and_serial_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_SIGNER_INFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_SIGNER_INFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_SIGNER_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_SIGNER_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_SIGNED_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signed_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_SIGNED_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_signed_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_SIGNED
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signed_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_SIGNED
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_signed_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_signed_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_NDEF
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SMIME_read_PKCS7
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SMIME_write_PKCS7
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_PKCS7_stream
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_bio_stream
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add_attribute
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_add_signed_attribute
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_set_attributes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_set_signed_attributes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_digest_from_attributes
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_get_attribute
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_get_signed_attribute
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_get_issuer_and_serial
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_issuer_and_serial_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_signatureVerify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_dataVerify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_SIGNER_INFO_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_signer_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_dataFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_dataDecode
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_dataInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_num_items
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_strhash
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_doall_arg
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_doall
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_retrieve
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_delete
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_insert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_node_usage_stats_bio
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_node_stats_bio
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_stats_bio
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_node_usage_stats
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_node_stats
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                lh_stats
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        lhash_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                md4_block_data_order
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        MD4state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_MD4) &amp;&amp; !definedEx(md4_block_data_order))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MD4_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        MD4state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_MD4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MD4_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        MD4state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_MD4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MD4_Transform
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        MD4state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_MD4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MD4_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        MD4state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_MD4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MD4
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_MD4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS5_PBE_keyivgen
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS5_PBE_add
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc4_hmac_md5
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_seed_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_seed_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_seed_cfb128
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_seed_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SEED)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_rand_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_set_padding
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_set_key_length
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_cleanup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DecryptFinal_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DecryptFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DecryptUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_EncryptFinal_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_EncryptFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_EncryptUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DecryptInit_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DecryptInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_EncryptInit_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_EncryptInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CipherFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CipherFinal_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CipherUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CipherInit_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CipherInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_SealFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_SealInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc2_40_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc2_64_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc2_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc2_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc2_cfb64
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc2_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_add1_attr_by_txt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_add1_attr_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_add1_attr_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_add1_attr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_delete_attr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get_attr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get_attr_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get_attr_by_NID
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get_attr_count
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS8_set_broken
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY2PKCS8_broken
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY2PKCS8
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKCS82PKEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_test_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_clear_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_set_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_CTX_test_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_CTX_clear_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_CTX_set_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_CTX_md
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_size
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_pkey_type
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_type
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_block_size
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_nid
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_nid
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_key_length
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_key_length
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_iv_length
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_iv_length
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_set_app_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_get_app_data
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_cipher
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_Cipher
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_CTX_block_size
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_block_size
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_type
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_set_asn1_iv
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_get_asn1_iv
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_asn1_to_param
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_param_to_asn1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_VerifyFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_derive
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_derive_set_peer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_derive_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_decrypt_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_encrypt_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_verify_recover
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_verify_recover_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_verify_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_sign_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_do_all_sorted
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_do_all
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_do_all_sorted
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_CIPHER_do_all
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_get_digestbyname
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_get_cipherbyname
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_add_digest
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_add_cipher
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_cbc_hmac_sha1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_cbc_hmac_sha1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc5_32_12_16_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC5)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc5_32_12_16_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC5)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc5_32_12_16_cfb64
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC5)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc5_32_12_16_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC5)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_EVP_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DigestVerifyFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DigestSignFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DigestVerifyInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DigestSignInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get_default_digest_nid
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_print_params
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_print_private
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_print_public
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_base_id
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_id
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_type
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get1_DH
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_set1_DH
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get1_EC_KEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_set1_EC_KEY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get1_DSA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_set1_DSA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get1_RSA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_set1_RSA
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_get0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_assign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_set_type_str
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_set_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_cmp_parameters
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_missing_parameters
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_copy_parameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_save_parameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_size
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_bits
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_f_reliable
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_md5
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_idea_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_idea_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_idea_cfb64
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_idea_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_desx_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_192_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc5_32_12_16_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC5)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_cast5_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc2_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_idea_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_IDEA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede3_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_bf_cfb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_BF)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_set_cipher
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_f_cipher
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PBE_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PBE_find
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PBE_alg_add
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PBE_alg_add_type
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PBE_CipherInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_encrypt_old
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_f_md
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_cfb8
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_cfb1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_cfb64
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_new_mac_key
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_get_keygen_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                evp_pkey_set_cb_translate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_get_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_set_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_keygen
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_keygen_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_paramgen
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_paramgen_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_derive
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_verifyctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_signctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_verify_recover
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_keygen
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_paramgen
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_cleanup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_set_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_get_app_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_set_app_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_get0_peerkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_get0_pkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_get_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_set_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_set0_keygen_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_get_operation
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_ctrl_str
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_add0
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_new_id
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_CTX_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_get0_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_new
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_meth_find
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_pkey_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_add_all_algorithms_conf
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_PKEY_decrypt_old
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_mdc2
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_dss1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_BytesToKey
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_read_pw_string_min
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_read_pw_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_get_pw_prompt
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_set_pw_prompt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OpenSSL_add_all_ciphers
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_ecdsa
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_sha
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA0)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_f_base64
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_md_null
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_OpenFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_OpenInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_cipher_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_dss
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_enc_null
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_ripemd160
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RIPEMD)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_256_cfb8
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_192_cfb8
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_128_cfb8
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_256_cfb1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_192_cfb1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_128_cfb1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_256_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_256_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_256_cfb128
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_256_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_192_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_192_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_192_cfb128
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_192_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_128_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_128_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_128_cfb128
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_camellia_128_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_cast5_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_cast5_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_cast5_cfb64
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_cast5_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAST)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc4_40
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_rc4
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_md4
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_MD4)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_add_all_algorithms_noconf
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede3
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede3_cfb8
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede3_cfb1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede3_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede3_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede3_cfb64
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede3_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede_cfb64
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_des_ede_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DES)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_sha512
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_sha384
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SHA512)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_sha256
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_sha224
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_sha1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_whirlpool
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_CTX_cleanup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_CTX_destroy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_Digest
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_CTX_copy_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_CTX_copy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DigestFinal_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DigestFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DigestUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DigestInit_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DigestInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_CTX_create
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_MD_CTX_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DecodeFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_Encode_Ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DecodeBlock
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DecodeUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_Encode_Ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_DecodeInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_Encode_Ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_EncodeBlock
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_EncodeFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_Encode_Ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_EncodeUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_Encode_Ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_EncodeInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_Encode_Ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_ccm
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_192_ccm
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_ccm
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_xts
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_xts
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_gcm
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_192_gcm
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_gcm
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_ctr
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_cfb8
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_cfb1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_cfb128
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_256_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_192_ctr
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_192_cfb8
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_192_cfb1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_192_cfb128
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_192_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_192_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_192_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_ctr
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_cfb8
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_cfb1
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_cfb128
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_aes_128_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_bf_ecb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_BF)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_bf_ofb
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_BF)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_bf_cfb64
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_BF)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_bf_cbc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_BF)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OpenSSL_add_all_digests
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                EVP_SignFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_verify_token
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_verify_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_verify_response
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_verify_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_verify_signature
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_print_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_MSG_IMPRINT_print_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_X509_ALGOR_print_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ext_print_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_OBJ_print_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ASN1_INTEGER_print_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_ext_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_add_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_delete_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_ext_by_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_ext_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_ext_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_ext_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_ext_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_exts
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_tsa
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_set_tsa
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        GENERAL_NAME_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_nonce
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_set_nonce
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_ordering
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_set_ordering
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ACCURACY_get_micros
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ACCURACY_set_micros
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ACCURACY_get_millis
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ACCURACY_set_millis
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ACCURACY_get_seconds
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ACCURACY_set_seconds
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_accuracy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_set_accuracy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_time
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_set_time
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_serial
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_set_serial
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_msg_imprint
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_set_msg_imprint
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_policy_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_set_policy_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_get_version
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_set_version
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_get_tst_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_get_token
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_set_tst_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_get_status_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_status_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_set_status_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_status_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_TS_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_ess_cert_id_chain
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_tsa_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_ordering
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_clock_precision_digits
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_accuracy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_digests
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_policies
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_def_policy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_signer_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_certs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_signer_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_set_serial
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_get_tsa_section
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_load_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_load_certs
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_CONF_load_cert
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_to_TS_VERIFY_CTX
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_verify_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_verify_ctx
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_VERIFY_CTX_cleanup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_verify_ctx
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_VERIFY_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_verify_ctx
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_VERIFY_CTX_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_verify_ctx
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_VERIFY_CTX_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_verify_ctx
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_print_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_STATUS_INFO_print_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_status_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_print_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_ext_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_add_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_delete_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_ext_by_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_ext_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_ext_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_ext_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_ext_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_exts
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_cert_req
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_set_cert_req
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_nonce
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_set_nonce
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_policy_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_set_policy_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_MSG_IMPRINT_get_msg
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_MSG_IMPRINT_set_msg
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_MSG_IMPRINT_get_algo
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_MSG_IMPRINT_set_algo
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_msg_imprint
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_set_msg_imprint
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_get_version
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_set_version
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_create_response
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_clock_precision_digits
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_get_tst_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_get_request
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_add_failure_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_status_info_cond
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_status_info
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_extension_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_time_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_serial_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_add_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_accuracy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_add_md
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_add_policy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_certs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_def_policy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_signer_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_set_signer_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_CTX_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_resp_ctx
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_to_TS_TST_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ESS_SIGNING_CERT_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ESS_signing_cert
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ESS_signing_cert
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ESS_SIGNING_CERT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ESS_signing_cert
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ESS_SIGNING_CERT_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ESS_signing_cert
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ESS_SIGNING_CERT
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ESS_signing_cert
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ESS_SIGNING_CERT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ESS_signing_cert
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ESS_signing_cert
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ESS_CERT_ID_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ESS_cert_id
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ESS_cert_id
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ESS_CERT_ID_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ESS_cert_id
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ESS_CERT_ID_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ESS_cert_id
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ESS_CERT_ID
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ESS_cert_id
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ESS_CERT_ID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ESS_cert_id
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ESS_cert_id
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ESS_ISSUER_SERIAL_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ESS_issuer_serial
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ESS_issuer_serial
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ESS_ISSUER_SERIAL_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ESS_issuer_serial
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ESS_ISSUER_SERIAL_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ESS_issuer_serial
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ESS_ISSUER_SERIAL
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ESS_issuer_serial
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ESS_ISSUER_SERIAL
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ESS_issuer_serial
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ESS_issuer_serial
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_RESP_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_RESP_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_RESP_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_RESP_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_RESP_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_RESP
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_RESP
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_resp_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_STATUS_INFO_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_status_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_status_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_STATUS_INFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_status_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_STATUS_INFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_status_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_STATUS_INFO
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_status_info_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_STATUS_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_status_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_status_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_TST_INFO_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_TST_INFO_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_TST_INFO_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_TST_INFO_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_TST_INFO_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_TST_INFO
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_TST_INFO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_tst_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ACCURACY_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ACCURACY_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_ACCURACY_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_ACCURACY
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_ACCURACY
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_accuracy_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_REQ_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_REQ_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_REQ_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_REQ_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_REQ_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_REQ
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_REQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_MSG_IMPRINT_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_MSG_IMPRINT_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_MSG_IMPRINT_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_MSG_IMPRINT_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_MSG_IMPRINT_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_MSG_IMPRINT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TS_MSG_IMPRINT_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_TS_MSG_IMPRINT
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_TS_MSG_IMPRINT
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        TS_msg_imprint_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TXT_DB_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        txt_db_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TXT_DB_insert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        txt_db_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TXT_DB_write
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        txt_db_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TXT_DB_create_index
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        txt_db_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TXT_DB_get_by_index
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        txt_db_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                TXT_DB_read
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        txt_db_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MD5
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MD5_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        MD5state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MD5_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        MD5state_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MD5_Transform
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        MD5state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                MD5_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        MD5state_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RC2_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rc2_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RC2_cfb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rc2_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RC2_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rc2_key_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RC2_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rc2_key_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RC2_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rc2_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RC2_set_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        rc2_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                RC2_ofb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rc2_key_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_RC2)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_nwrite
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_nwrite0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_nread
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_nread0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_ctrl_reset_read_request
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_ctrl_get_read_request
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_ctrl_get_write_guarantee
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_bio_pair
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_s_bio
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_f_null
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_vsnprintf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <builtinvalist/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_snprintf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <vargs/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_vprintf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <builtinvalist/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_printf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <vargs/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_mem_buf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_s_mem
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_dgram_non_fatal_error
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DGRAM)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_dgram
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DGRAM)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_s_datagram
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_DGRAM)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_f_nbio_test
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_accept
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_s_accept
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_number_written
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_number_read
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_get_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_set_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_get_ex_new_index
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_copy_next_retry
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_dup_chain
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_free_all
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_next
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_find_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_get_retry_reason
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_get_retry_BIO
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_pop
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_push
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_ctrl_wpending
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_ctrl_pending
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_callback_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_ptr_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_int_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_indent
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_gets
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_puts
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_write
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_read
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_method_type
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_method_name
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_get_callback_arg
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_set_callback_arg
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_set_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_get_callback
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_set_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_test_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_clear_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_vfree
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_f_buffer
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_s_log
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(NO_SYSLOG)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_sock_non_fatal_error
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_sock_should_retry
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_socket
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_s_socket
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_BIO_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_debug_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_socket_nbio
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_set_tcp_ndelay
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_accept
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_get_accept_socket
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_socket_ioctl
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_sock_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_sock_init
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_gethostbyname
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        hostent
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_sock_error
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_get_port
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <short/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_get_host_ip
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_s_null
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_connect
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_s_connect
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_CONNECT_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_connect_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_CONNECT_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_connect_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_SOCK)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_dump_indent
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_dump
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_dump_indent_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_dump_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_dump_indent_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_dump_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_fd_non_fatal_error
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_fd_should_retry
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_fd
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_s_fd
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_s_file
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(HEADER_BSS_FILE_C)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(HEADER_BSS_FILE_C)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_file
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(HEADER_BSS_FILE_C)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_do_verify
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        DSA_SIG_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_DSA_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_verify
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_sign
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSAparams_dup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DSAPublicKey
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DSAPublicKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DSAparams
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DSAparams
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DSAPrivateKey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DSA_SIG
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        DSA_SIG_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DSA_SIG
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        DSA_SIG_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        DSA_SIG_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_SIG_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        DSA_SIG_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_SIG_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        DSA_SIG_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_sign_setup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bignum_ctx
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bignum_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_do_sign
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        DSA_SIG_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_generate_parameters
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_generate_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_OpenSSL
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_method
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_dup_DH
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dh_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_get_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_set_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_get_ex_new_index
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_size
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_up_ref
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_new_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        engine_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_set_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_method
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_get_default_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_method
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_set_default_method
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_method
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSAparams_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSAparams_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_print_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                dsa_builtin_paramgen
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                DSA_generate_parameters_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bn_gencb_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_UTIL_read_pw
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_UTIL_read_pw_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_OpenSSL
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_read_pw
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _ossl_old_des_read_pw_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_set_result
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get_result_maxsize
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get_result_minsize
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get0_test_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get0_result_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get0_action_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get0_output_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get_input_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get_string_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <int/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_get_prompt_constructor
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_get_closer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_get_reader
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_get_flusher
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_get_writer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_get_opener
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_set_prompt_constructor
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_set_closer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_set_reader
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_set_flusher
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_set_writer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ui_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_method_set_opener
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_destroy_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_create_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_set_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get_default_method
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_set_default_method
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_set_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get_ex_new_index
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_process
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get0_result
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_get0_user_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_add_user_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_construct_prompt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_dup_error_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_add_error_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_dup_info_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_add_info_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_dup_input_boolean
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_add_input_boolean
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_dup_verify_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_add_verify_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_dup_input_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_add_input_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_new_method
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        ui_method_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                UI_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ui_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_UI_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_EncryptedData_init_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_EncryptedData_set1_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_EncryptedContent_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_EncryptedContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_EncryptedContent_init_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_EncryptedContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_CMS_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_compress
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_CMS) &amp;&amp; !definedEx(ZLIB))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_uncompress
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_CMS) &amp;&amp; !definedEx(ZLIB))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_compress
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_CMS) &amp;&amp; definedEx(ZLIB))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_uncompress
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_CMS) &amp;&amp; definedEx(ZLIB))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_decrypt_set1_password
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(OPENSSL_SYS_SUNOS) &amp;&amp; !definedEx(OPENSSL_NO_CMS)) || (!definedEx(OPENSSL_NO_CMS) &amp;&amp; !definedEx(OPENSSL_SYS_SUNOS) &amp;&amp; definedEx(__ultrix)))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_decrypt_set1_password
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_CMS) &amp;&amp; !definedEx(OPENSSL_SYS_SUNOS) &amp;&amp; !definedEx(__ultrix))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_decrypt_set1_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_decrypt_set1_pkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_sign_receipt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_verify_receipt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_EncryptedData_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_EncryptedData_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_digest_create
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_digest_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_data_create
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_RecipientInfo_pwri_crypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add0_recipient_password
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(OPENSSL_SYS_SUNOS) &amp;&amp; !definedEx(OPENSSL_NO_CMS)) || (!definedEx(OPENSSL_NO_CMS) &amp;&amp; !definedEx(OPENSSL_SYS_SUNOS) &amp;&amp; definedEx(__ultrix)))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add0_recipient_password
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_CMS) &amp;&amp; !definedEx(OPENSSL_SYS_SUNOS) &amp;&amp; !definedEx(__ultrix))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_set0_password
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                ((definedEx(OPENSSL_SYS_SUNOS) &amp;&amp; !definedEx(OPENSSL_NO_CMS)) || (!definedEx(OPENSSL_NO_CMS) &amp;&amp; !definedEx(OPENSSL_SYS_SUNOS) &amp;&amp; definedEx(__ultrix)))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_set0_password
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_CMS) &amp;&amp; !definedEx(OPENSSL_SYS_SUNOS) &amp;&amp; !definedEx(__ultrix))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_EnvelopedData_init_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_set0_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_kekri_get0_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add0_recipient_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_kekri_id_cmp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_set0_pkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_ktri_cert_cmp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_ktri_get0_signer_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_ktri_get0_algs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add1_recipient_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_EnvelopedData_create
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        evp_cipher_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_RecipientInfo_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_RecipientInfo_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_get0_RecipientInfos
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_CMS_RecipientInfo
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_get0_enveloped
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_EnvelopedData_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_unsigned_get0_data_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_unsigned_add1_attr_by_txt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_unsigned_add1_attr_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_unsigned_add1_attr_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_unsigned_add1_attr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_unsigned_delete_attr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_unsigned_get_attr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_unsigned_get_attr_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_unsigned_get_attr_by_NID
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_unsigned_get_attr_count
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_signed_get0_data_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_signed_add1_attr_by_txt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_signed_add1_attr_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_signed_add1_attr_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_signed_add1_attr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_signed_delete_attr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_signed_get_attr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_signed_get_attr_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_signed_get_attr_by_NID
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_signed_get_attr_count
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_CompressedData_init_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_CMS) &amp;&amp; definedEx(ZLIB))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_CompressedData_create
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_CMS) &amp;&amp; definedEx(ZLIB))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add_standard_smimecap
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_ALGOR
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add_simple_smimecap
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_ALGOR
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add_smimecap
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ALGOR
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_SignerInfo_verify_content
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_SignedData_init_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_SignerInfo_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_SignerInfo_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_SignedData_final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_SignerInfo_get0_algs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_set1_signers_certs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_SignerInfo_cert_cmp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_SignerInfo_get0_signer_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_SignerInfo_set1_signer_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_get0_signers
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_get0_SignerInfos
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_CMS_SignerInfo
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add1_signer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <int/>
    </unsigned>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_SignerIdentifier_cert_cmp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerIdentifier_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_SignerIdentifier_get0_signer_id
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerIdentifier_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_set1_SignerIdentifier
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerIdentifier_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_SignedData_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_DigestedData_do_final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_DigestedData_init_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_DigestedData_create
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_encode_Receipt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_Receipt_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_msgSigDigest_add1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_ReceiptRequest_get0_values
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ReceiptRequest_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAMES
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAMES
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add1_ReceiptRequest
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_ReceiptRequest_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_ReceiptRequest_create0
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAMES
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_GENERAL_NAMES
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ReceiptRequest_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_get1_ReceiptRequest
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_SignerInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        CMS_ReceiptRequest_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_ReceiptRequest_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ReceiptRequest_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_ReceiptRequest_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ReceiptRequest_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_CMS_ReceiptRequest
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ReceiptRequest_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_CMS_ReceiptRequest
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        CMS_ReceiptRequest_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ReceiptRequest_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SMIME_read_CMS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                SMIME_write_CMS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_CMS_stream
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_CMS_bio_stream
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BIO_new_CMS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_CMS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_write_bio_CMS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_CMS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PEM_read_bio_CMS
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_CMS_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_CMS_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_stream
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_get1_crls
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_CRL
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_get1_certs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add1_crl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add0_crl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add0_RevocationInfoChoice
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_RevocationInfoChoice_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add1_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add0_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_add0_CertificateChoices
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_CertificateChoices
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_DigestAlgorithm_find_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_DigestAlgorithm_init_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_DigestAlgorithm_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_algor_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_set_detached
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_is_detached
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_set1_eContentType
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_get0_eContentType
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_get0_content
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_dataFinal
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_dataInit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_content_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                cms_Data_create
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_get0_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_ContentInfo_print_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_pctx_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_ContentInfo_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CMS_ContentInfo_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_CMS_ContentInfo
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_CMS_ContentInfo
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CMS_ContentInfo_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CMS)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_default_cert_file_env
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_default_cert_dir_env
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_default_cert_file
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_default_cert_dir
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_default_cert_area
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_default_private_dir
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_get0_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_type_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_get0_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_get0_object
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_set1_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_set1_object
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_create_by_txt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_create_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_ATTRIBUTE_create_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509at_get0_data_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509at_add1_attr_by_txt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509at_add1_attr_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509at_add1_attr_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509at_add1_attr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509at_delete_attr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509at_get_attr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509at_get_attr_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509at_get_attr_by_NID
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509at_get_attr_count
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_ATTRIBUTE
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_set_serialNumber
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_set_revocationDate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_sort
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_set_nextUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_set_lastUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_set_issuer_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_set_version
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set0_param
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get0_param
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_default
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get_explicit_policy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get0_policy_tree
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_POLICY_TREE_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_verify_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_time
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_depth
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_cleanup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_trusted_stack
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_purpose_inherit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_trust
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_purpose
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set0_crls
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_CRL
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_chain
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get0_parent_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get0_current_crl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get0_current_issuer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get1_chain
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get_chain
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get_current_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get_error_depth
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_error
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get_error
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_set_ex_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get_ex_new_index
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        crypto_ex_data_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_pubkey_parameters
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_time_adj_ex
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_time_adj
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_gmtime_adj
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_cmp_time
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_cmp_current_time
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_verify_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_set_pubkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_set_subject_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_set_version
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_add1_ext_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_get_ext_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_add_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_delete_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_get_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_get_ext_by_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_get_ext_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_get_ext_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REVOKED_get_ext_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_revoked_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_add1_ext_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_ext_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_add_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_delete_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_ext_by_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_ext_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_ext_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_ext_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_add_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_add1_ext_i2d
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_get_ext_d2i
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_delete_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_get_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_get_ext_by_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_get_ext_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_get_ext_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_get_ext_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_check_private_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get0_pubkey_bitstr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_pubkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_find_by_subject
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_find_by_issuer_and_serial
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_hash_old
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_hash
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_subject_name_hash_old
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_subject_name_hash
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_serialNumber
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_subject_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_issuer_name_hash_old
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_issuer_name_hash
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_get_issuer_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_match
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_subject_name_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_issuer_name_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_issuer_and_serial_hash
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_issuer_and_serial_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_ENTRY_get_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_ENTRY_get_object
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_ENTRY_set_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_ENTRY_set_object
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_ENTRY_create_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_ENTRY_create_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_ENTRY_create_by_txt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_add_entry
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_add_entry_by_txt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_add_entry_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_add_entry_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_delete_entry
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_get_entry
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_name_entry_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_get_index_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_get_index_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_entry_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_get_text_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_get_text_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKI_b64_encode
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKI_b64_decode
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKI_get_pubkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKI_set_pubkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_load_cert_crl_file
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_load_crl_file
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_load_cert_file
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_file
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_lookup_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_X509_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_verify_cert_error_string
            </name>
            <type>
                <function>
        <param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_table_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_lookup
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_add0_table
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_get_depth
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_set1_policies
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_ASN1_OBJECT
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_add0_policy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_set_time
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_set_depth
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_set_trust
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_set_purpose
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_get_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_clear_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_set_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_set1_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_set1
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_inherit
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_VERIFY_PARAM_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_certificate_type
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_add1_attr_by_txt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_add1_attr_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_add1_attr_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_add1_attr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_delete_attr
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_get_attr
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_attributes_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_get_attr_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_get_attr_by_NID
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_get_attr_count
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_add_extensions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_add_extensions_nid
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_get_extensions
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_set_extension_nids
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_get_extension_nids
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_extension_nid
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_check_private_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_get_pubkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_to_X509_REQ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PUBKEY_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PUBKEY_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8PrivateKeyInfo_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8_PRIV_KEY_INFO_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS8_PRIV_KEY_INFO_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PUBKEY_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PUBKEY_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PrivateKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PrivateKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8PrivateKeyInfo_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8_PRIV_KEY_INFO_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS8_PRIV_KEY_INFO_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs8_priv_key_info_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS8_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS8_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS8_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_sig_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                PKCS7_ISSUER_AND_SERIAL_digest
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        pkcs7_issuer_and_serial_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_digest
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_digest
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_digest
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_digest
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_pubkey_digest
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ECPrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ECPrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_EC_PUBKEY_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_EC_PUBKEY_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_ECPrivateKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_ECPrivateKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_EC_PUBKEY_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_EC_PUBKEY_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        ec_key_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DSA_PUBKEY_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DSA_PUBKEY_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DSAPrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DSAPrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DSA_PUBKEY_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DSA_PUBKEY_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_DSAPrivateKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_DSAPrivateKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        dsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSA_PUBKEY_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSAPublicKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSA_PUBKEY_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSAPublicKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSAPrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSAPrivateKey_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSA_PUBKEY_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSAPublicKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSA_PUBKEY_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSAPublicKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_RSAPrivateKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_RSAPrivateKey_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        rsa_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_REQ_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_REQ_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_REQ_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_REQ_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_PKCS7_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_PKCS7_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        pkcs7_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_CRL_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_CRL_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_CRL_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_CRL_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                i2d_X509_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                d2i_X509_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKI_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_sign_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_CRL_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_sign_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_sign_ctx
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        env_md_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_sign
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        env_md_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NETSCAPE_SPKI_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        Netscape_spki_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_verify
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_load_locations
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_set_default_paths
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_REQ_to_X509
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_req_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_hash_dir
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_lookup_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_set_pubkey
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        evp_pkey_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_set_notAfter
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_set_notBefore
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_set_subject_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_set_issuer_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_set_serialNumber
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_set_version
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_NAME_oneline
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_set_verify_cb
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_set1_param
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_VERIFY_PARAM_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_set_trust
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_set_purpose
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_set_depth
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_set_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_CTX_get1_issuer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_OBJECT_retrieve_match
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_OBJECT
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_object_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_get1_crls
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_CRL
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_get1_certs
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_OBJECT_retrieve_by_subject
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_OBJECT
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_OBJECT_idx_by_subject
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_OBJECT
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_OBJECT_free_contents
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_object_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_OBJECT_up_ref_count
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_object_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_add_crl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_crl_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_add_cert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_get_by_subject
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_ctx_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_add_lookup
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_STORE_new
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_store_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_by_alias
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_by_fingerprint
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_by_issuer_serial
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_by_subject
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_name_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_ctrl
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <pointer>
        <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_shutdown
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_LOOKUP_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_lookup_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_lookup_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_get_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_get_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_get_object
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_set_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_set_critical
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_set_object
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_create_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_EXTENSION_create_by_NID
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_string_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509v3_add_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509v3_delete_ext
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509v3_get_ext
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        X509_extension_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509v3_get_ext_by_critical
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509v3_get_ext_by_OBJ
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        asn1_object_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509v3_get_ext_by_NID
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509v3_get_ext_count
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        stack_st_X509_EXTENSION
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_TRUST_get_trust
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_trust_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_TRUST_get0_name
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_trust_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_TRUST_get_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_trust_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_TRUST_cleanup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_TRUST_add
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_trust_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_TRUST_set
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_TRUST_get_by_id
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_TRUST_get0
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        x509_trust_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_TRUST_get_count
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_check_trust
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                X509_TRUST_set_default
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        x509_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BF_set_key
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_BF)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BF_cbc_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(OPENSSL_NO_BF) &amp;&amp; !definedEx(BF_DEFAULT_OPTIONS))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BF_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(BF_DEFAULT_OPTIONS) &amp;&amp; !definedEx(_CRAY) &amp;&amp; !definedEx(OPENSSL_NO_BF))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BF_decrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(BF_DEFAULT_OPTIONS) &amp;&amp; definedEx(_CRAY) &amp;&amp; !definedEx(OPENSSL_NO_BF))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BF_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (!definedEx(_CRAY) &amp;&amp; !definedEx(OPENSSL_NO_BF))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BF_encrypt
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                (definedEx(_CRAY) &amp;&amp; !definedEx(OPENSSL_NO_BF))
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BF_cfb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_BF)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BF_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_BF)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BF_options
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_BF)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                BF_ofb64_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <signed>
        <long/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        bf_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_BF)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                ERR_load_CONF_strings
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_no_config
            </name>
            <type>
                <function>
        <ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_config
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _CONF_new_section
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _CONF_free_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _CONF_new_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _CONF_get_string
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _CONF_add_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _CONF_get_section_values
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                _CONF_get_section
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_dump_bio
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_dump_fp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_get_number_e
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_get_string
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_get_section
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_load_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_load_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_load
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_free_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_method_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_dump_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_dump_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_get_number
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <long/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_get_string
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_get_section
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        stack_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_load_bio
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        bio_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_load_fp
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _IO_FILE
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_load
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <signed>
        <long/>
    </signed>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_set_default_method
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_method_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_set_nconf
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        lhash_st_CONF_VALUE
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_parse_list
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_get1_default_config_file
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_module_set_usr_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_module_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_module_get_usr_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_module_st
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_imodule_set_flags
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_imodule_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_imodule_get_flags
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_imodule_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_imodule_get_module
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_imodule_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        conf_module_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_imodule_set_usr_data
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_imodule_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_imodule_get_usr_data
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_imodule_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_imodule_get_value
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_imodule_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_imodule_get_name
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_imodule_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_modules_free
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_module_add
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_imodule_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        conf_imodule_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_modules_finish
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_modules_unload
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_modules_load_file
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CONF_modules_load
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        conf_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_load_builtin_modules
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_WIN32
            </name>
            <type>
                <function>
        <ret>
            <pointer>
        <struct isUnion="false">
        conf_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                NCONF_default
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        conf_method_st
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                WHIRLPOOL
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                WHIRLPOOL_Final
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                WHIRLPOOL_BitUpdate
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                WHIRLPOOL_Update
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <void/>
    </pointer>
        </const>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                WHIRLPOOL_Init
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <astruct isUnion="false">
        
    </astruct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_stderr
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <void/>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OpenSSLDie
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_isservice
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_showfatal
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <vargs/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_cpuid_setup
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_ASM)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                OPENSSL_ia32cap_loc
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <unsigned>
        <long/>
    </unsigned>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_lock_name
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_add_lock
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_lock
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_thread_id
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_id_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <void/>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_id_callback
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <function>
        <param>
            <void/>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_THREADID_hash
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <unsigned>
        <long/>
    </unsigned>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_THREADID_cpy
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_THREADID_cmp
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_THREADID_current
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_THREADID_get_callback
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_THREADID_set_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_THREADID_set_pointer
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_THREADID_set_numeric
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        crypto_threadid_st
    </struct>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_add_lock_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_locking_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_add_lock_callback
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_locking_callback
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_dynlock_destroy_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CRYPTO_dynlock_value
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_dynlock_lock_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CRYPTO_dynlock_value
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_set_dynlock_create_callback
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CRYPTO_dynlock_value
    </struct>
    </pointer>
        </ret>
    </function>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_dynlock_destroy_callback
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <function>
        <param>
            <pointer>
        <struct isUnion="false">
        CRYPTO_dynlock_value
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_dynlock_lock_callback
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><param>
            <pointer>
        <struct isUnion="false">
        CRYPTO_dynlock_value
    </struct>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_dynlock_create_callback
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <pointer>
        <function>
        <param>
            <const>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </const>
        </param><param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CRYPTO_dynlock_value
    </struct>
    </pointer>
        </ret>
    </function>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_dynlock_value
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        CRYPTO_dynlock_value
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_destroy_dynlockid
            </name>
            <type>
                <function>
        <param>
            <signed>
        <int/>
    </signed>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_new_dynlockid
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_num_locks
            </name>
            <type>
                <function>
        <param>
            <void/>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                CRYPTO_get_new_lockid
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <nosign>
        <char/>
    </nosign>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                Camellia_ctr128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <array length="-1">
        <unsigned>
        <char/>
    </unsigned>
    </array>
        </param><param>
            <pointer>
        <unsigned>
        <int/>
    </unsigned>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                Camellia_ecb_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                Camellia_cfb8_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                Camellia_cfb1_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                Camellia_cfb128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                Camellia_ofb128_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <unsigned>
        <long/>
    </unsigned>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <signed>
        <int/>
    </signed>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                Camellia_set_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                Camellia_decrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                Camellia_encrypt
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <const>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </const>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                private_Camellia_set_key
            </name>
            <type>
                <function>
        <param>
            <const>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </const>
        </param><param>
            <const>
            <signed>
        <int/>
    </signed>
        </const>
        </param><param>
            <pointer>
        <struct isUnion="false">
        camellia_key_st
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                !definedEx(OPENSSL_NO_CAMELLIA)
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pqueue_size
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _pqueue
    </struct>
    </pointer>
        </param><ret>
            <signed>
        <int/>
    </signed>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pqueue_next
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <pointer>
        <struct isUnion="false">
        _pitem
    </struct>
    </pointer>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        _pitem
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pqueue_iterator
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _pqueue
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        _pitem
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pqueue_print
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _pqueue
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pqueue_find
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _pqueue
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        _pitem
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pqueue_pop
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _pqueue
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        _pitem
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pqueue_peek
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _pqueue
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        _pitem
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pqueue_insert
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _pqueue
    </struct>
    </pointer>
        </param><param>
            <pointer>
        <struct isUnion="false">
        _pitem
    </struct>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        _pitem
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pqueue_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _pqueue
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pqueue_new
            </name>
            <type>
                <function>
        <ret>
            <pointer>
        <struct isUnion="false">
        _pqueue
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pitem_free
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <struct isUnion="false">
        _pitem
    </struct>
    </pointer>
        </param><ret>
            <void/>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export><export>
            <sig>
            <name>
                pitem_new
            </name>
            <type>
                <function>
        <param>
            <pointer>
        <unsigned>
        <char/>
    </unsigned>
    </pointer>
        </param><param>
            <pointer>
        <void/>
    </pointer>
        </param><ret>
            <pointer>
        <struct isUnion="false">
        _pitem
    </struct>
    </pointer>
        </ret>
    </function>
            </type>
            <featureexpr>
                1
            </featureexpr><pos>
            <file>
                
            </file>
            <line>
                -1
            </line>
            <col>
                -1
            </col>
        </pos>
        </sig>
        </export>
        </interface>