fm True
features (0)
	
imports (5)
	OBJ_obj2nid: (const struct asn1_object_st*) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:128:6
	OPENSSL_uni2asc: (unsigned char*, signed int) => char* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:142:8
	X509at_add1_attr_by_NID: (struct stack_st_X509_ATTRIBUTE**, signed int, signed int, const unsigned char*, signed int) => struct stack_st_X509_ATTRIBUTE* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:114:5, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:104:5, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:93:5, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:81:5, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:68:5
	sk_num: (const struct stack_st*) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:142:30, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:142:30
	sk_value: (const struct stack_st*, signed int) => void* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:144:43, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:144:43
exports (7)
	PKCS12_add_CSPName_asc: (struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}*, const char*, signed int) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:111:4
	PKCS12_add_friendlyname_asc: (struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}*, const char*, signed int) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:90:4
	PKCS12_add_friendlyname_uni: (struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}*, const unsigned char*, signed int) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:101:4
	PKCS12_add_localkeyid: (struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}*, unsigned char*, signed int) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:65:4
	PKCS12_get_attr_gen: (struct stack_st_X509_ATTRIBUTE*, signed int) => struct asn1_type_st* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:121:11
	PKCS12_get_friendlyname: (struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}*) => char* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:137:6
	PKCS8_add_keyusage: (struct pkcs8_priv_key_info_st*, signed int) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_attr.c:77:4
