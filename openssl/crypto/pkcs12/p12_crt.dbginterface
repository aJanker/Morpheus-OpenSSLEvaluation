fm True
features (0)
	
imports (31)
	ERR_put_error: (signed int, signed int, signed int, const char*, signed int) => void 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/err.h:135:33, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/err.h:135:33
	EVP_PKEY2PKCS8: (struct evp_pkey_st*) => struct pkcs8_priv_key_info_st* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:236:11
	EVP_PKEY_get_attr: (const struct evp_pkey_st*, signed int) => struct x509_attributes_st* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:73:8
	EVP_PKEY_get_attr_by_NID: (const struct evp_pkey_st*, signed int, signed int) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:70:7
	EVP_sha1: () => const struct env_md_st* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:111:20, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:111:20
	PKCS12_MAKE_KEYBAG: (struct pkcs8_priv_key_info_st*) => struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:246:8
	PKCS12_MAKE_SHKEYBAG: (signed int, const char*, signed int, unsigned char*, signed int, signed int, struct pkcs8_priv_key_info_st*) => struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:242:8
	PKCS12_SAFEBAG_free: (struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}*) => void 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:259:2, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:221:2, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:1324:88, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:1324:88, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:1324:88, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:1324:88, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:1324:88, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:1324:88
	PKCS12_add_friendlyname_asc: (struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}*, const char*, signed int) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/pkcs12.h:91:32, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/pkcs12.h:91:32, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/pkcs12.h:91:32
	PKCS12_add_localkeyid: (struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}*, unsigned char*, signed int) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:210:14, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:150:18, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:119:18
	PKCS12_free: (struct {Map(version -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(version),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), mac -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(mac),List()),One(CType(CPointer(CAnonymousStruct(Map(dinfo -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(dinfo),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), salt -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(salt),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), iter -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(iter),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false)))))),false)),false,false,false))))), authsafes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(authsafes),List()),One(CType(CPointer(CStruct(pkcs7_st,false)),false,false,false))))))}*) => void 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:353:2, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:178:2
	PKCS12_init: (signed int) => struct {Map(version -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(version),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), mac -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(mac),List()),One(CType(CPointer(CAnonymousStruct(Map(dinfo -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(dinfo),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), salt -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(salt),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), iter -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(iter),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false)))))),false)),false,false,false))))), authsafes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(authsafes),List()),One(CType(CPointer(CStruct(pkcs7_st,false)),false,false,false))))))}* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:346:7
	PKCS12_pack_authsafes: (struct {Map(version -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(version),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), mac -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(mac),List()),One(CType(CPointer(CAnonymousStruct(Map(dinfo -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(dinfo),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), salt -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(salt),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), iter -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(iter),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false)))))),false)),false,false,false))))), authsafes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(authsafes),List()),One(CType(CPointer(CStruct(pkcs7_st,false)),false,false,false))))))}*, struct stack_st_PKCS7*) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:351:5
	PKCS12_pack_p7data: (struct stack_st_PKCS12_SAFEBAG*) => struct pkcs7_st* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:285:7
	PKCS12_pack_p7encdata: (signed int, const char*, signed int, unsigned char*, signed int, signed int, struct stack_st_PKCS12_SAFEBAG*) => struct pkcs7_st* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:287:7
	PKCS12_set_mac: (struct {Map(version -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(version),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), mac -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(mac),List()),One(CType(CPointer(CAnonymousStruct(Map(dinfo -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(dinfo),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), salt -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(salt),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), iter -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(iter),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false)))))),false)),false,false,false))))), authsafes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(authsafes),List()),One(CType(CPointer(CStruct(pkcs7_st,false)),false,false,false))))))}*, const char*, signed int, unsigned char*, signed int, signed int, const struct env_md_st*) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:170:3
	PKCS12_x5092certbag: (struct x509_st*) => struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:196:12
	PKCS7_free: (struct pkcs7_st*) => void 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:305:2, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:1346:70, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:1346:70, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:1346:70, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:1346:70
	PKCS8_PRIV_KEY_INFO_free: (struct pkcs8_priv_key_info_st*) => void 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:243:2
	PKCS8_add_keyusage: (struct pkcs8_priv_key_info_st*, signed int) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:238:18
	X509_alias_get0: (struct x509_st*, signed int*) => unsigned char* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:203:16
	X509_check_private_key: (struct x509_st*, struct evp_pkey_st*) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:109:6
	X509_digest: (const struct x509_st*, const struct env_md_st*, unsigned char*, unsigned int*) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:111:2
	X509_keyid_get0: (struct x509_st*, signed int*) => unsigned char* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:208:9
	X509at_add1_attr: (struct stack_st_X509_ATTRIBUTE**, struct x509_attributes_st*) => struct stack_st_X509_ATTRIBUTE* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:74:6
	sk_free: (struct stack_st*) => void 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:140:31, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:140:31
	sk_new_null: () => struct stack_st* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:138:50, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:138:50
	sk_num: (const struct stack_st*) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:142:30
	sk_pop_free: (struct stack_st*, (void*) => void*) => void 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:170:46, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:170:46, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:170:46, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:170:46, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:170:46
	sk_push: (struct stack_st*, void*) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:150:36, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:150:36
	sk_value: (const struct stack_st*, signed int) => void* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:144:43, file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/include/openssl/safestack.h:144:43
exports (5)
	PKCS12_add_cert: (struct stack_st_PKCS12_SAFEBAG**, struct x509_st*) => struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:187:16
	PKCS12_add_key: (struct stack_st_PKCS12_SAFEBAG**, struct evp_pkey_st*, signed int, signed int, signed int, char*) => struct {Map(type -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(type),List()),One(CType(CPointer(CStruct(asn1_object_st,false)),false,false,false))))), value -> List((True,(AtomicNamedDeclarator(List(),Id(value),List()),One(CType(CAnonymousStruct(Map(keybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(keybag),List()),One(CType(CPointer(CStruct(pkcs8_priv_key_info_st,false)),false,false,false))))), bag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(bag),List()),One(CType(CPointer(CStruct(pkcs12_bag_st,false)),false,false,false))))), safes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(safes),List()),One(CType(CPointer(CStruct(stack_st_PKCS12_SAFEBAG,false)),false,false,false))))), shkeybag -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(shkeybag),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), other -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(other),List()),One(CType(CPointer(CStruct(asn1_type_st,false)),false,false,false)))))),true),false,false,false))))), attrib -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(attrib),List()),One(CType(CPointer(CStruct(stack_st_X509_ATTRIBUTE,false)),false,false,false))))))}* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:227:16
	PKCS12_add_safe: (struct stack_st_PKCS7**, struct stack_st_PKCS12_SAFEBAG*, signed int, signed int, char*) => signed int 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:265:4
	PKCS12_add_safes: (struct stack_st_PKCS7*, signed int) => struct {Map(version -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(version),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), mac -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(mac),List()),One(CType(CPointer(CAnonymousStruct(Map(dinfo -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(dinfo),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), salt -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(salt),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), iter -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(iter),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false)))))),false)),false,false,false))))), authsafes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(authsafes),List()),One(CType(CPointer(CStruct(pkcs7_st,false)),false,false,false))))))}* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:341:8
	PKCS12_create: (char*, char*, struct evp_pkey_st*, struct x509_st*, struct stack_st_X509*, signed int, signed int, signed int, signed int, signed int) => struct {Map(version -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(version),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), mac -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(mac),List()),One(CType(CPointer(CAnonymousStruct(Map(dinfo -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(dinfo),List()),One(CType(CPointer(CStruct(X509_sig_st,false)),false,false,false))))), salt -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(salt),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false))))), iter -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(iter),List()),One(CType(CPointer(CStruct(asn1_string_st,false)),false,false,false)))))),false)),false,false,false))))), authsafes -> List((True,(AtomicNamedDeclarator(List(Opt(True,Pointer(List()))),Id(authsafes),List()),One(CType(CPointer(CStruct(pkcs7_st,false)),false,false,false))))))}* 		if True		at file /local/janker/paper/cRefactor-OpenSSLEvaluation/openssl/crypto/pkcs12/p12_crt.c:79:8
